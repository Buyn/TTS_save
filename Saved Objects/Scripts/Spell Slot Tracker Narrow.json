{
  "SaveName": "",
  "GameMode": "",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "",
  "Table": "",
  "Sky": "",
  "Note": "",
  "Rules": "",
  "XmlUI": "",
  "LuaScript": "",
  "LuaScriptState": "",
  "ObjectStates": [
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 2.500984,
        "posY": 1.00749445,
        "posZ": -3.42584181,
        "rotX": 0.04000148,
        "rotY": 270.0278,
        "rotZ": 359.939423,
        "scaleX": 0.863914251,
        "scaleY": 1.0,
        "scaleZ": 0.863914251
      },
      "Nickname": "Resource Tracker",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/Olf7EJr.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 25.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- Based on \"Universal Counter Tokens\" coded by: MrStump\r\n-- Modifications by Malle\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {}\r\n        data_to_save.saved_counts = {}\r\n        for i,v in pairs(buttons.counts) do\r\n            data_to_save.saved_counts[tostring(i)] = v or 0\r\n        end\r\n\r\n    saved_data = JSON.encode(data_to_save)\r\n\r\n    --Uncomment this line to reset the save data, necessary when messing with variable names\r\n    --saved_data = ''\r\n    return saved_data\r\nend\r\n\r\n\r\n-- *****************************************************************************\r\n-- OnLoad startup\r\n-- *****************************************************************************\r\n-- Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    original_rot = {['x'] = 0,['y'] = 180,['z'] = 0}\r\n    initButtonsTable()\r\n    objs = {}\r\n\r\n    ------------------------------\r\n    --Edit below this line\r\n    ------------------------------\r\n\r\n    -- LockLevel:\r\n    --  0: always locked\r\n    --  1: locked if semi- or full lock\r\n    --  2: locked only in full lock\r\n    --  3+: not locked\r\n\r\n    thick = 0.099; sub_parameters_x = -2.00; dd = 1.15; dy = -4.8; dx = 5.1\r\n\r\n    createCounter('lockButton', 'wideToggle', 2.680, 0.75, 0, 3)\r\n\r\n\r\n\r\n    px = 0.980; dx = 1.700;\r\n    py = 0.040; dy = 1;\r\n    createTextField('resourceName', 'txtbig2', -1.65, py+0*dy, \"[Resource Name]\", 1);\r\n    createCounter('resourceMax',  'big',  px+0*dx, py+0*dy, 0, 1);\r\n    createCounter('resourceUsed', 'big',  px+1*dx, py+0*dy, 0, 2);\r\n\r\n    --if you added a location, you need to give it a position, coordinates are relative to the center of the model\r\n    --buttons.params.positions.test = {x = 3.67, y = 0.59, z = 3.1}\r\n\r\n    ------------------------------\r\n    --Don't touch below this line\r\n    ------------------------------\r\n\r\n    for i,v in pairs(buttons) do\r\n        buttons.counts[tostring(i)] = 0\r\n\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            self.setVar(tostring(i) .. 'PlusOne', function () plus(tostring(i), 1) end)\r\n            self.setVar(tostring(i) .. 'PlusFive', function () plus(tostring(i), 100) end)\r\n            self.setVar(tostring(i) .. 'PlusTen', function () plus(tostring(i), 10) end)\r\n            self.setVar(tostring(i) .. 'MinusOne', function () minus(tostring(i), 1) end)\r\n            self.setVar(tostring(i) .. 'MinusFive', function () minus(tostring(i), 100) end)\r\n            self.setVar(tostring(i) .. 'MinusTen', function () minus(tostring(i), 10) end)\r\n            self.setVar(tostring(i) .. 'DispClick', function () dispclick(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'ProfClick', function () profclick(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'LockClick', function () lockForm(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'EditClick', function () editclick(tostring(i)) end)\r\n        end\r\n    end\r\n\r\n    generateButtonParamiters()\r\n\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'buttons.counts.ct'\r\n\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        buttons.counts = loaded_data.saved_counts\r\n        for i,v in pairs(buttons) do\r\n            if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params'  and tostring(i) != 'targetFunc' then\r\n                if buttons.counts[tostring(i)] == nil then\r\n                    buttons.counts[tostring(i)] = 0\r\n                end\r\n            end\r\n        end\r\n    else\r\n        for i,v in pairs(buttons) do\r\n            if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params'  and tostring(i) != 'targetFunc' then\r\n                if buttons[tostring(i)].defaultValue == nil then\r\n                    buttons.counts[tostring(i)] = 0\r\n                else\r\n                    buttons.counts[tostring(i)] = buttons[tostring(i)].defaultValue\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    updateDisplay(true)\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Form creation functions\r\n-- *****************************************************************************\r\nfunction createTextField(sname, type, px, py, defaultValue, lockLevel)\r\n    name = '__' .. sname;\r\n    buttons[name] = { type = type }\r\n    buttons.params.positions[name] = {x = px, y = thick, z = py}\r\n    buttons[name].defaultValue = defaultValue\r\n    buttons[name].lockLevel = lockLevel\r\nend\r\n\r\nfunction createSubCounter(name, py, defaultValue, lockLevel)\r\n    createCounter('p_s_' .. name, 'toggle', sub_parameters_x - 0.72, py, 0, lockLevel)\r\n    createCounter('s_' .. name, 'small', sub_parameters_x, py, defaultValue, lockLevel)\r\nend\r\n\r\nfunction createCounter(name, btype, px, py, defaultValue, lockLevel)\r\n    buttons[name] = {type = btype}\r\n    buttons.params.positions[name] = {x = px, y = thick, z = py}\r\n    buttons[name].defaultValue = defaultValue\r\n    buttons[name].lockLevel = lockLevel\r\nend\r\n\r\nfunction createValue(name, btype, px, py, defaultValue)\r\n    createCounter('v_' .. name, btype, px, py, defaultValue)\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Standardized form sizes\r\n-- *****************************************************************************\r\nfunction initButtonsTable()\r\n\r\n    buttons = {}\r\n    buttons.index = 0\r\n    buttons.counts = {}\r\n    buttons.params = {}\r\n    buttons.params.positions = {}\r\n    buttons.params.positions.offsets = {}\r\n    buttons.params.sizes = {}\r\n    buttons.targetFunc = {}\r\n\r\n    --make a style of button by adding a new size\r\n    buttons.params.sizes.std = {\r\n        display = {width = 200, height = 150, font = 100},\r\n        button = {width = 50, height = 50, font = 50},\r\n        offsets = { bottomButtons = {x = 0.3, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.mid = {\r\n        display = {width = 0, height = 0, font = 280},\r\n        button = {width = 140, height = 130, font = 150},\r\n        offsets = { bottomButtons = {x = 0.36, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.big = {\r\n        display = {width = 0, height = 0, font = 400},\r\n        button = {width = 160, height = 160, font = 230},\r\n        offsets = { bottomButtons = {x = 0.420, y = 0, z = -0.01}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.mid10 = {\r\n        display = {width = 0, height = 0, font = 280},\r\n        button = {width = 280, height = 170, font = 150},\r\n        offsets = { bottomButtons = {x = 0.9, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.big10 = {\r\n        display = {width = 0, height = 0, font = 450},\r\n        button = {width = 400, height = 210, font = 220},\r\n        offsets = { bottomButtons = {x = 1.5, y = 0, z = 0}, topButtons = {x = 2.4, y = 0, z = -0} }\r\n    }\r\n    buttons.params.sizes.small = {\r\n        display = {width = 0, height = 0, font = 140},\r\n        button = {width = 110, height = 100, font = 140},\r\n        offsets = { bottomButtons = {x = 0.3, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.toggle = {\r\n        display = {width = 200, height = 170, font = 160},\r\n        button = {width = 60, height = 60, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.toggleBig = {\r\n        display = {width = 540, height = 380, font = 400},\r\n        button = {width = 60, height = 60, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.wideToggle = {\r\n        display = {width = 500, height = 120, font = 90},\r\n        button = {width = 60, height = 400, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.xp = {\r\n        display = {width = 0, height = 0, font = 150},\r\n        button = {width = 220, height = 150, font = 80},\r\n        offsets = { bottomButtons = {x = 1.15, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.hd = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = {width = 220, height = 150, font = 80},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = -0.4}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.hdBig = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = {width = 280, height = 170, font = 150},\r\n        offsets = { bottomButtons = {x = 0.9, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt = {\r\n        display = {width = 0, height = 0, font = 70},\r\n        button = {width = 160, height = 110, font = 80},\r\n        offsets = { bottomButtons = {x = -2.1, y = 0, z = -0.3}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt2 = {\r\n        display = buttons.params.sizes.txt.display, button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -2.3, y = 0, z = -1.3}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt3 = {\r\n        display = buttons.params.sizes.txt.display, button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -1.7, y = 0, z = -1.45}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txtbig = {\r\n        display = {width = 0, height = 0, font = 150},\r\n        button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = 3.70, y = 0, z = 0}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txtbig2 = {\r\n        display = {width = 0, height = 0, font = 250},\r\n        button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -1.4, y = 0, z = -0.5}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Button press functions\r\n-- *****************************************************************************\r\nfunction editclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        nm = tostring(location) --string.gsub(location, \"\", \"\")\r\n        --print(\"Edit click \" .. nm)\r\n        local sizes = buttons.params.sizes[buttons[nm].type].offsets\r\n        --print(sizes)\r\n        mpos = self.getPosition(); pos = buttons.params.positions[nm]\r\n        --print(self.getRotation()[1]); print(self.getRotation()[2]); print(self.getRotation()[3]);\r\n        --scale = self.getScale();    print(scale[3])\r\n        local btns = self.getButtons()\r\n        if (btns == nil) then return end\r\n        --print(buttons)\r\n        button = nil\r\n        fname = tostring(location) .. 'EditClick'\r\n        --for i,v in pairs(btns) do\r\n            --print(tostring(i) .. ' :: ' .. tostring(v.click_function))\r\n        --    if (v.click_function == fname) then\r\n        --        button = v\r\n        --        break\r\n        --    end\r\n        --end\r\n        --if (button == nil) then return end\r\n        --print(\"z = \" .. tostring(pos.z))\r\n        --pos = button.position\r\n        --ppos = button.position\r\n        ppos = {pos.x - sizes.bottomButtons.x - 0.3, pos.y, pos.z*1.4 + sizes.bottomButtons.z*1.4}--ppos = {pos.x*1.1 - sizes.bottomButtons.x*1.3, pos.y, pos.z-2 + (pos.z+3.8) * 0.25}\r\n        --ppos = {pos.x - sizes.bottomButtons.x, pos.y, pos.z + sizes.bottomButtons.z/2}\r\n        --print(tostring(pos[1]) .. ' , ' .. tostring(pos[2]) .. ' , ' .. tostring(pos[3]))\r\n        --print(tostring(pos.x) .. ' , ' .. tostring(pos.y) .. ' , ' .. tostring(pos.z))\r\n        if (objs[nm] != nil) then\r\n            buttons.counts[nm] = objs[nm].getDescription()\r\n            destroyObject(objs[nm])\r\n            objs[nm] = nil\r\n        else\r\n            local pos = self.getPosition()\r\n            local rot = self.getRotation()\r\n            local sca = self.getScale()\r\n            print('Pos: ' .. pos['x'] .. ', ' .. pos['y'] .. ', ' .. pos['z'])\r\n            print('Rot: ' .. rot['x'] .. ', ' .. rot['y'] .. ', ' .. rot['z'])\r\n            print('Sca: ' .. sca['x'] .. ', ' .. sca['y'] .. ', ' .. sca['z'])\r\n            local pawn_pos = {}\r\n            pawn_pos['x'] = pos['x']+ppos[1]--+1.2\r\n            pawn_pos['z'] = pos['z']-ppos[3] --1.8\r\n            --translate point to origin\r\n            local tempX = (pawn_pos['x'] - pos['x'])*sca['x']\r\n            local tempZ = (pawn_pos['z'] - pos['z'])*sca['z']\r\n            --now apply rotation\r\n            local rad_rot = math.rad(original_rot['y'] - rot['y'])\r\n            local obj_rotatedX = tempX * math.cos(rad_rot) - tempZ * math.sin(rad_rot)\r\n            local obj_rotatedZ = tempX * math.sin(rad_rot) + tempZ * math.cos(rad_rot);\r\n            --translate back\r\n            local new_pawn_x = obj_rotatedX + pos['x'];\r\n            local new_pawn_z = obj_rotatedZ + pos['z'];\r\n            local params = {}\r\n            --params.type = 'PlayerPawn'\r\n            local final_pos={new_pawn_x, pos['y']+1, new_pawn_z}\r\n\r\n            o = spawnObject({\r\n                type = 'backgammon_piece_brown',\r\n                --position = {mpos[1] + pos.x, mpos[2] + pos.y+2, mpos[3] - pos.z},\r\n                position = final_pos, --{mpos[1] + pos[1], mpos[2] + pos[2]+2, mpos[3] - pos[3]},\r\n                --position = button.position,\r\n                scale = {0.4, 0.4, 0.4}\r\n            })\r\n            --o.position = button.position\r\n            objs[nm] = o\r\n            o.setDescription(tostring(buttons.counts[nm]))\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction dud()\r\n\r\nend\r\n\r\nfunction profclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] >= 3) then\r\n            dd = -2*buttons.counts[\"profbonus\"]\r\n            buttons.counts[location] = 0\r\n        elseif (buttons.counts[location] <= 0) then\r\n            dd = math.floor(0.5*buttons.counts[\"profbonus\"])\r\n            buttons.counts[location] = 1\r\n        elseif (buttons.counts[location] == 1) then\r\n            dd = math.ceil(0.5*buttons.counts[\"profbonus\"])\r\n            buttons.counts[location] = 2\r\n        else\r\n            dd = buttons.counts[\"profbonus\"]\r\n            buttons.counts[location] = 3\r\n        end\r\n        sf = string.sub(location, 3, string.len(location));\r\n        --print(location .. ' => ' .. sf)\r\n\r\n        --Added an extra \"if\" statement to account for independent toggle buttons (Such as Death Saving Throws)\r\n        if (buttons.counts[sf] != nil) then\r\n            buttons.counts[sf] = buttons.counts[sf] + dd\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction dispclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] > 0) then\r\n            dd = -2\r\n            buttons.counts[location] = 0\r\n        else\r\n            dd = 2\r\n            buttons.counts[location] = 1\r\n        end\r\n        sf = string.sub(location, 3, string.len(location));\r\n        --print(location .. ' => ' .. sf)\r\n\r\n        --Added an extra \"if\" statement to account for independent toggle buttons (Such as Death Saving Throws)\r\n        if (buttons.counts[sf] != nil) then\r\n            buttons.counts[sf] = buttons.counts[sf] + dd\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction plus(location, amount)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (location == \"str\") or (location == \"dex\") or (location == \"cons\") or (location == \"int\") or (location == \"wis\") or (location == \"cha\") then\r\n            updateAbilityModifiers(location,amount)\r\n        end\r\n\r\n        buttons.counts[location] = buttons.counts[location] + amount\r\n\r\n        if (location == \"profbonus\") then\r\n            updateProficiencyModifiers(amount)\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction minus(location, amount)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (location == \"str\") or (location == \"dex\") or (location == \"cons\") or (location == \"int\") or (location == \"wis\") or (location == \"cha\") then\r\n            updateAbilityModifiers(location,-amount)\r\n        end\r\n\r\n        --Prevents count from going below 0\r\n        --if buttons.counts[location] > amount - 1 then\r\n            buttons.counts[location] = buttons.counts[location] - amount\r\n        --else\r\n        --    buttons.counts[location] = 0\r\n        --end\r\n\r\n        if (location == \"profbonus\") then\r\n            updateProficiencyModifiers(-amount)\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction lockForm(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] > 1) then\r\n            buttons.counts[location] = 0\r\n        elseif (buttons.counts[location] == 1) then\r\n            buttons.counts[location] = 2\r\n        else\r\n            buttons.counts[location] = 1\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Value update functions\r\n-- *****************************************************************************\r\nfunction updateAbilityModifiers(location,amount)\r\n    prevval = buttons.counts[location]\r\n    newval = prevval + amount\r\n\r\n    oldmod = buttons.counts['v_' .. location]\r\n    newmod = math.floor(newval / 2) - 5\r\n\r\n    buttons.counts['v_' .. location] = newmod\r\n\r\n    updateAbilityModifier(location,oldmod,newmod)\r\n\r\n    if (location == \"str\") then\r\n        updateAbilityModifier('athlet',oldmod,newmod)\r\n    elseif (location == \"dex\") then\r\n        updateAbilityModifier('acrobat',oldmod,newmod)\r\n        updateAbilityModifier('sleight',oldmod,newmod)\r\n        updateAbilityModifier('stealth',oldmod,newmod)\r\n        updateAbilityModifier('initiative',oldmod,newmod)\r\n    elseif (location == \"cons\") then\r\n    elseif (location == \"int\") then\r\n        updateAbilityModifier('arcana',oldmod,newmod)\r\n        updateAbilityModifier('hist',oldmod,newmod)\r\n        updateAbilityModifier('invest',oldmod,newmod)\r\n        updateAbilityModifier('nature',oldmod,newmod)\r\n        updateAbilityModifier('relig',oldmod,newmod)\r\n    elseif (location == \"wis\") then\r\n        updateAbilityModifier('animal',oldmod,newmod)\r\n        updateAbilityModifier('insight',oldmod,newmod)\r\n        updateAbilityModifier('medic',oldmod,newmod)\r\n        updateAbilityModifier('percep',oldmod,newmod)\r\n        updateAbilityModifier('surv',oldmod,newmod)\r\n        --updateAbilityModifier('passwis',oldmod,newmod)\r\n    elseif (location == \"cha\") then\r\n        updateAbilityModifier('decep',oldmod,newmod)\r\n        updateAbilityModifier('inti',oldmod,newmod)\r\n        updateAbilityModifier('perfor',oldmod,newmod)\r\n        updateAbilityModifier('persu',oldmod,newmod)\r\n    end\r\nend\r\n\r\nfunction updateAbilityModifier(profname,oldmod,newmod)\r\n    )\r\n    increase = newmod - oldmod\r\n    if (profname == \"initiative\") or (profname == \"passwis\") then\r\n        buttons.counts[profname] = buttons.counts[profname] + increase\r\n    else\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + increase\r\n    end\r\nend\r\n\r\nfunction updateProficiencyModifiers(profamount)\r\n    -- When proficiency modifier is adjusted, update skill modifiers accordingly\r\n\r\n    prevProf = buttons.counts[\"profbonus\"] - profamount\r\n    newProf = buttons.counts[\"profbonus\"]\r\n\r\n    updateProficiencyModifier('acrobat',prevProf,newProf)\r\n    updateProficiencyModifier('animal',prevProf,newProf)\r\n    updateProficiencyModifier('arcana',prevProf,newProf)\r\n    updateProficiencyModifier('athlet',prevProf,newProf)\r\n    updateProficiencyModifier('decep',prevProf,newProf)\r\n    updateProficiencyModifier('hist',prevProf,newProf)\r\n    updateProficiencyModifier('insight',prevProf,newProf)\r\n    updateProficiencyModifier('inti',prevProf,newProf)\r\n    updateProficiencyModifier('invest',prevProf,newProf)\r\n    updateProficiencyModifier('medic',prevProf,newProf)\r\n    updateProficiencyModifier('nature',prevProf,newProf)\r\n    updateProficiencyModifier('percep',prevProf,newProf)\r\n    updateProficiencyModifier('perfor',prevProf,newProf)\r\n    updateProficiencyModifier('persu',prevProf,newProf)\r\n    updateProficiencyModifier('relig',prevProf,newProf)\r\n    updateProficiencyModifier('sleight',prevProf,newProf)\r\n    updateProficiencyModifier('stealth',prevProf,newProf)\r\n    updateProficiencyModifier('surv',prevProf,newProf)\r\n\r\n    updateProficiencyModifier('str',prevProf,newProf)\r\n    updateProficiencyModifier('dex',prevProf,newProf)\r\n    updateProficiencyModifier('cons',prevProf,newProf)\r\n    updateProficiencyModifier('int',prevProf,newProf)\r\n    updateProficiencyModifier('wis',prevProf,newProf)\r\n    updateProficiencyModifier('cha',prevProf,newProf)\r\nend\r\n\r\nfunction updateProficiencyModifier(profname,prevamount,newamount)\r\n    increase = newamount - prevamount\r\n    profstate = buttons.counts['p_s_' .. profname]\r\n    if (profstate == 1) then\r\n        prevbonus = math.floor(prevamount/2)\r\n        newbonus = math.floor(newamount/2)\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + newbonus - prevbonus\r\n    elseif (profstate == 2) then\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + increase\r\n    elseif (profstate == 3) then\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + 2*increase\r\n    end\r\nend\r\n\r\n\r\n-- *****************************************************************************\r\n-- Update field labels based on content\r\n-- *****************************************************************************\r\nfunction updateDisplay(firstTime)\r\n    for i,v in pairs(buttons) do\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            if (tostring(i) == \"lockButton\") then\r\n                if (buttons.counts[tostring(i)] > 1) then\r\n                    buttons[tostring(i)].display.label = \"TOTAL LOCK\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                elseif (buttons.counts[tostring(i)] == 1) then\r\n                    buttons[tostring(i)].display.label = \"SEMI LOCK\"\r\n                else\r\n                    buttons[tostring(i)].display.label = \"UNLOCKED\"\r\n                end\r\n            elseif (buttons[tostring(i)].isToggle == true) then\r\n                if (buttons.counts[tostring(i)] > 0) then\r\n                    buttons[tostring(i)].display.label = \"X\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                else\r\n                    buttons[tostring(i)].display.label = \"\"\r\n                end\r\n\r\n            elseif (buttons[tostring(i)].isProf == true) then\r\n                if (buttons.counts[tostring(i)] <= 0) then\r\n                    buttons[tostring(i)].display.label = \"\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                elseif (buttons.counts[tostring(i)] == 1) then\r\n                    buttons[tostring(i)].display.label = \"/2\"\r\n                elseif (buttons.counts[tostring(i)] == 2) then\r\n                    buttons[tostring(i)].display.label = \"*\"\r\n                else\r\n                    buttons[tostring(i)].display.label = \"x2\"\r\n                end\r\n            else\r\n                if (buttons[tostring(i)].isText == true) then\r\n                    buttons[tostring(i)].display.label = tostring(buttons.counts[tostring(i)])\r\n                    if (objs[tostring(i)] == nil) then\r\n                        buttons[tostring(i)].minusOne.label = \"Edit\"\r\n                    else\r\n                        buttons[tostring(i)].minusOne.label = \"Done\"\r\n                    end\r\n                else\r\n                    buttons[tostring(i)].display.label = tostring(buttons.counts[tostring(i)])\r\n                end\r\n            end\r\n            if (firstTime) then\r\n                self.createButton(buttons[tostring(i)].display)\r\n                if (buttons[tostring(i)].plusOne != nil) then self.createButton(buttons[tostring(i)].plusOne) end\r\n                if (buttons[tostring(i)].minusOne != nil) then self.createButton(buttons[tostring(i)].minusOne) end\r\n                if (tostring(i) == \"xp\") then\r\n                    self.createButton(buttons[tostring(i)].plusFive)\r\n                    self.createButton(buttons[tostring(i)].minusFive)\r\n                elseif ((buttons[tostring(i)].type == \"big10\") or (buttons[tostring(i)].type == \"mid10\")) then\r\n                    self.createButton(buttons[tostring(i)].plusTen)\r\n                    self.createButton(buttons[tostring(i)].minusTen)\r\n                end\r\n            else\r\n                self.editButton(buttons[tostring(i)].display)\r\n                for j,k in pairs(buttons[tostring(i)]) do\r\n                    if (string.sub(j,1,5) == \"minus\") or (string.sub(j,1,4) == \"plus\") then\r\n                        self.editButton(buttons[tostring(i)][j])\r\n                    end\r\n                end\r\n            end\r\n            -- Hide/Show buttons depending on lock status\r\n            if (buttons[tostring(i)].lockLevel <= buttons.counts[\"lockButton\"]) then\r\n                for j,k in pairs(buttons[tostring(i)]) do\r\n                    if (string.sub(j,1,5) == \"minus\") or (string.sub(j,1,4) == \"plus\") then\r\n                        self.editButton({index = buttons[tostring(i)][j].index, position = {0,0,0}, width=0, height=0})\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\n\r\nfunction setupButton(targetFunc, positions, sizes, label, offsets, isLeft)\r\n    local buttonInfo = {}\r\n        buttonInfo.function_owner = self\r\n        buttonInfo.index = buttons.index\r\n        buttonInfo.click_function = targetFunc\r\n\r\n        if isLeft then\r\n            orientationModifier = -1\r\n        else\r\n            orientationModifier = 1\r\n        end\r\n\r\n        if offsets == nil then\r\n            buttonInfo.position = {positions.x, positions.y, positions.z}\r\n        else\r\n            buttonInfo.position = {positions.x + (offsets.x) * orientationModifier, positions.y + offsets.y, positions.z + offsets.z}\r\n        end\r\n\r\n        buttonInfo.width = sizes.width\r\n        buttonInfo.height = sizes.height\r\n        buttonInfo.font_size = sizes.font\r\n        buttonInfo.label = label\r\n    buttons.index = buttons.index + 1\r\n\r\n    return buttonInfo\r\nend\r\n\r\nfunction generateButtonParamiters()\r\n    for i,v in pairs(buttons) do\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            btn = tostring(i)\r\n            prefix = string.sub(btn, 1, 2)\r\n            if (btn == 'lockButton') then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'LockClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isToggle = true\r\n            elseif (prefix == \"__\") then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].minusOne = setupButton(tostring(i) .. 'EditClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, 'Edit', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, true)\r\n                buttons[tostring(i)].isText = true\r\n            elseif (prefix == \"p_\") then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'ProfClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isProf = true\r\n            elseif (prefix == \"v_\") then\r\n                buttons[tostring(i)].display = setupButton('dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n            elseif (prefix != \"t_\" ) then\r\n                buttons[tostring(i)].display = setupButton('dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].plusOne = setupButton(tostring(i) .. 'PlusOne', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, false)\r\n                buttons[tostring(i)].minusOne = setupButton(tostring(i) .. 'MinusOne', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, true)\r\n                if (btn == \"xp\") then\r\n                    buttons[tostring(i)].minusFive = setupButton(tostring(i) .. 'MinusFive', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-100',buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, true)\r\n                    buttons[tostring(i)].plusFive = setupButton(tostring(i) .. 'PlusFive', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+100', buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, false)\r\n                elseif (buttons[tostring(i)].type == \"big10\") or (buttons[tostring(i)].type == \"mid10\") then\r\n                    buttons[tostring(i)].minusTen = setupButton(tostring(i) .. 'MinusTen', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-10',buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, true)\r\n                    buttons[tostring(i)].plusTen = setupButton(tostring(i) .. 'PlusTen', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+10', buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, false)\r\n                end\r\n            -- TO DO: Add treatment of four-state button 0, ??, 1, 2 here\r\n            else\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'DispClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isToggle = true\r\n            end\r\n        end\r\n    end\r\n    --updateDisplay()\r\n\r\nend\r\n",
      "LuaScriptState": "{\"saved_counts\":{\"__resourceName\":\"\\u003fанна\",\"counts\":0,\"index\":0,\"lockButton\":0,\"params\":0,\"resourceMax\":6,\"resourceUsed\":4,\"targetFunc\":0}}",
      "GUID": "3e7bd2"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -8.000984,
        "posY": 0.00250577927,
        "posZ": -0.07415819,
        "rotX": 3.74695155E-08,
        "rotY": 269.9985,
        "rotZ": 3.81231047E-07,
        "scaleX": 1.87605023,
        "scaleY": 1.0,
        "scaleZ": 1.87605023
      },
      "Nickname": "Spell Slot Tracker Narrow",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/OYOL4pA.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 25.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- Based on \"Universal Counter Tokens\" coded by: MrStump\r\n-- Modifications by Malle\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {}\r\n        data_to_save.saved_counts = {}\r\n        for i,v in pairs(buttons.counts) do\r\n            data_to_save.saved_counts[tostring(i)] = v or 0\r\n        end\r\n\r\n    saved_data = JSON.encode(data_to_save)\r\n\r\n    --Uncomment this line to reset the save data, necessary when messing with variable names\r\n    --saved_data = ''\r\n    return saved_data\r\nend\r\n\r\n\r\n-- *****************************************************************************\r\n-- OnLoad startup\r\n-- *****************************************************************************\r\n-- Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    original_rot = {['x'] = 0,['y'] = 180,['z'] = 0}\r\n    initButtonsTable()\r\n    objs = {}\r\n\r\n    ------------------------------\r\n    --Edit below this line\r\n    ------------------------------\r\n\r\n    -- LockLevel:\r\n    --  0: always locked\r\n    --  1: locked if semi- or full lock\r\n    --  2: locked only in full lock\r\n    --  3+: not locked\r\n\r\n    thick = 0.099; sub_parameters_x = -4.00; dd = 1.15; dy = -4.8; dx = 5.1\r\n\r\n    createCounter('lockButton', 'wideToggle', -0.270, -3.40, 0, 3)\r\n\r\n    px = -0.270; dx = 0.780;\r\n    py = -2.815; dy = 0.740;\r\n    createCounter('spellSlotsMax1',  'big',  px+0*dx, py+0*dy, 0, 1);\r\n    createCounter('spellSlotsMax2',  'big',  px+0*dx, py+1*dy, 0, 1);\r\n    createCounter('spellSlotsMax3',  'big',  px+0*dx, py+2*dy, 0, 1);\r\n    createCounter('spellSlotsMax4',  'big',  px+0*dx, py+3*dy, 0, 1);\r\n    createCounter('spellSlotsMax5',  'big',  px+0*dx, py+4*dy, 0, 1);\r\n    createCounter('spellSlotsMax6',  'big',  px+0*dx, py+5*dy, 0, 1);\r\n    createCounter('spellSlotsMax7',  'big',  px+0*dx, py+6*dy, 0, 1);\r\n    createCounter('spellSlotsMax8',  'big',  px+0*dx, py+7*dy, 0, 1);\r\n    createCounter('spellSlotsMax9',  'big',  px+0*dx, py+8*dy, 0, 1);\r\n\r\n    createCounter('spellSlotsUsed1', 'big',  px+1*dx, py+0*dy, 0, 2);\r\n    createCounter('spellSlotsUsed2', 'big',  px+1*dx, py+1*dy, 0, 2);\r\n    createCounter('spellSlotsUsed3', 'big',  px+1*dx, py+2*dy, 0, 2);\r\n    createCounter('spellSlotsUsed4', 'big',  px+1*dx, py+3*dy, 0, 2);\r\n    createCounter('spellSlotsUsed5', 'big',  px+1*dx, py+4*dy, 0, 2);\r\n    createCounter('spellSlotsUsed6', 'big',  px+1*dx, py+5*dy, 0, 2);\r\n    createCounter('spellSlotsUsed7', 'big',  px+1*dx, py+6*dy, 0, 2);\r\n    createCounter('spellSlotsUsed8', 'big',  px+1*dx, py+7*dy, 0, 2);\r\n    createCounter('spellSlotsUsed9', 'big',  px+1*dx, py+8*dy, 0, 2);\r\n\r\n    --if you added a location, you need to give it a position, coordinates are relative to the center of the model\r\n    --buttons.params.positions.test = {x = 3.67, y = 0.59, z = 3.1}\r\n\r\n    ------------------------------\r\n    --Don't touch below this line\r\n    ------------------------------\r\n\r\n    for i,v in pairs(buttons) do\r\n        buttons.counts[tostring(i)] = 0\r\n\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            self.setVar(tostring(i) .. 'PlusOne', function () plus(tostring(i), 1) end)\r\n            self.setVar(tostring(i) .. 'PlusFive', function () plus(tostring(i), 100) end)\r\n            self.setVar(tostring(i) .. 'PlusTen', function () plus(tostring(i), 10) end)\r\n            self.setVar(tostring(i) .. 'MinusOne', function () minus(tostring(i), 1) end)\r\n            self.setVar(tostring(i) .. 'MinusFive', function () minus(tostring(i), 100) end)\r\n            self.setVar(tostring(i) .. 'MinusTen', function () minus(tostring(i), 10) end)\r\n            self.setVar(tostring(i) .. 'DispClick', function () dispclick(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'ProfClick', function () profclick(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'LockClick', function () lockForm(tostring(i)) end)\r\n            self.setVar(tostring(i) .. 'EditClick', function () editclick(tostring(i)) end)\r\n        end\r\n    end\r\n\r\n    generateButtonParamiters()\r\n\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'buttons.counts.ct'\r\n\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        buttons.counts = loaded_data.saved_counts\r\n        for i,v in pairs(buttons) do\r\n            if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params'  and tostring(i) != 'targetFunc' then\r\n                if buttons.counts[tostring(i)] == nil then\r\n                    buttons.counts[tostring(i)] = 0\r\n                end\r\n            end\r\n        end\r\n    else\r\n        for i,v in pairs(buttons) do\r\n            if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params'  and tostring(i) != 'targetFunc' then\r\n                if buttons[tostring(i)].defaultValue == nil then\r\n                    buttons.counts[tostring(i)] = 0\r\n                else\r\n                    buttons.counts[tostring(i)] = buttons[tostring(i)].defaultValue\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    updateDisplay(true)\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Form creation functions\r\n-- *****************************************************************************\r\nfunction createTextField(sname, type, px, py, defaultValue, lockLevel)\r\n    name = '__' .. sname;\r\n    buttons[name] = { type = type }\r\n    buttons.params.positions[name] = {x = px, y = thick, z = py}\r\n    buttons[name].defaultValue = defaultValue\r\n    buttons[name].lockLevel = lockLevel\r\nend\r\n\r\nfunction createSubCounter(name, py, defaultValue, lockLevel)\r\n    createCounter('p_s_' .. name, 'toggle', sub_parameters_x - 0.72, py, 0, lockLevel)\r\n    createCounter('s_' .. name, 'small', sub_parameters_x, py, defaultValue, lockLevel)\r\nend\r\n\r\nfunction createCounter(name, btype, px, py, defaultValue, lockLevel)\r\n    buttons[name] = {type = btype}\r\n    buttons.params.positions[name] = {x = px, y = thick, z = py}\r\n    buttons[name].defaultValue = defaultValue\r\n    buttons[name].lockLevel = lockLevel\r\nend\r\n\r\nfunction createValue(name, btype, px, py, defaultValue)\r\n    createCounter('v_' .. name, btype, px, py, defaultValue)\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Standardized form sizes\r\n-- *****************************************************************************\r\nfunction initButtonsTable()\r\n\r\n    buttons = {}\r\n    buttons.index = 0\r\n    buttons.counts = {}\r\n    buttons.params = {}\r\n    buttons.params.positions = {}\r\n    buttons.params.positions.offsets = {}\r\n    buttons.params.sizes = {}\r\n    buttons.targetFunc = {}\r\n\r\n    --make a style of button by adding a new size\r\n    buttons.params.sizes.std = {\r\n        display = {width = 200, height = 150, font = 100},\r\n        button = {width = 50, height = 50, font = 50},\r\n        offsets = { bottomButtons = {x = 0.3, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.mid = {\r\n        display = {width = 0, height = 0, font = 280},\r\n        button = {width = 140, height = 130, font = 150},\r\n        offsets = { bottomButtons = {x = 0.36, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.big = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = {width = 80, height = 80, font = 130},\r\n        offsets = { bottomButtons = {x = 0.220, y = 0, z = -0.01}, topButtons = {x = 0.1, y = 0, z = -0.17} }\r\n    }\r\n    buttons.params.sizes.mid10 = {\r\n        display = {width = 0, height = 0, font = 280},\r\n        button = {width = 280, height = 170, font = 150},\r\n        offsets = { bottomButtons = {x = 0.9, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.big10 = {\r\n        display = {width = 0, height = 0, font = 450},\r\n        button = {width = 400, height = 210, font = 220},\r\n        offsets = { bottomButtons = {x = 1.5, y = 0, z = 0}, topButtons = {x = 2.4, y = 0, z = -0} }\r\n    }\r\n    buttons.params.sizes.small = {\r\n        display = {width = 0, height = 0, font = 140},\r\n        button = {width = 110, height = 100, font = 140},\r\n        offsets = { bottomButtons = {x = 0.3, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.toggle = {\r\n        display = {width = 200, height = 170, font = 160},\r\n        button = {width = 60, height = 60, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.toggleBig = {\r\n        display = {width = 540, height = 380, font = 400},\r\n        button = {width = 60, height = 60, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.wideToggle = {\r\n        display = {width = 180, height = 80, font = 70},\r\n        button = {width = 60, height = 400, font = 100},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = 0}, topButtons = {x = 0.1, y = 0, z = -0.1} }\r\n    }\r\n    buttons.params.sizes.xp = {\r\n        display = {width = 0, height = 0, font = 150},\r\n        button = {width = 220, height = 150, font = 80},\r\n        offsets = { bottomButtons = {x = 1.15, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.hd = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = {width = 220, height = 150, font = 80},\r\n        offsets = { bottomButtons = {x = 0.2, y = 0, z = -0.4}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.hdBig = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = {width = 280, height = 170, font = 150},\r\n        offsets = { bottomButtons = {x = 0.9, y = 0, z = 0}, topButtons = {x = 1.5, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt = {\r\n        display = {width = 0, height = 0, font = 70},\r\n        button = {width = 200, height = 100, font = 60},\r\n        offsets = { bottomButtons = {x = -2.1, y = 0, z = -0.3}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt2 = {\r\n        display = buttons.params.sizes.txt.display, button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -2.3, y = 0, z = -1.3}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txt3 = {\r\n        display = buttons.params.sizes.txt.display, button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -1.7, y = 0, z = -1.45}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txtbig = {\r\n        display = {width = 0, height = 0, font = 150},\r\n        button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = 3.70, y = 0, z = 0}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n    buttons.params.sizes.txtbig2 = {\r\n        display = {width = 0, height = 0, font = 200},\r\n        button = buttons.params.sizes.txt.button,\r\n        offsets = { bottomButtons = {x = -0.8, y = 0, z = -0.2}, topButtons = {x = 0, y = 0, z = 0} }\r\n    }\r\n\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Button press functions\r\n-- *****************************************************************************\r\nfunction editclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        nm = tostring(location) --string.gsub(location, \"\", \"\")\r\n        --print(\"Edit click \" .. nm)\r\n        local sizes = buttons.params.sizes[buttons[nm].type].offsets\r\n        --print(sizes)\r\n        mpos = self.getPosition(); pos = buttons.params.positions[nm]\r\n        --print(self.getRotation()[1]); print(self.getRotation()[2]); print(self.getRotation()[3]);\r\n        --scale = self.getScale();    print(scale[3])\r\n        local btns = self.getButtons()\r\n        if (btns == nil) then return end\r\n        --print(buttons)\r\n        button = nil\r\n        fname = tostring(location) .. 'EditClick'\r\n        --for i,v in pairs(btns) do\r\n            --print(tostring(i) .. ' :: ' .. tostring(v.click_function))\r\n        --    if (v.click_function == fname) then\r\n        --        button = v\r\n        --        break\r\n        --    end\r\n        --end\r\n        --if (button == nil) then return end\r\n        --print(\"z = \" .. tostring(pos.z))\r\n        --pos = button.position\r\n        --ppos = button.position\r\n        ppos = {pos.x - sizes.bottomButtons.x - 0.3, pos.y, pos.z*1.4 + sizes.bottomButtons.z*1.4}--ppos = {pos.x*1.1 - sizes.bottomButtons.x*1.3, pos.y, pos.z-2 + (pos.z+3.8) * 0.25}\r\n        --ppos = {pos.x - sizes.bottomButtons.x, pos.y, pos.z + sizes.bottomButtons.z/2}\r\n        --print(tostring(pos[1]) .. ' , ' .. tostring(pos[2]) .. ' , ' .. tostring(pos[3]))\r\n        --print(tostring(pos.x) .. ' , ' .. tostring(pos.y) .. ' , ' .. tostring(pos.z))\r\n        if (objs[nm] != nil) then\r\n            buttons.counts[nm] = objs[nm].getDescription()\r\n            destroyObject(objs[nm])\r\n            objs[nm] = nil\r\n        else\r\n            local pos = self.getPosition()\r\n            local rot = self.getRotation()\r\n            local sca = self.getScale()\r\n            print('Pos: ' .. pos['x'] .. ', ' .. pos['y'] .. ', ' .. pos['z'])\r\n            print('Rot: ' .. rot['x'] .. ', ' .. rot['y'] .. ', ' .. rot['z'])\r\n            print('Sca: ' .. sca['x'] .. ', ' .. sca['y'] .. ', ' .. sca['z'])\r\n            local pawn_pos = {}\r\n            pawn_pos['x'] = pos['x']+ppos[1]--+1.2\r\n            pawn_pos['z'] = pos['z']-ppos[3] --1.8\r\n            --translate point to origin\r\n            local tempX = (pawn_pos['x'] - pos['x'])*sca['x']\r\n            local tempZ = (pawn_pos['z'] - pos['z'])*sca['z']\r\n            --now apply rotation\r\n            local rad_rot = math.rad(original_rot['y'] - rot['y'])\r\n            local obj_rotatedX = tempX * math.cos(rad_rot) - tempZ * math.sin(rad_rot)\r\n            local obj_rotatedZ = tempX * math.sin(rad_rot) + tempZ * math.cos(rad_rot);\r\n            --translate back\r\n            local new_pawn_x = obj_rotatedX + pos['x'];\r\n            local new_pawn_z = obj_rotatedZ + pos['z'];\r\n            local params = {}\r\n            --params.type = 'PlayerPawn'\r\n            local final_pos={new_pawn_x, pos['y']+1, new_pawn_z}\r\n\r\n            o = spawnObject({\r\n                type = 'backgammon_piece_brown',\r\n                --position = {mpos[1] + pos.x, mpos[2] + pos.y+2, mpos[3] - pos.z},\r\n                position = final_pos, --{mpos[1] + pos[1], mpos[2] + pos[2]+2, mpos[3] - pos[3]},\r\n                --position = button.position,\r\n                scale = {0.4, 0.4, 0.4}\r\n            })\r\n            --o.position = button.position\r\n            objs[nm] = o\r\n            o.setDescription(tostring(buttons.counts[nm]))\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction dud()\r\n\r\nend\r\n\r\nfunction profclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] >= 3) then\r\n            dd = -2*buttons.counts[\"profbonus\"]\r\n            buttons.counts[location] = 0\r\n        elseif (buttons.counts[location] <= 0) then\r\n            dd = math.floor(0.5*buttons.counts[\"profbonus\"])\r\n            buttons.counts[location] = 1\r\n        elseif (buttons.counts[location] == 1) then\r\n            dd = math.ceil(0.5*buttons.counts[\"profbonus\"])\r\n            buttons.counts[location] = 2\r\n        else\r\n            dd = buttons.counts[\"profbonus\"]\r\n            buttons.counts[location] = 3\r\n        end\r\n        sf = string.sub(location, 3, string.len(location));\r\n        --print(location .. ' => ' .. sf)\r\n\r\n        --Added an extra \"if\" statement to account for independent toggle buttons (Such as Death Saving Throws)\r\n        if (buttons.counts[sf] != nil) then\r\n            buttons.counts[sf] = buttons.counts[sf] + dd\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction dispclick(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] > 0) then\r\n            dd = -2\r\n            buttons.counts[location] = 0\r\n        else\r\n            dd = 2\r\n            buttons.counts[location] = 1\r\n        end\r\n        sf = string.sub(location, 3, string.len(location));\r\n        --print(location .. ' => ' .. sf)\r\n\r\n        --Added an extra \"if\" statement to account for independent toggle buttons (Such as Death Saving Throws)\r\n        if (buttons.counts[sf] != nil) then\r\n            buttons.counts[sf] = buttons.counts[sf] + dd\r\n        end\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction plus(location, amount)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (location == \"str\") or (location == \"dex\") or (location == \"cons\") or (location == \"int\") or (location == \"wis\") or (location == \"cha\") then\r\n            updateAbilityModifiers(location,amount)\r\n        end\r\n\r\n        buttons.counts[location] = buttons.counts[location] + amount\r\n\r\n        if (location == \"profbonus\") then\r\n            updateProficiencyModifiers(amount)\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction minus(location, amount)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (location == \"str\") or (location == \"dex\") or (location == \"cons\") or (location == \"int\") or (location == \"wis\") or (location == \"cha\") then\r\n            updateAbilityModifiers(location,-amount)\r\n        end\r\n\r\n        --Prevents count from going below 0\r\n        --if buttons.counts[location] > amount - 1 then\r\n            buttons.counts[location] = buttons.counts[location] - amount\r\n        --else\r\n        --    buttons.counts[location] = 0\r\n        --end\r\n\r\n        if (location == \"profbonus\") then\r\n            updateProficiencyModifiers(-amount)\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\nfunction lockForm(location)\r\n    if (buttons.counts[\"lockButton\"] < buttons[location].lockLevel) then\r\n        if (buttons.counts[location] > 1) then\r\n            buttons.counts[location] = 0\r\n        elseif (buttons.counts[location] == 1) then\r\n            buttons.counts[location] = 2\r\n        else\r\n            buttons.counts[location] = 1\r\n        end\r\n\r\n        updateDisplay(false)\r\n    end\r\nend\r\n\r\n-- *****************************************************************************\r\n-- Value update functions\r\n-- *****************************************************************************\r\nfunction updateAbilityModifiers(location,amount)\r\n    prevval = buttons.counts[location]\r\n    newval = prevval + amount\r\n\r\n    oldmod = buttons.counts['v_' .. location]\r\n    newmod = math.floor(newval / 2) - 5\r\n\r\n    buttons.counts['v_' .. location] = newmod\r\n\r\n    updateAbilityModifier(location,oldmod,newmod)\r\n\r\n    if (location == \"str\") then\r\n        updateAbilityModifier('athlet',oldmod,newmod)\r\n    elseif (location == \"dex\") then\r\n        updateAbilityModifier('acrobat',oldmod,newmod)\r\n        updateAbilityModifier('sleight',oldmod,newmod)\r\n        updateAbilityModifier('stealth',oldmod,newmod)\r\n        updateAbilityModifier('initiative',oldmod,newmod)\r\n    elseif (location == \"cons\") then\r\n    elseif (location == \"int\") then\r\n        updateAbilityModifier('arcana',oldmod,newmod)\r\n        updateAbilityModifier('hist',oldmod,newmod)\r\n        updateAbilityModifier('invest',oldmod,newmod)\r\n        updateAbilityModifier('nature',oldmod,newmod)\r\n        updateAbilityModifier('relig',oldmod,newmod)\r\n    elseif (location == \"wis\") then\r\n        updateAbilityModifier('animal',oldmod,newmod)\r\n        updateAbilityModifier('insight',oldmod,newmod)\r\n        updateAbilityModifier('medic',oldmod,newmod)\r\n        updateAbilityModifier('percep',oldmod,newmod)\r\n        updateAbilityModifier('surv',oldmod,newmod)\r\n        --updateAbilityModifier('passwis',oldmod,newmod)\r\n    elseif (location == \"cha\") then\r\n        updateAbilityModifier('decep',oldmod,newmod)\r\n        updateAbilityModifier('inti',oldmod,newmod)\r\n        updateAbilityModifier('perfor',oldmod,newmod)\r\n        updateAbilityModifier('persu',oldmod,newmod)\r\n    end\r\nend\r\n\r\nfunction updateAbilityModifier(profname,oldmod,newmod)\r\n    )\r\n    increase = newmod - oldmod\r\n    if (profname == \"initiative\") or (profname == \"passwis\") then\r\n        buttons.counts[profname] = buttons.counts[profname] + increase\r\n    else\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + increase\r\n    end\r\nend\r\n\r\nfunction updateProficiencyModifiers(profamount)\r\n    -- When proficiency modifier is adjusted, update skill modifiers accordingly\r\n\r\n    prevProf = buttons.counts[\"profbonus\"] - profamount\r\n    newProf = buttons.counts[\"profbonus\"]\r\n\r\n    updateProficiencyModifier('acrobat',prevProf,newProf)\r\n    updateProficiencyModifier('animal',prevProf,newProf)\r\n    updateProficiencyModifier('arcana',prevProf,newProf)\r\n    updateProficiencyModifier('athlet',prevProf,newProf)\r\n    updateProficiencyModifier('decep',prevProf,newProf)\r\n    updateProficiencyModifier('hist',prevProf,newProf)\r\n    updateProficiencyModifier('insight',prevProf,newProf)\r\n    updateProficiencyModifier('inti',prevProf,newProf)\r\n    updateProficiencyModifier('invest',prevProf,newProf)\r\n    updateProficiencyModifier('medic',prevProf,newProf)\r\n    updateProficiencyModifier('nature',prevProf,newProf)\r\n    updateProficiencyModifier('percep',prevProf,newProf)\r\n    updateProficiencyModifier('perfor',prevProf,newProf)\r\n    updateProficiencyModifier('persu',prevProf,newProf)\r\n    updateProficiencyModifier('relig',prevProf,newProf)\r\n    updateProficiencyModifier('sleight',prevProf,newProf)\r\n    updateProficiencyModifier('stealth',prevProf,newProf)\r\n    updateProficiencyModifier('surv',prevProf,newProf)\r\n\r\n    updateProficiencyModifier('str',prevProf,newProf)\r\n    updateProficiencyModifier('dex',prevProf,newProf)\r\n    updateProficiencyModifier('cons',prevProf,newProf)\r\n    updateProficiencyModifier('int',prevProf,newProf)\r\n    updateProficiencyModifier('wis',prevProf,newProf)\r\n    updateProficiencyModifier('cha',prevProf,newProf)\r\nend\r\n\r\nfunction updateProficiencyModifier(profname,prevamount,newamount)\r\n    increase = newamount - prevamount\r\n    profstate = buttons.counts['p_s_' .. profname]\r\n    if (profstate == 1) then\r\n        prevbonus = math.floor(prevamount/2)\r\n        newbonus = math.floor(newamount/2)\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + newbonus - prevbonus\r\n    elseif (profstate == 2) then\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + increase\r\n    elseif (profstate == 3) then\r\n        buttons.counts['s_' .. profname] = buttons.counts['s_' .. profname] + 2*increase\r\n    end\r\nend\r\n\r\n\r\n-- *****************************************************************************\r\n-- Update field labels based on content\r\n-- *****************************************************************************\r\nfunction updateDisplay(firstTime)\r\n    for i,v in pairs(buttons) do\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            if (tostring(i) == \"lockButton\") then\r\n                if (buttons.counts[tostring(i)] > 1) then\r\n                    buttons[tostring(i)].display.label = \"LOCK\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                elseif (buttons.counts[tostring(i)] == 1) then\r\n                    buttons[tostring(i)].display.label = \"SEMI\"\r\n                else\r\n                    buttons[tostring(i)].display.label = \"OPEN\"\r\n                end\r\n            elseif (buttons[tostring(i)].isToggle == true) then\r\n                if (buttons.counts[tostring(i)] > 0) then\r\n                    buttons[tostring(i)].display.label = \"X\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                else\r\n                    buttons[tostring(i)].display.label = \"\"\r\n                end\r\n\r\n            elseif (buttons[tostring(i)].isProf == true) then\r\n                if (buttons.counts[tostring(i)] <= 0) then\r\n                    buttons[tostring(i)].display.label = \"\"\r\n                    --buttons[tostring(i)].display.label.setColorTint(0, 0, 0)\r\n                elseif (buttons.counts[tostring(i)] == 1) then\r\n                    buttons[tostring(i)].display.label = \"/2\"\r\n                elseif (buttons.counts[tostring(i)] == 2) then\r\n                    buttons[tostring(i)].display.label = \"*\"\r\n                else\r\n                    buttons[tostring(i)].display.label = \"x2\"\r\n                end\r\n            else\r\n                if (buttons[tostring(i)].isText == true) then\r\n                    buttons[tostring(i)].display.label = tostring(buttons.counts[tostring(i)])\r\n                    if (objs[tostring(i)] == nil) then\r\n                        buttons[tostring(i)].minusOne.label = \"Edit\"\r\n                    else\r\n                        buttons[tostring(i)].minusOne.label = \"Done\"\r\n                    end\r\n                else\r\n                    buttons[tostring(i)].display.label = tostring(buttons.counts[tostring(i)])\r\n                end\r\n            end\r\n            if (firstTime) then\r\n                self.createButton(buttons[tostring(i)].display)\r\n                if (buttons[tostring(i)].plusOne != nil) then self.createButton(buttons[tostring(i)].plusOne) end\r\n                if (buttons[tostring(i)].minusOne != nil) then self.createButton(buttons[tostring(i)].minusOne) end\r\n                if (tostring(i) == \"xp\") then\r\n                    self.createButton(buttons[tostring(i)].plusFive)\r\n                    self.createButton(buttons[tostring(i)].minusFive)\r\n                elseif ((buttons[tostring(i)].type == \"big10\") or (buttons[tostring(i)].type == \"mid10\")) then\r\n                    self.createButton(buttons[tostring(i)].plusTen)\r\n                    self.createButton(buttons[tostring(i)].minusTen)\r\n                end\r\n            else\r\n                self.editButton(buttons[tostring(i)].display)\r\n                for j,k in pairs(buttons[tostring(i)]) do\r\n                    if (string.sub(j,1,5) == \"minus\") or (string.sub(j,1,4) == \"plus\") then\r\n                        self.editButton(buttons[tostring(i)][j])\r\n                    end\r\n                end\r\n            end\r\n            -- Hide/Show buttons depending on lock status\r\n            if (buttons[tostring(i)].lockLevel <= buttons.counts[\"lockButton\"]) then\r\n                for j,k in pairs(buttons[tostring(i)]) do\r\n                    if (string.sub(j,1,5) == \"minus\") or (string.sub(j,1,4) == \"plus\") then\r\n                        self.editButton({index = buttons[tostring(i)][j].index, position = {0,0,0}, width=0, height=0})\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\n\r\nfunction setupButton(targetFunc, positions, sizes, label, offsets, isLeft)\r\n    local buttonInfo = {}\r\n        buttonInfo.function_owner = self\r\n        buttonInfo.index = buttons.index\r\n        buttonInfo.click_function = targetFunc\r\n\r\n        if isLeft then\r\n            orientationModifier = -1\r\n        else\r\n            orientationModifier = 1\r\n        end\r\n\r\n        if offsets == nil then\r\n            buttonInfo.position = {positions.x, positions.y, positions.z}\r\n        else\r\n            buttonInfo.position = {positions.x + (offsets.x) * orientationModifier, positions.y + offsets.y, positions.z + offsets.z}\r\n        end\r\n\r\n        buttonInfo.width = sizes.width\r\n        buttonInfo.height = sizes.height\r\n        buttonInfo.font_size = sizes.font\r\n        buttonInfo.label = label\r\n    buttons.index = buttons.index + 1\r\n\r\n    return buttonInfo\r\nend\r\n\r\nfunction generateButtonParamiters()\r\n    for i,v in pairs(buttons) do\r\n        if tostring(i) != 'index' and tostring(i) != 'counts' and tostring(i) != 'params' and tostring(i) != 'targetFunc' then\r\n            btn = tostring(i)\r\n            prefix = string.sub(btn, 1, 2)\r\n            if (btn == 'lockButton') then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'LockClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isToggle = true\r\n            elseif (prefix == \"__\") then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].minusOne = setupButton(tostring(i) .. 'EditClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, 'Edit', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, true)\r\n                buttons[tostring(i)].isText = true\r\n            elseif (prefix == \"p_\") then\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'ProfClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isProf = true\r\n            elseif (prefix == \"v_\") then\r\n                buttons[tostring(i)].display = setupButton('dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n            elseif (prefix != \"t_\" ) then\r\n                buttons[tostring(i)].display = setupButton('dud', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].plusOne = setupButton(tostring(i) .. 'PlusOne', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, false)\r\n                buttons[tostring(i)].minusOne = setupButton(tostring(i) .. 'MinusOne', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-', buttons.params.sizes[buttons[tostring(i)].type].offsets.bottomButtons, true)\r\n                if (btn == \"xp\") then\r\n                    buttons[tostring(i)].minusFive = setupButton(tostring(i) .. 'MinusFive', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-100',buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, true)\r\n                    buttons[tostring(i)].plusFive = setupButton(tostring(i) .. 'PlusFive', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+100', buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, false)\r\n                elseif (buttons[tostring(i)].type == \"big10\") or (buttons[tostring(i)].type == \"mid10\") then\r\n                    buttons[tostring(i)].minusTen = setupButton(tostring(i) .. 'MinusTen', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '-10',buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, true)\r\n                    buttons[tostring(i)].plusTen = setupButton(tostring(i) .. 'PlusTen', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].button, '+10', buttons.params.sizes[buttons[tostring(i)].type].offsets.topButtons, false)\r\n                end\r\n            -- TO DO: Add treatment of four-state button 0, ??, 1, 2 here\r\n            else\r\n                buttons[tostring(i)].display = setupButton(tostring(i) .. 'DispClick', buttons.params.positions[tostring(i)], buttons.params.sizes[buttons[tostring(i)].type].display, '', nil, false)\r\n                buttons[tostring(i)].isToggle = true\r\n            end\r\n        end\r\n    end\r\n    --updateDisplay()\r\n\r\nend\r\n",
      "LuaScriptState": "{\"saved_counts\":{\"counts\":0,\"index\":0,\"lockButton\":0,\"params\":0,\"spellSlotsMax1\":-1,\"spellSlotsMax2\":0,\"spellSlotsMax3\":0,\"spellSlotsMax4\":0,\"spellSlotsMax5\":0,\"spellSlotsMax6\":0,\"spellSlotsMax7\":0,\"spellSlotsMax8\":0,\"spellSlotsMax9\":0,\"spellSlotsUsed1\":0,\"spellSlotsUsed2\":0,\"spellSlotsUsed3\":0,\"spellSlotsUsed4\":0,\"spellSlotsUsed5\":0,\"spellSlotsUsed6\":0,\"spellSlotsUsed7\":0,\"spellSlotsUsed8\":0,\"spellSlotsUsed9\":0,\"targetFunc\":0}}",
      "GUID": "a2b198"
    },
    {
      "Name": "Custom_Board",
      "Transform": {
        "posX": -4.22638035,
        "posY": -0.0154644251,
        "posZ": -10.1332588,
        "rotX": 0.0009912071,
        "rotY": 180.004089,
        "rotZ": -6.32556548E-05,
        "scaleX": 0.475000471,
        "scaleY": 0.475000471,
        "scaleZ": 0.475000471
      },
      "Nickname": "",
      "Description": "Character Sheet",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://drive.google.com/uc?export=download&id=0B42Yr9OZx2KETXFOY0NIaDdGVEk",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 1.80882359
      },
      "XmlUI": "",
      "LuaScript": "--RezMar 2017.08.28.--\r\n\r\nfunction onLoad(save_state)\r\n    initializeVariables()\r\n    loadSave(save_state)\r\n    initializeInput()\r\n    initializeButtons()\r\nend\r\n\r\nfunction loadSave(save_state)\r\n    local data = JSON.decode(save_state)\r\n\r\n    if data.s_saved == true then\r\n        saved = data.s_saved\r\n        charactername_string = data.s_charactername\r\n        charlvl_string = data.s_charlvl\r\n        class1_string = data.s_class1\r\n        class2_string = data.s_class2\r\n        classlvl1_string = data.s_classlvl1\r\n        classlvl2_string = data.s_classlvl2\r\n        playername_string = data.s_playername\r\n        race_string = data.s_race\r\n        alignment_string = data.s_alignment\r\n        exper_string = data.s_exper\r\n        str_string = data.s_str\r\n        dex_string = data.s_dex\r\n        cons_string = data.s_cons\r\n        int_string = data.s_int\r\n        wis_string = data.s_wis\r\n        cha_string = data.s_cha\r\n        modstr_string = data.s_modstr\r\n        moddex_string = data.s_moddex\r\n        modcon_string = data.s_modcon\r\n        modint_string = data.s_modint\r\n        modwis_string = data.s_modwis\r\n        modcha_string = data.s_modcha\r\n        toggles = data.s_toggles\r\n        profbonus_string = data.s_profbonus\r\n        passwisdom_string = data.s_passwisdom\r\n        armorclass_string = data.s_armorclass\r\n        armorbonus_string = data.s_armorbonus\r\n        maxhp_string = data.s_maxhp\r\n        curhp_string = data.s_curhp\r\n        temphp_string = data.s_temphp\r\n        initiative_string = data.s_initiative\r\n        speed_string = data.s_speed\r\n        alterspeed1_string = data.s_alterspeed1\r\n        alterspeed2_string = data.s_alterspeed2\r\n        alterspeed3_string = data.s_alterspeed3\r\n        alterspeed4_string = data.s_alterspeed4\r\n        alterspeed5_string = data.s_alterspeed5\r\n        alterspeed6_string = data.s_alterspeed6\r\n        vision_string = data.s_vision\r\n        exhaustion_string = data.s_exhaustion\r\n        resimmred_string = data.s_resimmred\r\n        conditions_string = data.s_conditions\r\n        spellsavedc_string = data.s_spellsavedc\r\n        spellatkbonus_string = data.s_spellatkbonus\r\n        hitdice1_string = data.s_hitdice1\r\n        hitdice2_string = data.s_hitdice2\r\n        hitdicemax1_string = data.s_hitdicemax1\r\n        hitdicemax2_string = data.s_hitdicemax2\r\n        hitdicecur1_string = data.s_hitdicecur1\r\n        hitdicecur2_string = data.s_hitdicecur2\r\n        damage1_string = data.s_damage1\r\n        damage2_string = data.s_damage2\r\n        damage3_string = data.s_damage3\r\n        damage4_string = data.s_damage4\r\n        damage5_string = data.s_damage5\r\n        coincp_string = data.s_coincp\r\n        coinsp_string = data.s_coinsp\r\n        coinep_string = data.s_coinep\r\n        coingp_string = data.s_coingp\r\n        coinpp_string = data.s_coinpp\r\n        ammo1_string = data.s_ammo1\r\n        ammo2_string = data.s_ammo2\r\n        ammo3_string = data.s_ammo3\r\n        potion1_string = data.s_potion1\r\n        potion2_string = data.s_potion2\r\n        potion3_string = data.s_potion3\r\n        potion4_string = data.s_potion4\r\n        limitedfeature1_string = data.s_limitedfeature1\r\n        limitedfeature2_string = data.s_limitedfeature2\r\n        limitedfeature3_string = data.s_limitedfeature3\r\n        limitedfeature4_string = data.s_limitedfeature4\r\n        limitedfeature5_string = data.s_limitedfeature5\r\n        limitedfeature6_string = data.s_limitedfeature6\r\n        limitedfeature7_string = data.s_limitedfeature7\r\n        limitedfeaturetotal1_string = data.s_limitedfeaturetotal1\r\n        limitedfeaturetotal2_string = data.s_limitedfeaturetotal2\r\n        limitedfeaturetotal3_string = data.s_limitedfeaturetotal3\r\n        limitedfeaturetotal4_string = data.s_limitedfeaturetotal4\r\n        limitedfeaturetotal5_string = data.s_limitedfeaturetotal5\r\n        limitedfeaturetotal6_string = data.s_limitedfeaturetotal6\r\n        limitedfeaturetotal7_string = data.s_limitedfeaturetotal7\r\n        limitedfeatureleft1_string = data.s_limitedfeatureleft1\r\n        limitedfeatureleft2_string = data.s_limitedfeatureleft2\r\n        limitedfeatureleft3_string = data.s_limitedfeatureleft3\r\n        limitedfeatureleft4_string = data.s_limitedfeatureleft4\r\n        limitedfeatureleft5_string = data.s_limitedfeatureleft5\r\n        limitedfeatureleft6_string = data.s_limitedfeatureleft6\r\n        limitedfeatureleft7_string = data.s_limitedfeatureleft7\r\n        weaponsprof_string = data.s_weaponsprof\r\n        toolsprof_string = data.s_toolsprof\r\n        languages_string = data.s_languages\r\n        feats_string = data.s_feats\r\n        ststr_string = data.s_ststr\r\n        stdex_string = data.s_stdex\r\n        stcon_string = data.s_stcon\r\n        stint_string = data.s_stint\r\n        stwis_string = data.s_stwis\r\n        stcha_string = data.s_stcha\r\n        itstr_string = data.s_itstr\r\n        itdex_string = data.s_itdex\r\n        itcon_string = data.s_itcon\r\n        itint_string = data.s_itint\r\n        itwis_string = data.s_itwis\r\n        itcha_string = data.s_itcha\r\n        totstr_string = data.s_totstr\r\n        totdex_string = data.s_totdex\r\n        totcon_string = data.s_totcon\r\n        totint_string = data.s_totint\r\n        totwis_string = data.s_totwis\r\n        totcha_string = data.s_totcha\r\n        skacro_string = data.s_skacro\r\n        skanim_string = data.s_skanim\r\n        skarca_string = data.s_skarca\r\n        skathl_string = data.s_skathl\r\n        skdece_string = data.s_skdece\r\n        skhist_string = data.s_skhist\r\n        skinsi_string = data.s_skinsi\r\n        skinti_string = data.s_skinti\r\n        skinve_string = data.s_skinve\r\n        skmedi_string = data.s_skmedi\r\n        sknatu_string = data.s_sknatu\r\n        skperc_string = data.s_skperc\r\n        skperf_string = data.s_skperf\r\n        skpers_string = data.s_skpers\r\n        skreli_string = data.s_skreli\r\n        skslei_string = data.s_skslei\r\n        skstea_string = data.s_skstea\r\n        sksurv_string = data.s_sksurv\r\n        itacro_string = data.s_itacro\r\n        itanim_string = data.s_itanim\r\n        itarca_string = data.s_itarca\r\n        itathl_string = data.s_itathl\r\n        itdece_string = data.s_itdece\r\n        ithist_string = data.s_ithist\r\n        itinsi_string = data.s_itinsi\r\n        itinti_string = data.s_itinti\r\n        itinve_string = data.s_itinve\r\n        itmedi_string = data.s_itmedi\r\n        itnatu_string = data.s_itnatu\r\n        itperc_string = data.s_itperc\r\n        itperf_string = data.s_itperf\r\n        itpers_string = data.s_itpers\r\n        itreli_string = data.s_itreli\r\n        itslei_string = data.s_itslei\r\n        itstea_string = data.s_itstea\r\n        itsurv_string = data.s_itsurv\r\n        totacro_string = data.s_totacro\r\n        totanim_string = data.s_totanim\r\n        totarca_string = data.s_totarca\r\n        totathl_string = data.s_totathl\r\n        totdece_string = data.s_totdece\r\n        tothist_string = data.s_tothist\r\n        totinsi_string = data.s_totinsi\r\n        totinti_string = data.s_totinti\r\n        totinve_string = data.s_totinve\r\n        totmedi_string = data.s_totmedi\r\n        totnatu_string = data.s_totnatu\r\n        totperc_string = data.s_totperc\r\n        totperf_string = data.s_totperf\r\n        totpers_string = data.s_totpers\r\n        totreli_string = data.s_totreli\r\n        totslei_string = data.s_totslei\r\n        totstea_string = data.s_totstea\r\n        totsurv_string = data.s_totsurv\r\n    end\r\nend\r\n\r\nfunction onSave()\r\n    saved = true\r\n\r\n    local table = {\r\n        s_saved = saved,\r\n        s_charactername = charactername_string,\r\n        s_charlvl = charlvl_string,\r\n        s_class1 = class1_string,\r\n        s_class2 = class1_string,\r\n        s_classlvl1 = classlvl1_string,\r\n        s_classlvl2 = classlvl2_string,\r\n        s_playername = playername_string,\r\n        s_race = race_string,\r\n        s_alignment = alignment_string,\r\n        s_exper = exper_string,\r\n        s_str = str_string,\r\n        s_dex = dex_string,\r\n        s_cons = cons_string,\r\n        s_int = int_string,\r\n        s_wis = wis_string,\r\n        s_cha = cha_string,\r\n        s_modstr = modstr_string,\r\n        s_moddex = moddex_string,\r\n        s_modcon = modcon_string,\r\n        s_modint = modint_string,\r\n        s_modwis = modwis_string,\r\n        s_modcha = modcha_string,\r\n        s_toggles = toggles,\r\n        s_profbonus = profbonus_string,\r\n        s_passwisdom = passwisdom_string,\r\n        s_armorclass = armorclass_string,\r\n        s_armorbonus = armorbonus_string,\r\n        s_maxhp = maxhp_string,\r\n        s_curhp = curhp_string,\r\n        s_temphp = temphp_string,\r\n        s_initiative = initiative_string,\r\n        s_speed = speed_string,\r\n        s_alterspeed1 = alterspeed1_string,\r\n        s_alterspeed2 = alterspeed2_string,\r\n        s_alterspeed3 = alterspeed3_string,\r\n        s_alterspeed4 = alterspeed4_string,\r\n        s_alterspeed5 = alterspeed5_string,\r\n        s_alterspeed6 = alterspeed6_string,\r\n        s_vision = vision_string,\r\n        s_exhaustion = exhaustion_string,\r\n        s_resimmred = resimmred_string,\r\n        s_conditions = conditions_string,\r\n        s_spellsavedc = spellsavedc_string,\r\n        s_spellatkbonus = spellatkbonus_string,\r\n        s_hitdice1 = hitdice1_string,\r\n        s_hitdice2 = hitdice2_string,\r\n        s_hitdicemax1 = hitdicemax1_string,\r\n        s_hitdicemax2 = hitdicemax2_string,\r\n        s_hitdicecur1 = hitdicecur1_string,\r\n        s_hitdicecur2 = hitdicecur2_string,\r\n        s_damage1 = damage1_string,\r\n        s_damage2 = damage2_string,\r\n        s_damage3 = damage3_string,\r\n        s_damage4 = damage4_string,\r\n        s_damage5 = damage5_string,\r\n        s_coincp = coincp_string,\r\n        s_coinsp = coinsp_string,\r\n        s_coinep = coinep_string,\r\n        s_coingp = coingp_string,\r\n        s_coinpp = coinpp_string,\r\n        s_ammo1 = ammo1_string,\r\n        s_ammo2 = ammo2_string,\r\n        s_ammo3 = ammo3_string,\r\n        s_potion1 = potion1_string,\r\n        s_potion2 = potion2_string,\r\n        s_potion3 = potion3_string,\r\n        s_potion4 = potion4_string,\r\n        s_limitedfeature1 = limitedfeature1_string,\r\n        s_limitedfeature2 = limitedfeature2_string,\r\n        s_limitedfeature3 = limitedfeature3_string,\r\n        s_limitedfeature4 = limitedfeature4_string,\r\n        s_limitedfeature5 = limitedfeature5_string,\r\n        s_limitedfeature6 = limitedfeature6_string,\r\n        s_limitedfeature7 = limitedfeature7_string,\r\n        s_limitedfeaturetotal1 = limitedfeaturetotal1_string,\r\n        s_limitedfeaturetotal2 = limitedfeaturetotal2_string,\r\n        s_limitedfeaturetotal3 = limitedfeaturetotal3_string,\r\n        s_limitedfeaturetotal4 = limitedfeaturetotal4_string,\r\n        s_limitedfeaturetotal5 = limitedfeaturetotal5_string,\r\n        s_limitedfeaturetotal6 = limitedfeaturetotal6_string,\r\n        s_limitedfeaturetotal7 = limitedfeaturetotal7_string,\r\n        s_limitedfeatureleft1 = limitedfeatureleft1_string,\r\n        s_limitedfeatureleft2 = limitedfeatureleft2_string,\r\n        s_limitedfeatureleft3 = limitedfeatureleft3_string,\r\n        s_limitedfeatureleft4 = limitedfeatureleft4_string,\r\n        s_limitedfeatureleft5 = limitedfeatureleft5_string,\r\n        s_limitedfeatureleft6 = limitedfeatureleft6_string,\r\n        s_limitedfeatureleft7 = limitedfeatureleft7_string,\r\n        s_weaponsprof = weaponsprof_string,\r\n        s_toolsprof = toolsprof_string,\r\n        s_languages = languages_string,\r\n        s_feats = feats_string,\r\n        s_ststr = ststr_string,\r\n        s_stdex = stdex_string,\r\n        s_stcon = stcon_string,\r\n        s_stint = stint_string,\r\n        s_stwis = stwis_string,\r\n        s_stcha = stcha_string,\r\n        s_itstr = itstr_string,\r\n        s_itdex = itdex_string,\r\n        s_itcon = itcon_string,\r\n        s_itint = itint_string,\r\n        s_itwis = itwis_string,\r\n        s_itcha = itcha_string,\r\n        s_totstr = totstr_string,\r\n        s_totdex = totdex_string,\r\n        s_totcon = totcon_string,\r\n        s_totint = totint_string,\r\n        s_totwis = totwis_string,\r\n        s_totcha = totcha_string,\r\n        s_skacro = skacro_string,\r\n        s_skanim = skanim_string,\r\n        s_skarca = skarca_string,\r\n        s_skathl = skathl_string,\r\n        s_skdece = skdece_string,\r\n        s_skhist = skhist_string,\r\n        s_skinsi = skinsi_string,\r\n        s_skinti = skinti_string,\r\n        s_skinve = skinve_string,\r\n        s_skmedi = skmedi_string,\r\n        s_sknatu = sknatu_string,\r\n        s_skperc = skperc_string,\r\n        s_skperf = skperf_string,\r\n        s_skpers = skpers_string,\r\n        s_skreli = skreli_string,\r\n        s_skslei = skslei_string,\r\n        s_skstea = skstea_string,\r\n        s_sksurv = sksurv_string,\r\n        s_itacro = itacro_string,\r\n        s_itanim = itanim_string,\r\n        s_itarca = itarca_string,\r\n        s_itathl = itathl_string,\r\n        s_itdece = itdece_string,\r\n        s_ithist = ithist_string,\r\n        s_itinsi = itinsi_string,\r\n        s_itinti = itinti_string,\r\n        s_itinve = itinve_string,\r\n        s_itmedi = itmedi_string,\r\n        s_itnatu = itnatu_string,\r\n        s_itperc = itperc_string,\r\n        s_itperf = itperf_string,\r\n        s_itpers = itpers_string,\r\n        s_itreli = itreli_string,\r\n        s_itslei = itslei_string,\r\n        s_itstea = itstea_string,\r\n        s_itsurv = itsurv_string,\r\n        s_totacro = totacro_string,\r\n        s_totanim = totanim_string,\r\n        s_totarca = totarca_string,\r\n        s_totathl = totathl_string,\r\n        s_totdece = totdece_string,\r\n        s_tothist = tothist_string,\r\n        s_totinsi = totinsi_string,\r\n        s_totinti = totinti_string,\r\n        s_totinve = totinve_string,\r\n        s_totmedi = totmedi_string,\r\n        s_totnatu = totnatu_string,\r\n        s_totperc = totperc_string,\r\n        s_totperf = totperf_string,\r\n        s_totpers = totpers_string,\r\n        s_totreli = totreli_string,\r\n        s_totslei = totslei_string,\r\n        s_totstea = totstea_string,\r\n        s_totsurv = totsurv_string\r\n    }\r\n    return JSON.encode(table)\r\nend\r\n\r\nfunction initializeVariables()\r\n\r\n    saved = true\r\n\r\n    button_index = {\r\n        inspiration = 0,\r\n        savingthrow_1 = 1,\r\n        savingthrow_2 = 2,\r\n        savingthrow_3 = 3,\r\n        savingthrow_4 = 4,\r\n        savingthrow_5 = 5,\r\n        savingthrow_6 = 6,\r\n        skills_1 = 7,\r\n        skills_2 = 8,\r\n        skills_3 = 9,\r\n        skills_4 = 10,\r\n        skills_5 = 11,\r\n        skills_6 = 12,\r\n        skills_7 = 13,\r\n        skills_8 = 14,\r\n        skills_9 = 15,\r\n        skills_10 = 16,\r\n        skills_11 = 17,\r\n        skills_12 = 18,\r\n        skills_13 = 19,\r\n        skills_14 = 20,\r\n        skills_15 = 21,\r\n        skills_16 = 22,\r\n        skills_17 = 23,\r\n        skills_18 = 24,\r\n        darkvision = 25,\r\n        deathsave1 = 26,\r\n        deathsave2 = 27,\r\n        deathsave3 = 28,\r\n        deathfail1 = 29,\r\n        deathfail2 = 30,\r\n        deathfail3 = 31,\r\n        recoverysr_1 = 32,\r\n        recoverysr_2 = 33,\r\n        recoverysr_3 = 34,\r\n        recoverysr_4 = 35,\r\n        recoverysr_5 = 36,\r\n        recoverysr_6 = 37,\r\n        recoverysr_7 = 38,\r\n        recoverylr_1 = 39,\r\n        recoverylr_2 = 40,\r\n        recoverylr_3 = 41,\r\n        recoverylr_4 = 42,\r\n        recoverylr_5 = 43,\r\n        recoverylr_6 = 44,\r\n        recoverylr_7 = 45,\r\n        recoverydn_1 = 46,\r\n        recoverydn_2 = 47,\r\n        recoverydn_3 = 48,\r\n        recoverydn_4 = 49,\r\n        recoverydn_5 = 50,\r\n        recoverydn_6 = 51,\r\n        recoverydn_7 = 52,\r\n        armorprofi1 = 53,\r\n        armorprofi2 = 54,\r\n        armorprofi3 = 55,\r\n        armorprofi4 = 56,\r\n        weaponprofi1 = 57,\r\n        weaponprofi2 = 58,\r\n        weaponprofi3 = 59,\r\n    }\r\n\r\n    toggles = {\r\n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"\r\n    }\r\n\r\n    charactername_string = \"\"\r\n    charlvl_string = \"\"\r\n    class1_string = \"\"\r\n    class2_string = \"\"\r\n    classlvl1_string = \"\"\r\n    classlvl2_string = \"\"\r\n    playername_string = \"\"\r\n    race_string = \"\"\r\n    alignment_string = \"\"\r\n    exper_string = \"\"\r\n    str_string = \"\"\r\n    dex_string = \"\"\r\n    cons_string = \"\"\r\n    int_string = \"\"\r\n    wis_string = \"\"\r\n    cha_string = \"\"\r\n    modstr_string = \"\"\r\n    moddex_string = \"\"\r\n    modcon_string = \"\"\r\n    modint_string = \"\"\r\n    modwis_string = \"\"\r\n    modcha_string = \"\"\r\n    profbonus_string = \"\"\r\n    passwisdom_string = \"\"\r\n    armorclass_string = \"\"\r\n    armorbonus_string = \"\"\r\n    maxhp_string = \"\"\r\n    curhp_string = \"\"\r\n    temphp_string = \"\"\r\n    initiative_string = \"\"\r\n    speed_string = \"\"\r\n    alterspeed1_string = \"\"\r\n    alterspeed2_string = \"\"\r\n    alterspeed3_string = \"\"\r\n    alterspeed4_string = \"\"\r\n    alterspeed5_string = \"\"\r\n    alterspeed6_string = \"\"\r\n    vision_string = \"\"\r\n    exhaustion_string = \"\"\r\n    resimmred_string = \"\"\r\n    conditions_string = \"\"\r\n    spellsavedc_string = \"\"\r\n    spellatkbonus_string = \"\"\r\n    hitdice1_string = \"\"\r\n    hitdice2_string = \"\"\r\n    hitdicemax1_string = \"\"\r\n    hitdicemax2_string = \"\"\r\n    hitdicecur1_string = \"\"\r\n    hitdicecur2_string = \"\"\r\n    damage1_string = \"\"\r\n    damage2_string = \"\"\r\n    damage3_string = \"\"\r\n    damage4_string = \"\"\r\n    damage5_string = \"\"\r\n    coincp_string = \"\"\r\n    coinsp_string = \"\"\r\n    coinep_string = \"\"\r\n    coingp_string = \"\"\r\n    coinpp_string = \"\"\r\n    ammo1_string = \"\"\r\n    ammo2_string = \"\"\r\n    ammo3_string = \"\"\r\n    potion1_string = \"\"\r\n    potion2_string = \"\"\r\n    potion3_string = \"\"\r\n    potion4_string = \"\"\r\n    limitedfeature1_string = \"\"\r\n    limitedfeature2_string = \"\"\r\n    limitedfeature3_string = \"\"\r\n    limitedfeature4_string = \"\"\r\n    limitedfeature5_string = \"\"\r\n    limitedfeature6_string = \"\"\r\n    limitedfeature7_string = \"\"\r\n    limitedfeaturetotal1_string = \"\"\r\n    limitedfeaturetotal2_string = \"\"\r\n    limitedfeaturetotal3_string = \"\"\r\n    limitedfeaturetotal4_string = \"\"\r\n    limitedfeaturetotal5_string = \"\"\r\n    limitedfeaturetotal6_string = \"\"\r\n    limitedfeaturetotal7_string = \"\"\r\n    limitedfeatureleft1_string = \"\"\r\n    limitedfeatureleft2_string = \"\"\r\n    limitedfeatureleft3_string = \"\"\r\n    limitedfeatureleft4_string = \"\"\r\n    limitedfeatureleft5_string = \"\"\r\n    limitedfeatureleft6_string = \"\"\r\n    limitedfeatureleft7_string = \"\"\r\n    weaponsprof_string = \"\"\r\n    toolsprof_string = \"\"\r\n    languages_string = \"\"\r\n    feats_string = \"\"\r\n    ststr_string = \"\"\r\n    stdex_string = \"\"\r\n    stcon_string = \"\"\r\n    stint_string = \"\"\r\n    stwis_string = \"\"\r\n    stcha_string = \"\"\r\n    itstr_string = \"\"\r\n    itdex_string = \"\"\r\n    itcon_string = \"\"\r\n    itint_string = \"\"\r\n    itwis_string = \"\"\r\n    itcha_string = \"\"\r\n    totstr_string = \"\"\r\n    totdex_string = \"\"\r\n    totcon_string = \"\"\r\n    totint_string = \"\"\r\n    totwis_string = \"\"\r\n    totcha_string = \"\"\r\n    skacro_string = \"\"\r\n    skanim_string = \"\"\r\n    skarca_string = \"\"\r\n    skathl_string = \"\"\r\n    skdece_string = \"\"\r\n    skhist_string = \"\"\r\n    skinsi_string = \"\"\r\n    skinti_string = \"\"\r\n    skinve_string = \"\"\r\n    skmedi_string = \"\"\r\n    sknatu_string = \"\"\r\n    skperc_string = \"\"\r\n    skperf_string = \"\"\r\n    skpers_string = \"\"\r\n    skreli_string = \"\"\r\n    skslei_string = \"\"\r\n    skstea_string = \"\"\r\n    sksurv_string = \"\"\r\n    itacro_string = \"\"\r\n    itanim_string = \"\"\r\n    itarca_string = \"\"\r\n    itathl_string = \"\"\r\n    itdece_string = \"\"\r\n    ithist_string = \"\"\r\n    itinsi_string = \"\"\r\n    itinti_string = \"\"\r\n    itinve_string = \"\"\r\n    itmedi_string = \"\"\r\n    itnatu_string = \"\"\r\n    itperc_string = \"\"\r\n    itperf_string = \"\"\r\n    itpers_string = \"\"\r\n    itreli_string = \"\"\r\n    itslei_string = \"\"\r\n    itstea_string = \"\"\r\n    itsurv_string = \"\"\r\n    totacro_string = \"\"\r\n    totanim_string = \"\"\r\n    totarca_string = \"\"\r\n    totathl_string = \"\"\r\n    totdece_string = \"\"\r\n    tothist_string = \"\"\r\n    totinsi_string = \"\"\r\n    totinti_string = \"\"\r\n    totinve_string = \"\"\r\n    totmedi_string = \"\"\r\n    totnatu_string = \"\"\r\n    totperc_string = \"\"\r\n    totperf_string = \"\"\r\n    totpers_string = \"\"\r\n    totreli_string = \"\"\r\n    totslei_string = \"\"\r\n    totstea_string = \"\"\r\n    totsurv_string = \"\"\r\nend\r\n\r\nfunction initializeInput()\r\n\r\n    self.createInput({input_function = \"editCharactername\", function_owner = self, position = {-0.6, 0.6, -6.16}, width = 1600, height = 230, font_size = 200, alignment = 3, value = charactername_string})\r\n    self.createInput({input_function = \"editCharlvl\", function_owner = self, position = {2.59, 0.6, -7.31}, width = 254, height = 300, font_size = 200, alignment = 3, value = charlvl_string})\r\n    self.createInput({input_function = \"editClass1\", function_owner = self, position = {2.4, 0.6, -6.57}, width = 760, height = 200, font_size = 140, alignment = 1, value = class1_string})\r\n    self.createInput({input_function = \"editClass2\", function_owner = self, position = {4.3, 0.6, -6.57}, width = 760, height = 200, font_size = 140, alignment = 1, value = class2_string})\r\n    self.createInput({input_function = \"editClasslvl1\", function_owner = self, position = {3.347, 0.6, -6.51}, width = 140, height = 140, font_size = 100, alignment = 3, value = classlvl1_string, validation = 2})\r\n    self.createInput({input_function = \"editClasslvl2\", function_owner = self, position = {5.247, 0.6, -6.51}, width = 140, height = 140, font_size = 100, alignment = 3, value = classlvl2_string, validation = 2})\r\n    self.createInput({input_function = \"editPlayername\", function_owner = self, position = {6.1, 0.6, -6.57}, width = 650, height = 200, font_size = 110, alignment = 3, value = playername_string})\r\n    self.createInput({input_function = \"editRace\", function_owner = self, position = {2.45, 0.6, -5.69}, width = 795, height = 130, font_size = 100, alignment = 3, value = race_string})\r\n    self.createInput({input_function = \"editAlignment\", function_owner = self, position = {4.25, 0.6, -5.69}, width = 840, height = 130, font_size = 100, alignment = 3, value = alignment_string})\r\n    self.createInput({input_function = \"editExper\", function_owner = self, position = {6.04, 0.6, -5.76}, width = 520, height = 223, font_size = 100, alignment = 3, value = exper_string})\r\n    self.createInput({input_function = \"editStr\", function_owner = self, position = {-7.75, 0.6, -5.59}, width = 300, height = 240, font_size = 200, alignment = 3, value = str_string})\r\n    self.createInput({input_function = \"editDex\", function_owner = self, position = {-7.75, 0.6, -3.365}, width = 300, height = 240, font_size = 200, alignment = 3, value = dex_string})\r\n    self.createInput({input_function = \"editCons\", function_owner = self, position = {-7.75, 0.6, -1.14}, width = 300, height = 240, font_size = 200, alignment = 3, value = cons_string})\r\n    self.createInput({input_function = \"editInt\", function_owner = self, position = {-7.75, 0.6, 1.085}, width = 300, height = 240, font_size = 200, alignment = 3, value = int_string})\r\n    self.createInput({input_function = \"editWis\", function_owner = self, position = {-7.75, 0.6, 3.31}, width = 300, height = 240, font_size = 200, alignment = 3, value = wis_string})\r\n    self.createInput({input_function = \"editCha\", function_owner = self, position = {-7.75, 0.6, 5.535}, width = 300, height = 240, font_size = 200, alignment = 3, value = cha_string})\r\n    self.createInput({input_function = \"editModstr\", function_owner = self, position = {-7.75, 0.6, -4.77}, width = 200, height = 175, font_size = 150, alignment = 3, value = modstr_string})\r\n    self.createInput({input_function = \"editModdex\", function_owner = self, position = {-7.75, 0.6, -2.545}, width = 200, height = 175, font_size = 150, alignment = 3, value = moddex_string})\r\n    self.createInput({input_function = \"editModcon\", function_owner = self, position = {-7.75, 0.6, -0.320}, width = 200, height = 175, font_size = 150, alignment = 3, value = modcon_string})\r\n    self.createInput({input_function = \"editModint\", function_owner = self, position = {-7.75, 0.6, 1.905}, width = 200, height = 175, font_size = 150, alignment = 3, value = modint_string})\r\n    self.createInput({input_function = \"editModwis\", function_owner = self, position = {-7.75, 0.6, 4.13}, width = 200, height = 175, font_size = 150, alignment = 3, value = modwis_string})\r\n    self.createInput({input_function = \"editModcha\", function_owner = self, position = {-7.75, 0.6, 6.355}, width = 200, height = 175, font_size = 150, alignment = 3, value = modcha_string})\r\n    self.createInput({input_function = \"editCoincp\", function_owner = self, position = {7.74, 0.6, -7.51}, width = 240, height = 153, font_size = 130, alignment = 3, value = coincp_string, validation = 2})\r\n    self.createInput({input_function = \"editCoinsp\", function_owner = self, position = {7.74, 0.6, -6.70}, width = 240, height = 153, font_size = 130, alignment = 3, value = coinsp_string, validation = 2})\r\n    self.createInput({input_function = \"editCoinep\", function_owner = self, position = {7.74, 0.6, -5.89}, width = 240, height = 153, font_size = 90, alignment = 3, value = coinep_string, validation = 2})\r\n    self.createInput({input_function = \"editCoingp\", function_owner = self, position = {7.74, 0.6, -5.08}, width = 240, height = 153, font_size = 90, alignment = 3, value = coingp_string, validation = 2})\r\n    self.createInput({input_function = \"editCoinpp\", function_owner = self, position = {7.74, 0.6, -4.27}, width = 240, height = 153, font_size = 130, alignment = 3, value = coinpp_string, validation = 2})\r\n    self.createInput({input_function = \"editProfbonus\", function_owner = self, position = {-6.87, 0.6, -5.28}, width = 220, height = 210, font_size = 180, alignment = 3, value = profbonus_string})\r\n    self.createInput({input_function = \"editPasswisdom\", function_owner = self, position = {-7.895, 0.6, 7.75}, width = 230, height = 210, font_size = 180, alignment = 3, value = passwisdom_string, validation = 2})\r\n    self.createInput({input_function = \"editArmorclass\", function_owner = self, position = {-4.38, 0.6, -7.4}, width = 300, height = 280, font_size = 245, font_color = {0,0,255}, alignment = 3, value = armorclass_string, validation = 2})\r\n    self.createInput({input_function = \"editArmorbonus\", function_owner = self, position = {-3.4, 0.6, -7.15}, width = 300, height = 280, font_size = 245, font_color = {255,0,255}, alignment = 3, value = armorbonus_string})\r\n    self.createInput({input_function = \"editMaxhp\", function_owner = self, position = {-4.382, 0.6, -5.17}, width = 316, height = 220, font_size = 170, font_color = {0,0,255}, alignment = 3, value = maxhp_string, validation = 2})\r\n    self.createInput({input_function = \"editCurhp\", function_owner = self, position = {-3.43, 0.6, -5.88}, width = 330, height = 220, font_size = 170, font_color = {255,0,0}, alignment = 3, value = curhp_string, validation = 2})\r\n    self.createInput({input_function = \"editTemphp\", function_owner = self, position = {-3.43, 0.6, -4.96}, width = 330, height = 220, font_size = 170, font_color = {255,0,255}, alignment = 3, value = temphp_string, validation = 2})\r\n    self.createInput({input_function = \"editInitiative\", function_owner = self, position = {-4.382, 0.6, -3.65}, width = 330, height = 350, font_size = 280, alignment = 3, value = initiative_string, validation = 1})\r\n    self.createInput({input_function = \"editSpeed\", function_owner = self, position = {-3.43, 0.6, -3.65}, width = 330, height = 350, font_size = 280, alignment = 3, value = speed_string, validation = 2})\r\n    self.createInput({input_function = \"editAlterspeed1\", function_owner = self, position = {-3.165, 0.6, -2.67}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed1_string})\r\n    self.createInput({input_function = \"editAlterspeed2\", function_owner = self, position = {-3.165, 0.6, -2.42}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed2_string})\r\n    self.createInput({input_function = \"editAlterspeed3\", function_owner = self, position = {-3.165, 0.6, -2.17}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed3_string})\r\n    self.createInput({input_function = \"editAlterspeed4\", function_owner = self, position = {-3.165, 0.6, -1.92}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed4_string})\r\n    self.createInput({input_function = \"editAlterspeed5\", function_owner = self, position = {-3.165, 0.6, -1.67}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed5_string})\r\n    self.createInput({input_function = \"editAlterspeed6\", function_owner = self, position = {-3.165, 0.6, -1.42}, width = 186, height = 110, font_size = 70, alignment = 3, value = alterspeed6_string})\r\n    self.createInput({input_function = \"editVision\", function_owner = self, position = {-4.382, 0.6, -1.65}, width = 316, height = 220, font_size = 170, alignment = 3, value = vision_string, validation = 2})\r\n    self.createInput({input_function = \"editExhaustion\", function_owner = self, position = {-3.43, 0.6, -0.45}, width = 330, height = 350, font_size = 280, font_color = {255,0,0}, alignment = 3, value = exhaustion_string, validation = 2})\r\n    self.createInput({input_function = \"editResimmred\", function_owner = self, position = {-3.902, 0.6, 0.917}, width = 830, height = 370, font_size = 70, alignment = 1, value = resimmred_string})\r\n    self.createInput({input_function = \"editConditions\", function_owner = self, position = {-3.902, 0.6, 2.3}, width = 830, height = 370, font_size = 70, alignment = 1, value = conditions_string})\r\n    self.createInput({input_function = \"editSpellsavedc\", function_owner = self, position = {-4.27, 0.6, 3.993}, width = 280, height = 280, font_size = 230, font_color = {0,0,255}, alignment = 3, value = spellsavedc_string})\r\n    self.createInput({input_function = \"editSpellatkbonus\", function_owner = self, position = {-3.55, 0.6, 3.993}, width = 280, height = 280, font_size = 170, font_color = {255,0,255}, alignment = 3, value = spellatkbonus_string})\r\n    self.createInput({input_function = \"editHitdice1\", function_owner = self, position = {-4.29, 0.6, 5.354}, width = 212, height = 190, font_size = 120, alignment = 3, value = hitdice1_string})\r\n    self.createInput({input_function = \"editHitdice2\", function_owner = self, position = {-4.29, 0.6, 5.88}, width = 212, height = 190, font_size = 120, alignment = 3, value = hitdice2_string})\r\n    self.createInput({input_function = \"editHitdicemax1\", function_owner = self, position = {-3.89, 0.6, 5.354}, width = 180, height = 190, font_size = 130, font_color = {0,0,255}, alignment = 3, value = hitdicemax1_string, validation = 2})\r\n    self.createInput({input_function = \"editHitdicemax2\", function_owner = self, position = {-3.89, 0.6, 5.88}, width = 180, height = 190, font_size = 130, font_color = {0,0,255}, alignment = 3, value = hitdicemax2_string, validation = 2})\r\n    self.createInput({input_function = \"editHitdicecur1\", function_owner = self, position = {-3.52, 0.6, 5.354}, width = 180, height = 190, font_size = 130, font_color = {255,0,0}, alignment = 3, value = hitdicecur1_string, validation = 2})\r\n    self.createInput({input_function = \"editHitdicecur2\", function_owner = self, position = {-3.52, 0.6, 5.88}, width = 180, height = 190, font_size = 130, font_color = {255,0,0}, alignment = 3, value = hitdicecur2_string, validation = 2})\r\n    self.createInput({input_function = \"editDamage1\", function_owner = self, position = {-2.26, 0.6, -1.25}, width = 490, height = 150, font_size = 60, font_color = {0,0,255}, alignment = 3, value = damage1_string})\r\n    self.createInput({input_function = \"editDamage2\", function_owner = self, position = {-0.99, 0.6, -1.25}, width = 490, height = 150, font_size = 60, font_color = {0,0,255}, alignment = 3, value = damage2_string})\r\n    self.createInput({input_function = \"editDamage3\", function_owner = self, position = {0.278, 0.6, -1.25}, width = 490, height = 150, font_size = 60, font_color = {0,0,255}, alignment = 3, value = damage3_string})\r\n    self.createInput({input_function = \"editDamage4\", function_owner = self, position = {1.546, 0.6, -1.25}, width = 490, height = 150, font_size = 60, font_color = {0,0,255}, alignment = 3, value = damage4_string})\r\n    self.createInput({input_function = \"editDamage5\", function_owner = self, position = {2.81, 0.6, -1.25}, width = 490, height = 150, font_size = 60, font_color = {0,0,255}, alignment = 3, value = damage5_string})\r\n    self.createInput({input_function = \"editWeaponsprof\", function_owner = self, position = {6.73, 0.6, 2.63}, width = 1400, height = 400, font_size = 90, alignment = 1, value = weaponsprof_string})\r\n    self.createInput({input_function = \"editToolsprof\", function_owner = self, position = {6.73, 0.6, 3.63}, width = 1400, height = 400, font_size = 90, alignment = 1, value = toolsprof_string})\r\n    self.createInput({input_function = \"editLanguages\", function_owner = self, position = {6.73, 0.6, 4.95}, width = 1400, height = 320, font_size = 90, alignment = 1, value = languages_string})\r\n    self.createInput({input_function = \"editFeats\", function_owner = self, position = {6.73, 0.6, 6.7}, width = 1400, height = 770, font_size = 90, alignment = 1, value = feats_string})\r\n    self.createInput({input_function = \"editStstr\", function_owner = self, position = {-6.28, 0.6, -4.21}, width = 118, height = 85, font_size = 60, alignment = 3, value = ststr_string})\r\n    self.createInput({input_function = \"editStdex\", function_owner = self, position = {-6.28, 0.6, -3.79}, width = 118, height = 85, font_size = 60, alignment = 3, value = stdex_string})\r\n    self.createInput({input_function = \"editStcon\", function_owner = self, position = {-6.28, 0.6, -3.37}, width = 118, height = 85, font_size = 60, alignment = 3, value = stcon_string})\r\n    self.createInput({input_function = \"editStint\", function_owner = self, position = {-6.28, 0.6, -2.95}, width = 118, height = 85, font_size = 60, alignment = 3, value = stint_string})\r\n    self.createInput({input_function = \"editStwis\", function_owner = self, position = {-6.28, 0.6, -2.53}, width = 118, height = 85, font_size = 60, alignment = 3, value = stwis_string})\r\n    self.createInput({input_function = \"editStcha\", function_owner = self, position = {-6.28, 0.6, -2.11}, width = 118, height = 85, font_size = 60, alignment = 3, value = stcha_string})\r\n    self.createInput({input_function = \"editItstr\", function_owner = self, position = {-6.53, 0.6, -4.21}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itstr_string})\r\n    self.createInput({input_function = \"editItdex\", function_owner = self, position = {-6.53, 0.6, -3.79}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itdex_string})\r\n    self.createInput({input_function = \"editItcon\", function_owner = self, position = {-6.53, 0.6, -3.37}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itcon_string})\r\n    self.createInput({input_function = \"editItint\", function_owner = self, position = {-6.53, 0.6, -2.95}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itint_string})\r\n    self.createInput({input_function = \"editItwis\", function_owner = self, position = {-6.53, 0.6, -2.53}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itwis_string})\r\n    self.createInput({input_function = \"editItcha\", function_owner = self, position = {-6.53, 0.6, -2.11}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itcha_string})\r\n    self.createInput({input_function = \"editTotstr\", function_owner = self, position = {-6.81, 0.6, -4.21}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totstr_string})\r\n    self.createInput({input_function = \"editTotdex\", function_owner = self, position = {-6.81, 0.6, -3.79}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totdex_string})\r\n    self.createInput({input_function = \"editTotcon\", function_owner = self, position = {-6.81, 0.6, -3.37}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totcon_string})\r\n    self.createInput({input_function = \"editTotint\", function_owner = self, position = {-6.81, 0.6, -2.95}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totint_string})\r\n    self.createInput({input_function = \"editTotwis\", function_owner = self, position = {-6.81, 0.6, -2.53}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totwis_string})\r\n    self.createInput({input_function = \"editTotcha\", function_owner = self, position = {-6.81, 0.6, -2.11}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totcha_string})\r\n    self.createInput({input_function = \"editAmmo1\", function_owner = self, position = {3.69, 0.6, -1.50}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = ammo1_string, validation = 2})\r\n    self.createInput({input_function = \"editAmmo2\", function_owner = self, position = {3.69, 0.6, 0.79}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = ammo2_string, validation = 2})\r\n    self.createInput({input_function = \"editAmmo3\", function_owner = self, position = {3.69, 0.6, 3.08}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = ammo3_string, validation = 2})\r\n    self.createInput({input_function = \"editPotion1\", function_owner = self, position = {3.635, 0.6, 4.05}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = potion1_string, validation = 2})\r\n    self.createInput({input_function = \"editPotion2\", function_owner = self, position = {3.69, 0.6, 5.43}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = potion2_string, validation = 2})\r\n    self.createInput({input_function = \"editPotion3\", function_owner = self, position = {3.635, 0.6, 6.34}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = potion3_string, validation = 2})\r\n    self.createInput({input_function = \"editPotion4\", function_owner = self, position = {3.69, 0.6, 7.72}, width = 160, height = 190, font_size = 110, font_color = {255,0,0}, alignment = 3, value = potion4_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeature1\", function_owner = self, position = {6.045, 0.6, -3.07}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature1_string})\r\n    self.createInput({input_function = \"editLimitedfeature2\", function_owner = self, position = {6.045, 0.6, -2.465}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature2_string})\r\n    self.createInput({input_function = \"editLimitedfeature3\", function_owner = self, position = {6.045, 0.6, -1.86}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature3_string})\r\n    self.createInput({input_function = \"editLimitedfeature4\", function_owner = self, position = {6.045, 0.6, -1.255}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature4_string})\r\n    self.createInput({input_function = \"editLimitedfeature5\", function_owner = self, position = {6.045, 0.6, -0.65}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature5_string})\r\n    self.createInput({input_function = \"editLimitedfeature6\", function_owner = self, position = {6.045, 0.6, -0.045}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature6_string})\r\n    self.createInput({input_function = \"editLimitedfeature7\", function_owner = self, position = {6.045, 0.6, 0.56}, width = 700, height = 240, font_size = 70, alignment = 1, value = limitedfeature7_string})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal1\", function_owner = self, position = {7.634, 0.6, -3.07}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal1_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal2\", function_owner = self, position = {7.634, 0.6, -2.465}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal2_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal3\", function_owner = self, position = {7.634, 0.6, -1.86}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal3_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal4\", function_owner = self, position = {7.634, 0.6, -1.255}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal4_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal5\", function_owner = self, position = {7.634, 0.6, -0.65}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal5_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal6\", function_owner = self, position = {7.634, 0.6, -0.045}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal6_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeaturetotal7\", function_owner = self, position = {7.634, 0.6, 0.56}, width = 170, height = 240, font_size = 130, font_color = {0,0,255}, alignment = 3, value = limitedfeaturetotal7_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft1\", function_owner = self, position = {8.0, 0.6, -3.07}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft1_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft2\", function_owner = self, position = {8.0, 0.6, -2.465}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft2_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft3\", function_owner = self, position = {8.0, 0.6, -1.86}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft3_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft4\", function_owner = self, position = {8.0, 0.6, -1.255}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft4_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft5\", function_owner = self, position = {8.0, 0.6, -0.65}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft5_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft6\", function_owner = self, position = {8.0, 0.6, -0.045}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft6_string, validation = 2})\r\n    self.createInput({input_function = \"editLimitedfeatureleft7\", function_owner = self, position = {8.0, 0.6, 0.56}, width = 170, height = 240, font_size = 130, font_color = {255,0,0}, alignment = 3, value = limitedfeatureleft7_string, validation = 2})\r\n    --skills\r\n    self.createInput({input_function = \"editSkacro\", function_owner = self, position = {-6.28, 0.6, -0.63}, width = 118, height = 85, font_size = 60, alignment = 3, value = skacro_string})\r\n    self.createInput({input_function = \"editSkanim\", function_owner = self, position = {-6.28, 0.6, -0.21}, width = 118, height = 85, font_size = 60, alignment = 3, value = skanim_string})\r\n    self.createInput({input_function = \"editSkarca\", function_owner = self, position = {-6.28, 0.6, 0.21}, width = 118, height = 85, font_size = 60, alignment = 3, value = skarca_string})\r\n    self.createInput({input_function = \"editSkathl\", function_owner = self, position = {-6.28, 0.6, 0.63}, width = 118, height = 85, font_size = 60, alignment = 3, value = skathl_string})\r\n    self.createInput({input_function = \"editSkdece\", function_owner = self, position = {-6.28, 0.6, 1.05}, width = 118, height = 85, font_size = 60, alignment = 3, value = skdece_string})\r\n    self.createInput({input_function = \"editSkhist\", function_owner = self, position = {-6.28, 0.6, 1.47}, width = 118, height = 85, font_size = 60, alignment = 3, value = skhist_string})\r\n    self.createInput({input_function = \"editSkinsi\", function_owner = self, position = {-6.28, 0.6, 1.89}, width = 118, height = 85, font_size = 60, alignment = 3, value = skinsi_string})\r\n    self.createInput({input_function = \"editSkinti\", function_owner = self, position = {-6.28, 0.6, 2.31}, width = 118, height = 85, font_size = 60, alignment = 3, value = skinti_string})\r\n    self.createInput({input_function = \"editSkinve\", function_owner = self, position = {-6.28, 0.6, 2.73}, width = 118, height = 85, font_size = 60, alignment = 3, value = skinve_string})\r\n    self.createInput({input_function = \"editSkmedi\", function_owner = self, position = {-6.28, 0.6, 3.15}, width = 118, height = 85, font_size = 60, alignment = 3, value = skmedi_string})\r\n    self.createInput({input_function = \"editSknatu\", function_owner = self, position = {-6.28, 0.6, 3.57}, width = 118, height = 85, font_size = 60, alignment = 3, value = sknatu_string})\r\n    self.createInput({input_function = \"editSkperc\", function_owner = self, position = {-6.28, 0.6, 3.99}, width = 118, height = 85, font_size = 60, alignment = 3, value = skperc_string})\r\n    self.createInput({input_function = \"editSkperf\", function_owner = self, position = {-6.28, 0.6, 4.41}, width = 118, height = 85, font_size = 60, alignment = 3, value = skperf_string})\r\n    self.createInput({input_function = \"editSkpers\", function_owner = self, position = {-6.28, 0.6, 4.83}, width = 118, height = 85, font_size = 60, alignment = 3, value = skpers_string})\r\n    self.createInput({input_function = \"editSkreli\", function_owner = self, position = {-6.28, 0.6, 5.25}, width = 118, height = 85, font_size = 60, alignment = 3, value = skreli_string})\r\n    self.createInput({input_function = \"editSkslei\", function_owner = self, position = {-6.28, 0.6, 5.67}, width = 118, height = 85, font_size = 60, alignment = 3, value = skslei_string})\r\n    self.createInput({input_function = \"editSkstea\", function_owner = self, position = {-6.28, 0.6, 6.09}, width = 118, height = 85, font_size = 60, alignment = 3, value = skstea_string})\r\n    self.createInput({input_function = \"editSksurv\", function_owner = self, position = {-6.28, 0.6, 6.51}, width = 118, height = 85, font_size = 60, alignment = 3, value = sksurv_string})\r\n    self.createInput({input_function = \"editItacro\", function_owner = self, position = {-6.53, 0.6, -0.63}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itacro_string})\r\n    self.createInput({input_function = \"editItanim\", function_owner = self, position = {-6.53, 0.6, -0.21}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itanim_string})\r\n    self.createInput({input_function = \"editItarca\", function_owner = self, position = {-6.53, 0.6, 0.21}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itarca_string})\r\n    self.createInput({input_function = \"editItathl\", function_owner = self, position = {-6.53, 0.6, 0.63}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itathl_string})\r\n    self.createInput({input_function = \"editItdece\", function_owner = self, position = {-6.53, 0.6, 1.05}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itdece_string})\r\n    self.createInput({input_function = \"editIthist\", function_owner = self, position = {-6.53, 0.6, 1.47}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = ithist_string})\r\n    self.createInput({input_function = \"editItinsi\", function_owner = self, position = {-6.53, 0.6, 1.89}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itinsi_string})\r\n    self.createInput({input_function = \"editItinti\", function_owner = self, position = {-6.53, 0.6, 2.31}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itinti_string})\r\n    self.createInput({input_function = \"editItinve\", function_owner = self, position = {-6.53, 0.6, 2.73}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itinve_string})\r\n    self.createInput({input_function = \"editItmedi\", function_owner = self, position = {-6.53, 0.6, 3.15}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itmedi_string})\r\n    self.createInput({input_function = \"editItnatu\", function_owner = self, position = {-6.53, 0.6, 3.57}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itnatu_string})\r\n    self.createInput({input_function = \"editItperc\", function_owner = self, position = {-6.53, 0.6, 3.99}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itperc_string})\r\n    self.createInput({input_function = \"editItperf\", function_owner = self, position = {-6.53, 0.6, 4.41}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itperf_string})\r\n    self.createInput({input_function = \"editItpers\", function_owner = self, position = {-6.53, 0.6, 4.83}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itpers_string})\r\n    self.createInput({input_function = \"editItreli\", function_owner = self, position = {-6.53, 0.6, 5.25}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itreli_string})\r\n    self.createInput({input_function = \"editItslei\", function_owner = self, position = {-6.53, 0.6, 5.67}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itslei_string})\r\n    self.createInput({input_function = \"editItstea\", function_owner = self, position = {-6.53, 0.6, 6.09}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itstea_string})\r\n    self.createInput({input_function = \"editItsurv\", function_owner = self, position = {-6.53, 0.6, 6.51}, width = 118, height = 85, font_size = 60, font_color = {255,0,0}, alignment = 3, value = itsurv_string})\r\n    self.createInput({input_function = \"editTotacro\", function_owner = self, position = {-6.81, 0.6, -0.63}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totacro_string})\r\n    self.createInput({input_function = \"editTotanim\", function_owner = self, position = {-6.81, 0.6, -0.21}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totanim_string})\r\n    self.createInput({input_function = \"editTotarca\", function_owner = self, position = {-6.81, 0.6, 0.21}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totarca_string})\r\n    self.createInput({input_function = \"editTotathl\", function_owner = self, position = {-6.81, 0.6, 0.63}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totathl_string})\r\n    self.createInput({input_function = \"editTotdece\", function_owner = self, position = {-6.81, 0.6, 1.05}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totdece_string})\r\n    self.createInput({input_function = \"editTothist\", function_owner = self, position = {-6.81, 0.6, 1.47}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = tothist_string})\r\n    self.createInput({input_function = \"editTotinsi\", function_owner = self, position = {-6.81, 0.6, 1.89}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totinsi_string})\r\n    self.createInput({input_function = \"editTotinti\", function_owner = self, position = {-6.81, 0.6, 2.31}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totinti_string})\r\n    self.createInput({input_function = \"editTotinve\", function_owner = self, position = {-6.81, 0.6, 2.73}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totinve_string})\r\n    self.createInput({input_function = \"editTotmedi\", function_owner = self, position = {-6.81, 0.6, 3.15}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totmedi_string})\r\n    self.createInput({input_function = \"editTotnatu\", function_owner = self, position = {-6.81, 0.6, 3.57}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totnatu_string})\r\n    self.createInput({input_function = \"editTotperc\", function_owner = self, position = {-6.81, 0.6, 3.99}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totperc_string})\r\n    self.createInput({input_function = \"editTotperf\", function_owner = self, position = {-6.81, 0.6, 4.41}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totperf_string})\r\n    self.createInput({input_function = \"editTotpers\", function_owner = self, position = {-6.81, 0.6, 4.83}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totpers_string})\r\n    self.createInput({input_function = \"editTotreli\", function_owner = self, position = {-6.81, 0.6, 5.25}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totreli_string})\r\n    self.createInput({input_function = \"editTotslei\", function_owner = self, position = {-6.81, 0.6, 5.67}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totslei_string})\r\n    self.createInput({input_function = \"editTotstea\", function_owner = self, position = {-6.81, 0.6, 6.09}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totstea_string})\r\n    self.createInput({input_function = \"editTotsurv\", function_owner = self, position = {-6.81, 0.6, 6.51}, width = 118, height = 85, font_size = 60, font_color = {0,0,255}, alignment = 3, value = totsurv_string})\r\nend\r\n\r\nfunction initializeButtons()\r\n    self.createButton({click_function = \"toggleButton_inspiration\", function_owner = self, position = {-6.884, 0.6, -6.465}, label = toggles[1], width = 220, height = 300, font_size = 250})\r\n    local vert_offset = -0.42;\r\n    for i = 1, 6 do\r\n        self.createButton({click_function = \"toggleButton_savingthrow_\" .. tostring(i), function_owner = self, position = {-7.0, 0.6, -4.232 - vert_offset * (i-1)}, label = toggles[1 + i], width = 70, height = 110, font_size = 100})\r\n    end\r\n    local vert_offset = -0.42;\r\n    for i = 1, 18 do\r\n        self.createButton({click_function = \"toggleButton_skills_\" .. tostring(i), function_owner = self, position = {-7.0, 0.6, -0.65 - vert_offset * (i-1)}, label = toggles[7 + i], width = 70, height = 110, font_size = 100})\r\n    end\r\n    self.createButton({click_function = \"toggleButton_darkvision\", function_owner = self, position = {-4.662, 0.6, -2.14}, label = toggles[26], width = 70, height = 110, font_size = 100})\r\n    self.createButton({click_function = \"toggleButton_deathsave1\", function_owner = self, position = {-3.862, 0.6, 6.92}, label = toggles[27], width = 90, height = 150, font_size = 130, font_color = {0,0,255}})\r\n    self.createButton({click_function = \"toggleButton_deathsave2\", function_owner = self, position = {-3.64, 0.6, 6.92}, label = toggles[28], width = 90, height = 150, font_size = 130, font_color = {0,0,255}})\r\n    self.createButton({click_function = \"toggleButton_deathsave3\", function_owner = self, position = {-3.418, 0.6, 6.92}, label = toggles[29], width = 90, height = 150, font_size = 130, font_color = {0,0,255}})\r\n    self.createButton({click_function = \"toggleButton_deathfail1\", function_owner = self, position = {-3.862, 0.6, 7.39}, label = toggles[30], width = 90, height = 150, font_size = 130, font_color = {255,0,0}})\r\n    self.createButton({click_function = \"toggleButton_deathfail2\", function_owner = self, position = {-3.64, 0.6, 7.39}, label = toggles[31], width = 90, height = 150, font_size = 130, font_color = {255,0,0}})\r\n    self.createButton({click_function = \"toggleButton_deathfail3\", function_owner = self, position = {-3.418, 0.6, 7.39}, label = toggles[32], width = 90, height = 150, font_size = 130, font_color = {255,0,0}})\r\n    local vert_offset = -0.605;\r\n    for i = 1, 7 do\r\n        self.createButton({click_function = \"toggleButton_recoverysr_\" .. tostring(i), function_owner = self, position = {6.93, 0.6, -3.065 - vert_offset * (i-1)}, label = toggles[32 + i], width = 80, height = 130})\r\n    end\r\n    local vert_offset = -0.605;\r\n    for i = 1, 7 do\r\n        self.createButton({click_function = \"toggleButton_recoverylr_\" .. tostring(i), function_owner = self, position = {7.125, 0.6, -3.065 - vert_offset * (i-1)}, label = toggles[39 + i], width = 80, height = 130})\r\n    end\r\n    local vert_offset = -0.605;\r\n    for i = 1, 7 do\r\n        self.createButton({click_function = \"toggleButton_recoverydn_\" .. tostring(i), function_owner = self, position = {7.31, 0.6, -3.065 - vert_offset * (i-1)}, label = toggles[46 + i], width = 80, height = 130})\r\n    end\r\n    self.createButton({click_function = \"toggleButton_armorprofi1\", function_owner = self, position = {5.96, 0.6, 1.75}, label = toggles[54], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_armorprofi2\", function_owner = self, position = {6.44, 0.6, 1.75}, label = toggles[55], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_armorprofi3\", function_owner = self, position = {7.01, 0.6, 1.75}, label = toggles[56], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_armorprofi4\", function_owner = self, position = {7.51, 0.6, 1.75}, label = toggles[57], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_weaponprofi1\", function_owner = self, position = {5.96, 0.6, 2.09}, label = toggles[58], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_weaponprofi2\", function_owner = self, position = {6.44, 0.6, 2.09}, label = toggles[59], width = 80, height = 130})\r\n    self.createButton({click_function = \"toggleButton_weaponprofi3\", function_owner = self, position = {7.01, 0.6, 2.09}, label = toggles[60], width = 80, height = 130})\r\nend\r\n\r\nfunction toggleButton_inspiration()    toggleButton(button_index.inspiration,    1) end\r\nfunction toggleButton_savingthrow_1()  toggleButton(button_index.savingthrow_1,  2) end\r\nfunction toggleButton_savingthrow_2()  toggleButton(button_index.savingthrow_2,  3) end\r\nfunction toggleButton_savingthrow_3()  toggleButton(button_index.savingthrow_3,  4) end\r\nfunction toggleButton_savingthrow_4()  toggleButton(button_index.savingthrow_4,  5) end\r\nfunction toggleButton_savingthrow_5()  toggleButton(button_index.savingthrow_5,  6) end\r\nfunction toggleButton_savingthrow_6()  toggleButton(button_index.savingthrow_6,  7) end\r\nfunction toggleButton_skills_1()       toggleButton(button_index.skills_1,       8) end\r\nfunction toggleButton_skills_2()       toggleButton(button_index.skills_2,       9) end\r\nfunction toggleButton_skills_3()       toggleButton(button_index.skills_3,       10) end\r\nfunction toggleButton_skills_4()       toggleButton(button_index.skills_4,       11) end\r\nfunction toggleButton_skills_5()       toggleButton(button_index.skills_5,       12) end\r\nfunction toggleButton_skills_6()       toggleButton(button_index.skills_6,       13) end\r\nfunction toggleButton_skills_7()       toggleButton(button_index.skills_7,       14) end\r\nfunction toggleButton_skills_8()       toggleButton(button_index.skills_8,       15) end\r\nfunction toggleButton_skills_9()       toggleButton(button_index.skills_9,       16) end\r\nfunction toggleButton_skills_10()      toggleButton(button_index.skills_10,      17) end\r\nfunction toggleButton_skills_11()      toggleButton(button_index.skills_11,      18) end\r\nfunction toggleButton_skills_12()      toggleButton(button_index.skills_12,      19) end\r\nfunction toggleButton_skills_13()      toggleButton(button_index.skills_13,      20) end\r\nfunction toggleButton_skills_14()      toggleButton(button_index.skills_14,      21) end\r\nfunction toggleButton_skills_15()      toggleButton(button_index.skills_15,      22) end\r\nfunction toggleButton_skills_16()      toggleButton(button_index.skills_16,      23) end\r\nfunction toggleButton_skills_17()      toggleButton(button_index.skills_17,      24) end\r\nfunction toggleButton_skills_18()      toggleButton(button_index.skills_18,      25) end\r\nfunction toggleButton_darkvision()     toggleButton(button_index.darkvision,     26) end\r\nfunction toggleButton_deathsave1()     toggleButton(button_index.deathsave1,     27) end\r\nfunction toggleButton_deathsave2()     toggleButton(button_index.deathsave2,     28) end\r\nfunction toggleButton_deathsave3()     toggleButton(button_index.deathsave3,     29) end\r\nfunction toggleButton_deathfail1()     toggleButton(button_index.deathfail1,     30) end\r\nfunction toggleButton_deathfail2()     toggleButton(button_index.deathfail2,     31) end\r\nfunction toggleButton_deathfail3()     toggleButton(button_index.deathfail3,     32) end\r\nfunction toggleButton_recoverysr_1()   toggleButton(button_index.recoverysr_1,   33) end\r\nfunction toggleButton_recoverysr_2()   toggleButton(button_index.recoverysr_2,   34) end\r\nfunction toggleButton_recoverysr_3()   toggleButton(button_index.recoverysr_3,   35) end\r\nfunction toggleButton_recoverysr_4()   toggleButton(button_index.recoverysr_4,   36) end\r\nfunction toggleButton_recoverysr_5()   toggleButton(button_index.recoverysr_5,   37) end\r\nfunction toggleButton_recoverysr_6()   toggleButton(button_index.recoverysr_6,   38) end\r\nfunction toggleButton_recoverysr_7()   toggleButton(button_index.recoverysr_7,   39) end\r\nfunction toggleButton_recoverylr_1()   toggleButton(button_index.recoverylr_1,   40) end\r\nfunction toggleButton_recoverylr_2()   toggleButton(button_index.recoverylr_2,   41) end\r\nfunction toggleButton_recoverylr_3()   toggleButton(button_index.recoverylr_3,   42) end\r\nfunction toggleButton_recoverylr_4()   toggleButton(button_index.recoverylr_4,   43) end\r\nfunction toggleButton_recoverylr_5()   toggleButton(button_index.recoverylr_5,   44) end\r\nfunction toggleButton_recoverylr_6()   toggleButton(button_index.recoverylr_6,   45) end\r\nfunction toggleButton_recoverylr_7()   toggleButton(button_index.recoverylr_7,   46) end\r\nfunction toggleButton_recoverydn_1()   toggleButton(button_index.recoverydn_1,   47) end\r\nfunction toggleButton_recoverydn_2()   toggleButton(button_index.recoverydn_2,   48) end\r\nfunction toggleButton_recoverydn_3()   toggleButton(button_index.recoverydn_3,   49) end\r\nfunction toggleButton_recoverydn_4()   toggleButton(button_index.recoverydn_4,   50) end\r\nfunction toggleButton_recoverydn_5()   toggleButton(button_index.recoverydn_5,   51) end\r\nfunction toggleButton_recoverydn_6()   toggleButton(button_index.recoverydn_6,   52) end\r\nfunction toggleButton_recoverydn_7()   toggleButton(button_index.recoverydn_7,   53) end\r\nfunction toggleButton_armorprofi1()    toggleButton(button_index.armorprofi1,    54) end\r\nfunction toggleButton_armorprofi2()    toggleButton(button_index.armorprofi2,    55) end\r\nfunction toggleButton_armorprofi3()    toggleButton(button_index.armorprofi3,    56) end\r\nfunction toggleButton_armorprofi4()    toggleButton(button_index.armorprofi4,    57) end\r\nfunction toggleButton_weaponprofi1()   toggleButton(button_index.weaponprofi1,   58) end\r\nfunction toggleButton_weaponprofi2()   toggleButton(button_index.weaponprofi2,   59) end\r\nfunction toggleButton_weaponprofi3()   toggleButton(button_index.weaponprofi3,   60) end\r\n\r\nfunction toggleButton(button_index, toggle_index)\r\n    local newLabel\r\n    local table = self.getButtons()\r\n\r\n    for k, v in pairs(table) do\r\n        if v.index == button_index then\r\n            if toggles[toggle_index] == \"\" then\r\n                toggles[toggle_index] = \"X\"\r\n            else\r\n                toggles[toggle_index] = \"\"\r\n            end\r\n            self.editButton({index = v.index, label = toggles[toggle_index]})\r\n        end\r\n    end\r\nend\r\n\r\nfunction editCharactername(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    charactername_string = input_value;\r\nend\r\nfunction editCharlvl(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    charlvl_string = input_value;\r\nend\r\nfunction editClass1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    class1_string = input_value;\r\nend\r\nfunction editClass2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    class2_string = input_value;\r\nend\r\nfunction editClasslvl1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    classlvl1_string = input_value;\r\nend\r\nfunction editClasslvl2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    classlvl2_string = input_value;\r\nend\r\nfunction editPlayername(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    playername_string = input_value;\r\nend\r\nfunction editRace(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    race_string = input_value;\r\nend\r\nfunction editAlignment(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alignment_string = input_value;\r\nend\r\nfunction editExper(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    exper_string = input_value;\r\nend\r\nfunction editStr(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    str_string = input_value;\r\nend\r\nfunction editDex(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    dex_string = input_value;\r\nend\r\nfunction editCons(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    cons_string = input_value;\r\nend\r\nfunction editInt(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    int_string = input_value;\r\nend\r\nfunction editWis(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    wis_string = input_value;\r\nend\r\nfunction editCha(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    cha_string = input_value;\r\nend\r\nfunction editModstr(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    modstr_string = input_value;\r\nend\r\nfunction editModdex(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    moddex_string = input_value;\r\nend\r\nfunction editModcon(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    modcon_string = input_value;\r\nend\r\nfunction editModint(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    modint_string = input_value;\r\nend\r\nfunction editModwis(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    modwis_string = input_value;\r\nend\r\nfunction editModcha(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    modcha_string = input_value;\r\nend\r\nfunction editProfbonus(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    profbonus_string = input_value;\r\nend\r\nfunction editPasswisdom(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    passwisdom_string = input_value;\r\nend\r\nfunction editArmorclass(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    armorclass_string = input_value;\r\nend\r\nfunction editArmorbonus(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    armorbonus_string = input_value;\r\nend\r\nfunction editMaxhp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    maxhp_string = input_value;\r\nend\r\nfunction editCurhp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    curhp_string = input_value;\r\nend\r\nfunction editTemphp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    temphp_string = input_value;\r\nend\r\nfunction editInitiative(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    initiative_string = input_value;\r\nend\r\nfunction editSpeed(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    speed_string = input_value;\r\nend\r\nfunction editAlterspeed1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed1_string = input_value;\r\nend\r\nfunction editAlterspeed2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed2_string = input_value;\r\nend\r\nfunction editAlterspeed3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed3_string = input_value;\r\nend\r\nfunction editAlterspeed4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed4_string = input_value;\r\nend\r\nfunction editAlterspeed5(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed5_string = input_value;\r\nend\r\nfunction editAlterspeed6(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    alterspeed6_string = input_value;\r\nend\r\nfunction editVision(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    vision_string = input_value;\r\nend\r\nfunction editExhaustion(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    exhaustion_string = input_value;\r\nend\r\nfunction editResimmred(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    resimmred_string = input_value;\r\nend\r\nfunction editConditions(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    conditions_string = input_value;\r\nend\r\nfunction editSpellsavedc(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    spellsavedc_string = input_value;\r\nend\r\nfunction editHitdice1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdice1_string = input_value;\r\nend\r\nfunction editHitdice2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdice2_string = input_value;\r\nend\r\nfunction editHitdicemax1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdicemax1_string = input_value;\r\nend\r\nfunction editHitdicemax2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdicemax2_string = input_value;\r\nend\r\nfunction editHitdicecur1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdicecur1_string = input_value;\r\nend\r\nfunction editHitdicecur2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    hitdicecur2_string = input_value;\r\nend\r\nfunction editSpellatkbonus(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    spellatkbonus_string = input_value;\r\nend\r\nfunction editDamage1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    damage1_string = input_value;\r\nend\r\nfunction editDamage2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    damage2_string = input_value;\r\nend\r\nfunction editDamage3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    damage3_string = input_value;\r\nend\r\nfunction editDamage4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    damage4_string = input_value;\r\nend\r\nfunction editDamage5(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    damage5_string = input_value;\r\nend\r\nfunction editCoincp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    coincp_string = input_value;\r\nend\r\nfunction editCoinsp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    coinsp_string = input_value;\r\nend\r\nfunction editCoinep(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    coinep_string = input_value;\r\nend\r\nfunction editCoingp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    coingp_string = input_value;\r\nend\r\nfunction editCoinpp(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    coinpp_string = input_value;\r\nend\r\nfunction editAmmo1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    ammo1_string = input_value;\r\nend\r\nfunction editAmmo2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    ammo2_string = input_value;\r\nend\r\nfunction editAmmo3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    ammo3_string = input_value;\r\nend\r\nfunction editPotion1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    potion1_string = input_value;\r\nend\r\nfunction editPotion2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    potion2_string = input_value;\r\nend\r\nfunction editPotion3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    potion3_string = input_value;\r\nend\r\nfunction editPotion4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    potion4_string = input_value;\r\nend\r\nfunction editLimitedfeature1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature1_string = input_value;\r\nend\r\nfunction editLimitedfeature2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature2_string = input_value;\r\nend\r\nfunction editLimitedfeature3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature3_string = input_value;\r\nend\r\nfunction editLimitedfeature4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature4_string = input_value;\r\nend\r\nfunction editLimitedfeature5(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature5_string = input_value;\r\nend\r\nfunction editLimitedfeature6(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature6_string = input_value;\r\nend\r\nfunction editLimitedfeature7(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeature7_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal1_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal2_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal3_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal4_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal5(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal5_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal6(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal6_string = input_value;\r\nend\r\nfunction editLimitedfeaturetotal7(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeaturetotal7_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft1(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft1_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft2(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft2_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft3(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft3_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft4(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft4_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft5(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft5_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft6(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft6_string = input_value;\r\nend\r\nfunction editLimitedfeatureleft7(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    limitedfeatureleft7_string = input_value;\r\nend\r\nfunction editWeaponsprof(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    weaponsprof_string = input_value;\r\nend\r\nfunction editToolsprof(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    toolsprof_string = input_value;\r\nend\r\nfunction editLanguages(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    languages_string = input_value;\r\nend\r\nfunction editFeats(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    feats_string = input_value;\r\nend\r\n--\r\nfunction editStstr(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    ststr_string = input_value;\r\nend\r\nfunction editStdex(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    stdex_string = input_value;\r\nend\r\nfunction editStcon(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    stcon_string = input_value;\r\nend\r\nfunction editStint(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    stint_string = input_value;\r\nend\r\nfunction editStwis(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    stwis_string = input_value;\r\nend\r\nfunction editStcha(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    stcha_string = input_value;\r\nend\r\nfunction editItstr(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itstr_string = input_value;\r\nend\r\nfunction editItdex(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itdex_string = input_value;\r\nend\r\nfunction editItcon(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itcon_string = input_value;\r\nend\r\nfunction editItint(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itint_string = input_value;\r\nend\r\nfunction editItwis(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itwis_string = input_value;\r\nend\r\nfunction editItcha(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itcha_string = input_value;\r\nend\r\nfunction editTotstr(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totstr_string = input_value;\r\nend\r\nfunction editTotdex(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totdex_string = input_value;\r\nend\r\nfunction editTotcon(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totcon_string = input_value;\r\nend\r\nfunction editTotint(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totint_string = input_value;\r\nend\r\nfunction editTotwis(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totwis_string = input_value;\r\nend\r\nfunction editTotcha(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totcha_string = input_value;\r\nend\r\nfunction editSkacro(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skacro_string = input_value;\r\nend\r\nfunction editSkanim(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skanim_string = input_value;\r\nend\r\nfunction editSkarca(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skarca_string = input_value;\r\nend\r\nfunction editSkathl(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skathl_string = input_value;\r\nend\r\nfunction editSkdece(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skdece_string = input_value;\r\nend\r\nfunction editSkhist(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skhist_string = input_value;\r\nend\r\nfunction editSkinsi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skinsi_string = input_value;\r\nend\r\nfunction editSkinti(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skinti_string = input_value;\r\nend\r\nfunction editSkinve(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skinve_string = input_value;\r\nend\r\nfunction editSkmedi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skmedi_string = input_value;\r\nend\r\nfunction editSknatu(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    sknatu_string = input_value;\r\nend\r\nfunction editSkperc(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skperc_string = input_value;\r\nend\r\nfunction editSkperf(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skperf_string = input_value;\r\nend\r\nfunction editSkpers(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skpers_string = input_value;\r\nend\r\nfunction editSkreli(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skreli_string = input_value;\r\nend\r\nfunction editSkslei(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skslei_string = input_value;\r\nend\r\nfunction editSkstea(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    skstea_string = input_value;\r\nend\r\nfunction editSksurv(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    sksurv_string = input_value;\r\nend\r\nfunction editItacro(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itacro_string = input_value;\r\nend\r\nfunction editItanim(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itanim_string = input_value;\r\nend\r\nfunction editItarca(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itarca_string = input_value;\r\nend\r\nfunction editItathl(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itathl_string = input_value;\r\nend\r\nfunction editItdece(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itdece_string = input_value;\r\nend\r\nfunction editIthist(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    ithist_string = input_value;\r\nend\r\nfunction editItinsi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itinsi_string = input_value;\r\nend\r\nfunction editItinti(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itinti_string = input_value;\r\nend\r\nfunction editItinve(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itinve_string = input_value;\r\nend\r\nfunction editItmedi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itmedi_string = input_value;\r\nend\r\nfunction editItnatu(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itnatu_string = input_value;\r\nend\r\nfunction editItperc(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itperc_string = input_value;\r\nend\r\nfunction editItperf(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itperf_string = input_value;\r\nend\r\nfunction editItpers(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itpers_string = input_value;\r\nend\r\nfunction editItreli(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itreli_string = input_value;\r\nend\r\nfunction editItslei(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itslei_string = input_value;\r\nend\r\nfunction editItstea(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itstea_string = input_value;\r\nend\r\nfunction editItsurv(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    itsurv_string = input_value;\r\nend\r\nfunction editTotacro(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totacro_string = input_value;\r\nend\r\nfunction editTotanim(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totanim_string = input_value;\r\nend\r\nfunction editTotarca(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totarca_string = input_value;\r\nend\r\nfunction editTotathl(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totathl_string = input_value;\r\nend\r\nfunction editTotdece(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totdece_string = input_value;\r\nend\r\nfunction editTothist(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    tothist_string = input_value;\r\nend\r\nfunction editTotinsi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totinsi_string = input_value;\r\nend\r\nfunction editTotinti(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totinti_string = input_value;\r\nend\r\nfunction editTotinve(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totinve_string = input_value;\r\nend\r\nfunction editTotmedi(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totmedi_string = input_value;\r\nend\r\nfunction editTotnatu(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totnatu_string = input_value;\r\nend\r\nfunction editTotperc(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totperc_string = input_value;\r\nend\r\nfunction editTotperf(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totperf_string = input_value;\r\nend\r\nfunction editTotpers(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totpers_string = input_value;\r\nend\r\nfunction editTotreli(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totreli_string = input_value;\r\nend\r\nfunction editTotslei(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totslei_string = input_value;\r\nend\r\nfunction editTotstea(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totstea_string = input_value;\r\nend\r\nfunction editTotsurv(objectButtonClicked, playerColorClicked, input_value, selected)\r\n    totsurv_string = input_value;\r\nend",
      "LuaScriptState": "{\"s_alignment\":\"\",\"s_alterspeed1\":\"0 ft.\",\"s_alterspeed2\":\"\",\"s_alterspeed3\":\"\",\"s_alterspeed4\":\"\",\"s_alterspeed6\":\"\",\"s_ammo1\":\"0\",\"s_ammo2\":\"0\",\"s_ammo3\":\"0\",\"s_armorbonus\":\"\",\"s_armorclass\":\"\",\"s_cha\":\"+0\",\"s_charactername\":\"\",\"s_charlvl\":\"1\",\"s_class1\":\"\",\"s_class2\":\"\",\"s_classlvl1\":\"1\",\"s_coincp\":\"0\",\"s_coinep\":\"0\",\"s_coingp\":\"0\",\"s_coinpp\":\"0\",\"s_coinsp\":\"0\",\"s_conditions\":\"\",\"s_cons\":\"+0\",\"s_curhp\":\"\",\"s_damage1\":\"example\\n+5, (1d6 + 3) sla\",\"s_damage2\":\"\",\"s_damage3\":\"\",\"s_damage4\":\"\",\"s_damage5\":\"\",\"s_dex\":\"+0\",\"s_exhaustion\":\"0\",\"s_exper\":\"ы0\",\"s_feats\":\"\",\"s_hitdice1\":\"d\",\"s_hitdice2\":\"\",\"s_hitdicecur1\":\"1\",\"s_hitdicecur2\":\"\",\"s_hitdicemax1\":\"1\",\"s_hitdicemax2\":\"\",\"s_initiative\":\"\",\"s_int\":\"+0\",\"s_itacro\":\"\",\"s_itanim\":\"\",\"s_itarca\":\"\",\"s_itathl\":\"\",\"s_itcha\":\"\",\"s_itcon\":\"\",\"s_itdece\":\"\",\"s_itdex\":\"\",\"s_ithist\":\"\",\"s_itinsi\":\"\",\"s_itint\":\"\",\"s_itinti\":\"\",\"s_itinve\":\"\",\"s_itmedi\":\"\",\"s_itnatu\":\"\",\"s_itperc\":\"\",\"s_itperf\":\"\",\"s_itpers\":\"\",\"s_itreli\":\"\",\"s_itslei\":\"\",\"s_itstea\":\"\",\"s_itstr\":\"\",\"s_itsurv\":\"\",\"s_itwis\":\"\",\"s_languages\":\"\",\"s_limitedfeature1\":\"\",\"s_limitedfeature2\":\"\",\"s_limitedfeature3\":\"\",\"s_limitedfeature4\":\"\",\"s_limitedfeature5\":\"\",\"s_limitedfeature6\":\"\",\"s_limitedfeature7\":\"\",\"s_limitedfeatureleft1\":\"\",\"s_limitedfeatureleft2\":\"\",\"s_limitedfeatureleft3\":\"\",\"s_limitedfeatureleft4\":\"\",\"s_limitedfeatureleft5\":\"\",\"s_limitedfeatureleft6\":\"\",\"s_limitedfeatureleft7\":\"\",\"s_limitedfeaturetotal1\":\"\",\"s_limitedfeaturetotal2\":\"\",\"s_limitedfeaturetotal3\":\"\",\"s_limitedfeaturetotal4\":\"\",\"s_limitedfeaturetotal5\":\"\",\"s_limitedfeaturetotal6\":\"\",\"s_limitedfeaturetotal7\":\"\",\"s_maxhp\":\"\",\"s_modcha\":\"10\",\"s_modcon\":\"10\",\"s_moddex\":\"10\",\"s_modint\":\"10\",\"s_modstr\":\"10\",\"s_modwis\":\"10\",\"s_passwisdom\":\"\",\"s_playername\":\"\",\"s_potion1\":\"0\",\"s_potion2\":\"4\",\"s_potion3\":\"0\",\"s_potion4\":\"0\",\"s_profbonus\":\"+2\",\"s_race\":\"\",\"s_resimmred\":\"\",\"s_saved\":true,\"s_skacro\":\"\",\"s_skanim\":\"\",\"s_skarca\":\"\",\"s_skathl\":\"\",\"s_skdece\":\"\",\"s_skhist\":\"\",\"s_skinsi\":\"\",\"s_skinti\":\"\",\"s_skinve\":\"\",\"s_skmedi\":\"\",\"s_sknatu\":\"\",\"s_skperc\":\"\",\"s_skperf\":\"\",\"s_skpers\":\"\",\"s_skreli\":\"\",\"s_skslei\":\"\",\"s_skstea\":\"\",\"s_sksurv\":\"\",\"s_speed\":\"\",\"s_spellatkbonus\":\"\",\"s_spellsavedc\":\"\",\"s_stcha\":\"\",\"s_stcon\":\"\",\"s_stdex\":\"\",\"s_stint\":\"\",\"s_str\":\"+0\",\"s_ststr\":\"\",\"s_stwis\":\"\",\"s_temphp\":\"\",\"s_toggles\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"s_toolsprof\":\"\",\"s_totacro\":\"\",\"s_totanim\":\"\",\"s_totarca\":\"\",\"s_totathl\":\"\",\"s_totcha\":\"\",\"s_totcon\":\"\",\"s_totdece\":\"\",\"s_totdex\":\"\",\"s_tothist\":\"\",\"s_totinsi\":\"\",\"s_totint\":\"\",\"s_totinti\":\"\",\"s_totinve\":\"\",\"s_totmedi\":\"\",\"s_totnatu\":\"\",\"s_totperc\":\"\",\"s_totperf\":\"\",\"s_totpers\":\"\",\"s_totreli\":\"\",\"s_totslei\":\"\",\"s_totstea\":\"\",\"s_totstr\":\"\",\"s_totsurv\":\"\",\"s_totwis\":\"\",\"s_vision\":\"\",\"s_weaponsprof\":\"\",\"s_wis\":\"+0\"}",
      "GUID": "bbb06e",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.9862791,
            "y": 0.5922429,
            "z": 7.0234127
          },
          "Rotation": {
            "x": 1.05803238E-05,
            "y": 0.00281404122,
            "z": -1.13003942E-07
          }
        },
        {
          "Position": {
            "x": 2.24811316,
            "y": 0.592243,
            "z": 7.02330256
          },
          "Rotation": {
            "x": 1.71675822E-06,
            "y": 0.002800381,
            "z": -1.04964522E-06
          }
        },
        {
          "Position": {
            "x": -0.28851378,
            "y": 0.592242956,
            "z": 7.02352571
          },
          "Rotation": {
            "x": 7.44814E-06,
            "y": 0.002773061,
            "z": -4.596367E-07
          }
        },
        {
          "Position": {
            "x": -1.54939675,
            "y": 0.5922429,
            "z": 7.02363443
          },
          "Rotation": {
            "x": 1.31019415E-05,
            "y": 0.00275940076,
            "z": 2.13068938E-06
          }
        },
        {
          "Position": {
            "x": -2.85470033,
            "y": 0.5922439,
            "z": 7.0237484
          },
          "Rotation": {
            "x": 1.13941269E-06,
            "y": 0.002773061,
            "z": 2.68667668E-06
          }
        },
        {
          "Position": {
            "x": -4.480218,
            "y": 0.5922429,
            "z": 7.02388954
          },
          "Rotation": {
            "x": 6.51979349E-07,
            "y": 0.00275940076,
            "z": 8.469747E-07
          }
        },
        {
          "Position": {
            "x": 2.248053,
            "y": 0.5922421,
            "z": 4.736066
          },
          "Rotation": {
            "x": 9.804751E-06,
            "y": 0.00275940076,
            "z": -6.55812755E-07
          }
        },
        {
          "Position": {
            "x": 0.986218333,
            "y": 0.5922431,
            "z": 4.73617554
          },
          "Rotation": {
            "x": 2.9210812E-06,
            "y": 0.00275940076,
            "z": -2.45407159E-06
          }
        },
        {
          "Position": {
            "x": -0.2885747,
            "y": 0.5922422,
            "z": 4.7362895
          },
          "Rotation": {
            "x": 9.454336E-06,
            "y": 0.002800381,
            "z": 5.71256066E-07
          }
        },
        {
          "Position": {
            "x": -1.54945767,
            "y": 0.5922431,
            "z": 4.736398
          },
          "Rotation": {
            "x": 1.67071164E-06,
            "y": 0.002800381,
            "z": 7.25694633E-07
          }
        },
        {
          "Position": {
            "x": -2.854761,
            "y": 0.592243135,
            "z": 4.736512
          },
          "Rotation": {
            "x": 7.898012E-06,
            "y": 0.002800381,
            "z": 9.01079147E-07
          }
        },
        {
          "Position": {
            "x": -4.48028,
            "y": 0.592242241,
            "z": 4.73665237
          },
          "Rotation": {
            "x": 3.90322839E-06,
            "y": 0.002773061,
            "z": 1.16949809E-06
          }
        },
        {
          "Position": {
            "x": 2.24799252,
            "y": 0.5922433,
            "z": 2.44276667
          },
          "Rotation": {
            "x": -4.02375645E-06,
            "y": 0.00274573918,
            "z": -1.26018654E-06
          }
        },
        {
          "Position": {
            "x": 0.9861567,
            "y": 0.5922433,
            "z": 2.44287634
          },
          "Rotation": {
            "x": 5.30959051E-06,
            "y": 0.00274573918,
            "z": 4.291855E-06
          }
        },
        {
          "Position": {
            "x": -0.288635641,
            "y": 0.5922434,
            "z": 2.44299054
          },
          "Rotation": {
            "x": -3.628869E-06,
            "y": 0.002800381,
            "z": -3.42428916E-06
          }
        },
        {
          "Position": {
            "x": -1.54951859,
            "y": 0.59224236,
            "z": 2.44309926
          },
          "Rotation": {
            "x": 4.85128157E-06,
            "y": 0.002800381,
            "z": 1.35385039E-06
          }
        },
        {
          "Position": {
            "x": 2.24792933,
            "y": 0.5922443,
            "z": 0.09850759
          },
          "Rotation": {
            "x": 8.921942E-06,
            "y": 0.00273207878,
            "z": 9.570284E-08
          }
        },
        {
          "Position": {
            "x": 0.9860941,
            "y": 0.592243254,
            "z": 0.09861741
          },
          "Rotation": {
            "x": 6.47086836E-06,
            "y": 0.00274573918,
            "z": -1.81698E-07
          }
        },
        {
          "Position": {
            "x": -0.288697749,
            "y": 0.5922444,
            "z": 0.09873159
          },
          "Rotation": {
            "x": 7.422276E-06,
            "y": 0.002800381,
            "z": 2.27765E-07
          }
        },
        {
          "Position": {
            "x": -4.480403,
            "y": 0.5922434,
            "z": 0.0990942642
          },
          "Rotation": {
            "x": 8.069067E-06,
            "y": 0.00274573918,
            "z": -2.14234365E-06
          }
        },
        {
          "Position": {
            "x": -1.54891646,
            "y": 0.5922434,
            "z": 0.09369401
          },
          "Rotation": {
            "x": -4.106538E-07,
            "y": 0.00275940076,
            "z": 2.36771643E-06
          }
        },
        {
          "Position": {
            "x": -2.82629013,
            "y": 0.592243433,
            "z": 0.09895155
          },
          "Rotation": {
            "x": 6.14820237E-06,
            "y": 0.00281404122,
            "z": -3.11861186E-06
          }
        },
        {
          "Position": {
            "x": -4.480342,
            "y": 0.5922431,
            "z": 2.39254045
          },
          "Rotation": {
            "x": 6.167009E-06,
            "y": 0.00274573918,
            "z": -3.11626673E-06
          }
        },
        {
          "Position": {
            "x": -4.48050356,
            "y": 0.5922432,
            "z": -2.20935488
          },
          "Rotation": {
            "x": 1.40727116E-05,
            "y": 0.004521585,
            "z": -3.2661776E-06
          }
        },
        {
          "Position": {
            "x": -2.8155055,
            "y": 0.5922434,
            "z": 2.44328046
          },
          "Rotation": {
            "x": 4.292153E-06,
            "y": 0.004521585,
            "z": -1.15366674E-06
          }
        }
      ]
    }
  ],
  "TabStates": {},
  "VersionNumber": ""
}