{
  "SaveName": "End Chess",
  "GameMode": "Chess",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "4/24/2020 12:03:12 PM",
  "Table": "Table_RPG",
  "Sky": "Sky_Museum",
  "SkyURL": "https://cdnb.artstation.com/p/assets/panos/panos/006/685/241/large/a2a289d664d2cde2.jpg",
  "Note": "",
  "Rules": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "LuaScript": "--[[ Lua code. See documentation: http://berserk-games.com/knowledgebase/scripting/ --]]\n\n--[[ The onLoad event is called after the game save finishes loading. --]]\nfunction onLoad()\n    --[[ print('onLoad!') --]]\nend\n\n--[[ The onUpdate event is called once per frame. --]]\nfunction onUpdate ()\n    --[[ print('onUpdate loop!') --]]\nend",
  "LuaScriptState": "",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Red",
        "Transform": {
          "posX": -15.1108065,
          "posY": 4.854128,
          "posZ": -20.1076221,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7761154,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -30.2150211,
          "posY": 4.854128,
          "posZ": 10.17524,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.6833792,
          "scaleY": 9.174497,
          "scaleZ": 4.93567228
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 30.25128,
          "posY": 4.854128,
          "posZ": 9.59069252,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.6833725,
          "scaleY": 9.174497,
          "scaleZ": 4.93567228
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 15.4749184,
          "posY": 4.854128,
          "posZ": 19.8365288,
          "rotX": 0.0,
          "rotY": 179.8,
          "rotZ": 0.0,
          "scaleX": 11.807395,
          "scaleY": 9.174497,
          "scaleZ": 4.88878632
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 15.1961479,
          "posY": 4.854128,
          "posZ": -20.1400986,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 11.7760973,
          "scaleY": 9.17449951,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -15.1927767,
          "posY": 4.854128,
          "posZ": 19.787817,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 11.7760973,
          "scaleY": 9.174497,
          "scaleZ": 4.87123871
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 30.10358,
          "posY": 4.854128,
          "posZ": -8.449126,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 11.68337,
          "scaleY": 9.174497,
          "scaleZ": 4.93567228
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -30.247818,
          "posY": 4.854128,
          "posZ": -8.822588,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 11.683383,
          "scaleY": 9.174497,
          "scaleZ": 4.93567228
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": "Green"
  },
  "ObjectStates": [
    {
      "Name": "Chess_Board",
      "Transform": {
        "posX": 0.0,
        "posY": 1.6,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c9ad70"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": 13.4543209,
        "posY": 2.13865685,
        "posZ": -4.08608675,
        "rotX": 6.10313145E-06,
        "rotY": 359.9852,
        "rotZ": -1.89338289E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7102d0"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 17.7173824,
        "posY": 2.62554574,
        "posZ": -6.29065371,
        "rotX": 3.654381E-05,
        "rotY": 0.0545196049,
        "rotZ": -3.679534E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c5b4d2"
    },
    {
      "Name": "Tileset_Table",
      "Transform": {
        "posX": 12.8743315,
        "posY": 1.666758,
        "posZ": -8.396242,
        "rotX": -5.21524562E-05,
        "rotY": 359.989044,
        "rotZ": -3.79638732E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7647059,
        "g": 0.733683348,
        "b": 0.652249157
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "070dc9"
    },
    {
      "Name": "Tileset_Chair",
      "Transform": {
        "posX": 14.7217922,
        "posY": 0.9532752,
        "posZ": -8.948123,
        "rotX": 0.24163878,
        "rotY": 134.97287,
        "rotZ": 359.9866,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "280302"
    },
    {
      "Name": "Tileset_Chair",
      "Transform": {
        "posX": 11.1832943,
        "posY": 0.9532795,
        "posZ": -8.880591,
        "rotX": 0.241198882,
        "rotY": 254.9727,
        "rotZ": 359.9879,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a44ccb"
    },
    {
      "Name": "Tileset_Barrel",
      "Transform": {
        "posX": 11.4137449,
        "posY": 0.9458625,
        "posZ": -6.76113462,
        "rotX": 2.8521747E-06,
        "rotY": -0.0056469664,
        "rotZ": -4.58155773E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "942cf1"
    },
    {
      "Name": "Tileset_Barrel",
      "Transform": {
        "posX": 12.829915,
        "posY": 0.9341047,
        "posZ": -6.22023964,
        "rotX": 8.776464E-07,
        "rotY": 359.992767,
        "rotZ": -1.85505158E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1cf003"
    },
    {
      "Name": "Tileset_Barrel",
      "Transform": {
        "posX": 11.9730492,
        "posY": 0.9341049,
        "posZ": -5.92502928,
        "rotX": -4.843549E-06,
        "rotY": 344.997345,
        "rotZ": -3.221812E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6f9243"
    },
    {
      "Name": "Tileset_Chest",
      "Transform": {
        "posX": 14.20028,
        "posY": 1.155,
        "posZ": -6.629261,
        "rotX": -4.259072E-06,
        "rotY": 44.9405251,
        "rotZ": -2.34348636E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.8970588,
        "g": 0.8970588,
        "b": 0.8970588
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "527fa5"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 26.8109341,
        "posY": 0.7749655,
        "posZ": 1.15314972,
        "rotX": -1.05039067E-06,
        "rotY": 0.0310070124,
        "rotZ": -5.5890564E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9411836,
        "g": 0.48873502,
        "b": 0.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -11.6005392,
            "posY": 3.113443,
            "posZ": 0.6004546,
            "rotX": 4.16728258,
            "rotY": 0.109429188,
            "rotZ": 1.78392172,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "9b36fd"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -9.893722,
            "posY": 3.069134,
            "posZ": 0.5930508,
            "rotX": 5.86969463E-07,
            "rotY": 0.004334769,
            "rotZ": 2.220388E-11,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "443106"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -8.193724,
            "posY": 3.06913424,
            "posZ": 0.5930498,
            "rotX": -1.22729955E-06,
            "rotY": 0.00433479529,
            "rotZ": -4.642656E-11,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "d1528b"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -5.95000029,
            "posY": 4.02699566,
            "posZ": 0.8499994,
            "rotX": -3.308373E-06,
            "rotY": 0.00393781764,
            "rotZ": -1.13688732E-10,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "657291"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -4.25,
            "posY": 4.02699566,
            "posZ": 0.849999368,
            "rotX": 2.82814E-06,
            "rotY": 0.000511357,
            "rotZ": -3.41508121E-06,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "aeeb26"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -2.55000019,
            "posY": 4.02699566,
            "posZ": 0.8499994,
            "rotX": 1.31267752E-05,
            "rotY": 0.000518800865,
            "rotZ": -1.70748763E-06,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "aaa3f9"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": -0.8500004,
            "posY": 4.02699566,
            "posZ": 0.8499994,
            "rotX": 6.4031417E-07,
            "rotY": 0.00433484931,
            "rotZ": 4.269111E-07,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "3d7206"
        },
        {
          "Name": "rpg_CHIMERA",
          "Transform": {
            "posX": 0.8499994,
            "posY": 4.026996,
            "posZ": 0.8499994,
            "rotX": -4.695787E-06,
            "rotY": 0.00433484837,
            "rotZ": 8.535959E-07,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "67668e"
        },
        {
          "Name": "rpg_EVIL_WATCHER",
          "Transform": {
            "posX": -11.5964012,
            "posY": 3.06400013,
            "posZ": -1.110079,
            "rotX": 4.601584E-07,
            "rotY": 0.0120907649,
            "rotZ": 7.471002E-07,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "6ae0ea"
        },
        {
          "Name": "rpg_EVIL_WATCHER",
          "Transform": {
            "posX": 0.8499994,
            "posY": 4.021863,
            "posZ": -0.850000441,
            "rotX": 3.23556633E-05,
            "rotY": 0.0167056173,
            "rotZ": 7.04835E-06,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "570b5c"
        },
        {
          "Name": "rpg_BEAR",
          "Transform": {
            "posX": -9.896401,
            "posY": 3.06400037,
            "posZ": -1.109914,
            "rotX": 1.08046072E-06,
            "rotY": 0.0121675795,
            "rotZ": 9.07249E-07,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "649cc8"
        },
        {
          "Name": "rpg_BEAR",
          "Transform": {
            "posX": -0.8500004,
            "posY": 4.021863,
            "posZ": -0.8500004,
            "rotX": 1.0429605E-05,
            "rotY": 0.0385610759,
            "rotZ": 7.26058624E-06,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "081d01"
        },
        {
          "Name": "rpg_GOLEM",
          "Transform": {
            "posX": -5.95000029,
            "posY": 3.99886656,
            "posZ": -0.8500004,
            "rotX": 3.30507447E-07,
            "rotY": 359.975861,
            "rotZ": 1.60075592E-06,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "44f960"
        },
        {
          "Name": "rpg_WEREWOLF",
          "Transform": {
            "posX": -4.25,
            "posY": 4.017549,
            "posZ": -0.8500004,
            "rotX": 8.609167E-07,
            "rotY": 344.99295,
            "rotZ": 8.553955E-07,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "aa8f2a"
        },
        {
          "Name": "rpg_MANTICORA",
          "Transform": {
            "posX": -2.55000019,
            "posY": 3.98774385,
            "posZ": -0.8500003,
            "rotX": 7.646868E-06,
            "rotY": 0.0168594941,
            "rotZ": 1.29146574E-05,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "ec9a19"
        },
        {
          "Name": "rpg_MANTICORA",
          "Transform": {
            "posX": -8.19527149,
            "posY": 3.029882,
            "posZ": -1.10910249,
            "rotX": 3.50216669E-06,
            "rotY": 0.036381375,
            "rotZ": 6.662985E-06,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.482364476
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "2d651c"
        }
      ],
      "GUID": "104e46"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 26.13466,
        "posY": 0.7749667,
        "posZ": 5.283373,
        "rotX": -8.3773665E-07,
        "rotY": 119.976181,
        "rotZ": -1.87703938E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9411836,
        "g": 0.48873502,
        "b": 0.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 10.6776657,
            "posY": 3.60330272,
            "posZ": -0.7389282,
            "rotX": 3.290625,
            "rotY": 98.75912,
            "rotZ": 120.956,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "b8e787"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 10.8504648,
            "posY": 3.05881262,
            "posZ": 0.9368051,
            "rotX": 1.46689224,
            "rotY": 238.927124,
            "rotZ": 286.8286,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "678e2e"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 11.17259,
            "posY": 4.798621,
            "posZ": 1.26488161,
            "rotX": 316.644318,
            "rotY": 355.766541,
            "rotZ": 286.792725,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "d1c8ab"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 10.1944427,
            "posY": 3.90721846,
            "posZ": 2.10008383,
            "rotX": 314.856537,
            "rotY": 19.9431667,
            "rotZ": 297.881042,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "ecf74f"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 11.62685,
            "posY": 5.745727,
            "posZ": 0.505824864,
            "rotX": 321.587738,
            "rotY": 215.34198,
            "rotZ": 198.867432,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "85955a"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 10.5585146,
            "posY": 3.85843921,
            "posZ": 0.7378737,
            "rotX": 343.67038,
            "rotY": 355.248047,
            "rotZ": 2.74237227,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "5e7f8d"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 9.140807,
            "posY": 3.81649041,
            "posZ": 1.16317666,
            "rotX": 20.7135715,
            "rotY": 339.357666,
            "rotZ": 318.474335,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "a545ae"
        },
        {
          "Name": "rpg_VAMPIRE",
          "Transform": {
            "posX": 9.273163,
            "posY": 4.33406162,
            "posZ": 0.163340926,
            "rotX": 332.028076,
            "rotY": 127.697243,
            "rotZ": 53.81529,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "2fc4c7"
        },
        {
          "Name": "rpg_MUMMY",
          "Transform": {
            "posX": 11.2020206,
            "posY": 3.120701,
            "posZ": 0.4539858,
            "rotX": 349.011719,
            "rotY": 188.227188,
            "rotZ": 353.180939,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "b677d3"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 11.10527,
            "posY": 3.09176779,
            "posZ": 0.9019438,
            "rotX": 357.9677,
            "rotY": 120.114311,
            "rotZ": 2.79292226,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "16935c"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 10.9742031,
            "posY": 3.06561255,
            "posZ": 1.0238471,
            "rotX": 1.290189,
            "rotY": 269.967834,
            "rotZ": 356.518158,
            "scaleX": 0.375,
            "scaleY": 0.375,
            "scaleZ": 0.375
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "0bad90"
        },
        {
          "Name": "rpg_GIANT_VIPER",
          "Transform": {
            "posX": 11.2635088,
            "posY": 3.19222164,
            "posZ": 0.8295289,
            "rotX": 0.32120648,
            "rotY": 0.00376438443,
            "rotZ": 359.9897,
            "scaleX": 0.750000238,
            "scaleY": 0.750000238,
            "scaleZ": 0.750000238
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "38f937"
        },
        {
          "Name": "rpg_VAMPIRE",
          "Transform": {
            "posX": 26.8942986,
            "posY": 3.40796161,
            "posZ": 5.2999,
            "rotX": 335.934418,
            "rotY": 98.14704,
            "rotZ": 31.1667919,
            "scaleX": 0.625,
            "scaleY": 0.625,
            "scaleZ": 0.625
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "c36e44"
        },
        {
          "Name": "rpg_WARRIOR",
          "Transform": {
            "posX": 25.7589588,
            "posY": 3.420514,
            "posZ": 5.053809,
            "rotX": 35.289463,
            "rotY": 71.15688,
            "rotZ": 31.4141617,
            "scaleX": 0.6000003,
            "scaleY": 0.6000003,
            "scaleZ": 0.6000003
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "0243d3"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 27.547514,
            "posY": 4.075733,
            "posZ": 5.01627636,
            "rotX": 318.565948,
            "rotY": 86.89701,
            "rotZ": 24.8221626,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "05b1db"
        },
        {
          "Name": "rpg_MUMMY",
          "Transform": {
            "posX": 26.3799686,
            "posY": 3.57543,
            "posZ": 4.383602,
            "rotX": 359.24942,
            "rotY": 255.531586,
            "rotZ": 323.971741,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7da90b"
        },
        {
          "Name": "rpg_DRAGONIDE",
          "Transform": {
            "posX": 27.3896713,
            "posY": 4.664586,
            "posZ": 4.056014,
            "rotX": 303.589325,
            "rotY": 170.062408,
            "rotZ": 336.0003,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "be18b4"
        },
        {
          "Name": "rpg_LIZARD_WARRIOR",
          "Transform": {
            "posX": 25.66894,
            "posY": 4.297748,
            "posZ": 3.703268,
            "rotX": 344.0576,
            "rotY": 131.0373,
            "rotZ": 13.4633,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.5686379,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "4cf3c2"
        }
      ],
      "GUID": "60e2e8"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 16.692812,
        "posY": 2.625546,
        "posZ": 4.03055859,
        "rotX": 3.05563663E-05,
        "rotY": 0.08339882,
        "rotZ": 8.215681E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "88b2e9"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 11.0107193,
        "posY": 2.62554574,
        "posZ": 8.965702,
        "rotX": 2.4438139E-05,
        "rotY": 0.08326123,
        "rotZ": -9.378822E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c645ac"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -12.0056515,
        "posY": 2.63730359,
        "posZ": 16.7146645,
        "rotX": 7.815041E-07,
        "rotY": 0.0296644885,
        "rotZ": 4.924093E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c9f348"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -11.9711838,
        "posY": 2.62554574,
        "posZ": 9.159887,
        "rotX": 3.685541E-05,
        "rotY": 0.08256101,
        "rotZ": -4.608266E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "667974"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 22.1541348,
        "posY": 2.625546,
        "posZ": -0.6890768,
        "rotX": 3.752143E-05,
        "rotY": 0.005807847,
        "rotZ": -5.65628852E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "28029e"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 23.0592365,
        "posY": 2.625546,
        "posZ": 13.1059675,
        "rotX": 4.07652769E-05,
        "rotY": 0.00570136728,
        "rotZ": -2.29417346E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4b1f9a"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 13.7521906,
        "posY": 2.63730264,
        "posZ": 16.12931,
        "rotX": 2.56379849E-06,
        "rotY": 0.00585108157,
        "rotZ": -4.83979738E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "79fbf0"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 22.6487865,
        "posY": 2.62554574,
        "posZ": -12.2069693,
        "rotX": -4.87289544E-05,
        "rotY": 0.00575572,
        "rotZ": -1.04459978E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "52ad32"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 15.5664358,
        "posY": 2.63730264,
        "posZ": -11.8170309,
        "rotX": -8.5160076E-07,
        "rotY": 0.00571449241,
        "rotZ": -3.68539077E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "61bbf4"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 17.4868336,
        "posY": 2.625546,
        "posZ": -15.3717995,
        "rotX": -2.20435268E-05,
        "rotY": 0.00571401557,
        "rotZ": -4.16760849E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "90d1c8"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -18.625061,
        "posY": 2.6255455,
        "posZ": -11.4086657,
        "rotX": -7.053523E-05,
        "rotY": 0.005716697,
        "rotZ": -2.8055174E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "e91a51"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -12.6180658,
        "posY": 2.6373024,
        "posZ": -9.808201,
        "rotX": 4.27611667E-06,
        "rotY": 0.005726021,
        "rotZ": -3.37881943E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "344b0d"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -22.3566227,
        "posY": 2.625546,
        "posZ": 4.649241,
        "rotX": -4.43976278E-05,
        "rotY": 0.00584735256,
        "rotZ": -7.10521053E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "94b0d6"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -20.8685875,
        "posY": 2.62554574,
        "posZ": 13.6128254,
        "rotX": -2.2045062E-05,
        "rotY": 0.00569271343,
        "rotZ": -4.054346E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4dc977"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -21.417429,
        "posY": 2.6373024,
        "posZ": -5.692305,
        "rotX": 1.47884407E-06,
        "rotY": 0.005792717,
        "rotZ": -3.824062E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a1c097"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -27.2820015,
        "posY": 2.625546,
        "posZ": -6.323576,
        "rotX": -3.397562E-05,
        "rotY": 0.005702761,
        "rotZ": -6.199752E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ffd1be"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": -26.5105724,
        "posY": 2.625546,
        "posZ": -16.8381481,
        "rotX": -2.45091451E-05,
        "rotY": 0.005702618,
        "rotZ": -7.320666E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "aea69b"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": 17.1482964,
        "posY": 2.15041542,
        "posZ": 12.235323,
        "rotX": -1.33733488E-06,
        "rotY": 359.986938,
        "rotZ": -3.34598417E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "50972e"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": -12.1191654,
        "posY": 2.15041542,
        "posZ": 12.1382561,
        "rotX": -1.49824666E-06,
        "rotY": 359.988647,
        "rotZ": -9.00708E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "82bd37"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": -21.8270721,
        "posY": 2.13865876,
        "posZ": -2.251806,
        "rotX": 2.42168881E-05,
        "rotY": 359.950928,
        "rotZ": 0.0001637125,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fd4483"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": -12.9518061,
        "posY": 2.138658,
        "posZ": -14.1905451,
        "rotX": 9.777436E-07,
        "rotY": 359.986816,
        "rotZ": 6.648796E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0021bb"
    },
    {
      "Name": "Tileset_Rock",
      "Transform": {
        "posX": 15.3712759,
        "posY": 2.13865948,
        "posZ": -16.1185036,
        "rotX": 8.824251E-06,
        "rotY": 0.188382089,
        "rotZ": -1.42266881E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9117647,
        "g": 0.9117647,
        "b": 0.9117647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5bf0ff"
    },
    {
      "Name": "Quarter",
      "Transform": {
        "posX": -7.534245,
        "posY": 0.960857332,
        "posZ": -14.7932024,
        "rotX": -2.0517524E-07,
        "rotY": 120.000534,
        "rotZ": -1.66085385E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "bccdd9",
      "RotationValues": [
        {
          "Value": "Heads",
          "Rotation": {
            "x": 0.0,
            "y": 90.0,
            "z": 180.0
          }
        },
        {
          "Value": "Tails",
          "Rotation": {
            "x": 0.0,
            "y": -90.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "rpg_WYVERN",
      "Transform": {
        "posX": -29.6371117,
        "posY": 4.258416,
        "posZ": 19.58183,
        "rotX": -3.39152211E-06,
        "rotY": 135.009445,
        "rotZ": 2.41664275E-05,
        "scaleX": 0.7000002,
        "scaleY": 0.7000002,
        "scaleZ": 0.7000002
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ca3bde"
    },
    {
      "Name": "rpg_HYDRA",
      "Transform": {
        "posX": 29.45492,
        "posY": 4.33708429,
        "posZ": -20.1668453,
        "rotX": 0.000424540369,
        "rotY": 329.9964,
        "rotZ": -0.000210335464,
        "scaleX": 1.49999964,
        "scaleY": 1.49999964,
        "scaleZ": 1.49999964
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "90c57a"
    },
    {
      "Name": "Tileset_Tree",
      "Transform": {
        "posX": 15.99965,
        "posY": 2.6373024,
        "posZ": -0.872894764,
        "rotX": 8.309319E-06,
        "rotY": 0.0187305082,
        "rotZ": 8.642833E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "230fd5"
    },
    {
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": 29.71068,
        "posY": 3.740841,
        "posZ": 19.9373989,
        "rotX": 3.67863458E-06,
        "rotY": 269.984,
        "rotZ": -3.79127869E-06,
        "scaleX": 0.75,
        "scaleY": 0.75,
        "scaleZ": 0.75
      },
      "Nickname": "all Tools bag",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://paste.ee/r/fGoRz",
        "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 44.89509,
            "posY": 2.27338815,
            "posZ": -11.99643,
            "rotX": -4.853195E-08,
            "rotY": 209.977661,
            "rotZ": -1.26324755E-08,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Decks tools",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 36.94252,
                "posY": 2.204082,
                "posZ": 1.8311913,
                "rotX": 1.33395321E-08,
                "rotY": 179.999619,
                "rotZ": -2.03438177E-07,
                "scaleX": 1.25705588,
                "scaleY": 1.0,
                "scaleZ": 1.25705588
              },
              "Nickname": "Reference Card",
              "Description": "s\n",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.5127759,
                "g": 0.5127759,
                "b": 0.5127759
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
              "LuaScriptState": "[true,false,false]",
              "GUID": "c9ed16"
            },
            {
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 42.80124,
                "posY": 2.15406346,
                "posZ": -13.7553387,
                "rotX": 1.90310363E-08,
                "rotY": 180.045212,
                "rotZ": 5.62230573E-09,
                "scaleX": 4.0,
                "scaleY": 1.0,
                "scaleZ": 4.0
              },
              "Nickname": "NotePadd",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/ho6MW1W.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 0,
                  "Thickness": 0.2,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "XmlUI": "",
              "LuaScript": "name = 'Character'\r\nsubtitle = 'Titles'\r\nnotes = 'Notes'\r\n\r\nfunction onload(saved_data)\r\n    name = 'Character'\r\n    subtitle = 'Titles'\r\n    notes = 'Notes'\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        name = loaded_data[1]\r\n        subtitle = loaded_data[2]\r\n        notes = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction Save()\r\n    local data_to_save = {name, subtitle, notes}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction reload()\r\n  name = 'Character'\r\n  subtitle = 'Titles'\r\n  notes = 'Notes'\r\n\r\n  if saved_data ~= \"\" then\r\n      local loaded_data = JSON.decode(saved_data)\r\n      name = loaded_data[1]\r\n      subtitle = loaded_data[2]\r\n      notes = loaded_data[3]\r\n  end\r\n  self.editInput({index = 0, value = name, label = name})\r\n  self.editInput({index = 1, value = subtitle, label = subtitle})\r\n  self.editInput({index = 2, value = notes, label = notes})\r\nend\r\n\r\nfunction createAll()\r\n  local data = {input_function = \"editName\", index = 0, function_owner = self, value= name, label = name, position = {-0.1, 0.2, -0.9}, scale = {0.5, 0.5, 0.5}, width = 950, height = 140, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Character\", alignment = 2}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editSubtitle\", index = 1, function_owner = self, value = subtitle, label = subtitle, position = {0, 0.2, -0.77}, scale = {0.5, 0.5, 0.5}, width = 1100, height = 110, font_size = 80, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Character\", alignment = 3}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editNotes\", index = 2, function_owner = self, value = notes,  label = notes, position = {0, 0.2, 0.1}, scale = {0.5, 0.5, 0.5}, width = 1100, height = 1500, font_size = 60, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Notes\"}\r\n  self.createInput(data)\r\n  self.createButton({click_function = 'Save',    function_owner = self,    label = 'Save',   scale = {0.5, 0.5, 0.5}, position = {0.39,0.2,0.89},    rotation = {0,0,0},    width = 450,    height = 150, color = {0.2, 0.2, 0.2, 0}, font_color = {1, 1, 1, 100},    font_size = 80})\r\n  self.createButton({click_function = 'reload',    function_owner = self,    label = 'Reload',   scale = {0.5, 0.5, 0.5}, position = {-0.39,0.2,0.89},    rotation = {0,0,0},    width = 450,    height = 150, color = {0.2, 0.2, 0.2, 0}, font_color = {1, 1, 1, 100},    font_size = 80})\r\nend\r\n\r\nfunction editName(_obj, _string, value)\r\n    name = value\r\nend\r\n\r\nfunction editSubtitle(_obj, _string, value)\r\n    subtitle = value\r\nend\r\n\r\nfunction editNotes(_obj, _string, value)\r\n    notes = value\r\nend",
              "LuaScriptState": "[\"sdf sdf\",\"Subtitle\",\"  dfsfdsf \"]",
              "GUID": "4fb6c0"
            },
            {
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -15.56682,
                "posY": 2.48743987,
                "posZ": -6.67831945,
                "rotX": 0.006855607,
                "rotY": 179.967041,
                "rotZ": 0.0103618931,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/gQZAgJF.jpg",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 0,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": false
                }
              },
              "XmlUI": "",
              "LuaScript": "--Alphabetize cards by their names if they have one (true or false)\nalphabetize = false\n--Color of the deck highlight and preview elements\nuiColor = {0,1,0}\n--How many rows or columns are possible\nmaxRowCol = 20\n--How much space is put between cards\nspacer = 0.2\n--If it flips the cards or not\nflip = true\n--Optional height offset so cards are raised off the table more\nheightOffset = 0\n\nfunction onSave()\n    saved_data = JSON.encode(layoutData)\n    return saved_data\nend\n\nfunction onload(saved_data)\n    --Loads the tracking for if the game has started yet\n    if saved_data ~= \"\" then\n        layoutData = JSON.decode(saved_data)\n    else\n        layoutData = {row=5, col=6}\n    end\n\n    createInputs()\n    createClickButtons()\nend\n\n\n\n--Collision detection to find deck\n\n\n\n--Detect if tool is placed on top of a deck, designating deck\nfunction onCollisionEnter(collision_info)\n    if collision_info.collision_object.tag == \"Deck\" and collision_info.collision_object ~= deck then\n        if deck ~= nil then deck.highlightOff() end\n        deck = collision_info.collision_object\n        deck.highlightOn(uiColor)\n    end\nend\n--Kill the highlight if the tool is destroyed\nfunction onDestroy()\n    if deck~=nil then deck.highlightOff() end\nend\n\n\n\n--Click actions and input changes\n\n\n\n--Click of the submit button, starts layout\nfunction click_submit()\n    --Error protection\n    if deck == nil then broadcastToAll(\"No deck designated.\", {0.9,0.2,0.2}) return end\n    --Remove buttons/previews\n    previewActive = nil\n    self.clearButtons()\n    --Lock until finished\n    self.setLock(true)\n    --Lays out cards in a coroutine\n    layout(\"card\")\nend\n\n--Click of the preview button\nfunction click_preview()\n    if previewActive ~= true then\n        previewActive = true\n        --Error protection\n        if deck == nil then broadcastToAll(\"No deck designated.\", {0.9,0.2,0.2}) return end\n        --Start routine that will\n        self.clearButtons()\n        layout(\"button\")\n    else\n        previewActive = nil\n        self.clearButtons()\n        createClickButtons()\n    end\nend\n\n--Detect changes to number inputs\nfunction input_change(_, _, userInput, stillEditing, layoutKey)\n    if stillEditing == false then\n        --Updates number or advises player to use a valid number\n        if userInput==\"\" or tonumber(userInput)<1 or tonumber(userInput)>maxRowCol then\n            broadcastToAll(\"Invalid number entry. Try a number from 1 - \"..maxRowCol..\".\", {0.9,0.2,0.2})\n        else\n            layoutData[layoutKey] = math.abs(tonumber(userInput))\n            if previewActive == true then\n                self.clearButtons()\n                layout(\"button\")\n            end\n        end\n    end\nend\n\n\n\n--Laying out of cards/buttons\n\n\n\n--Coroutine that lays out cards\nfunction layout(whichType)\n    function layout_routine()\n        --Get size of cards (need x/z) and add the spacer to it\n        local size = deck.getBoundsNormalized().size\n        size = {x=size.x+spacer, y=size.y, z=size.z+spacer}\n        --Rotate the x/z to match the deck+tool's rotation\n        local angle = math.rad(deck.getRotation().y - self.getRotation().y)\n        local x = math.abs(size.x * math.cos(angle)) + math.abs(size.z * math.sin(angle))\n        local z = math.abs(size.x * math.sin(angle)) + math.abs(size.z * math.cos(angle))\n        size.x = x\n        size.z = z\n        --Determine first card's location\n        local pos_starting = {\n            x = -size.x * (layoutData.col-1)/2,\n            y = 0 + heightOffset,\n            z = -size.z\n        }\n        --Create variables used in placement\n        local rowStep, colStep = 0, 0\n\n        --Placement\n        for i=1, layoutData.col*layoutData.row do\n            --Find position for card\n            local pos_local = {\n                x = pos_starting.x + size.x * colStep,\n                y = pos_starting.y,\n                z = pos_starting.z - size.z * rowStep,\n            }\n            local pos = self.positionToWorld(pos_local)\n            --Set up next loop\n            colStep = colStep + 1\n            if colStep > layoutData.col-1 then\n                colStep = 0\n                rowStep = rowStep + 1\n            end\n            --Apply action for position\n            if whichType == \"card\" then\n                --Places card\n                if alphabetize == false then\n                    deck.takeObject({position=pos, flip=flip})\n                else\n                    if #deck.getObjects() > 0 then\n                        --Handles most cards\n                        local nextIndex = findNextCardIndex()\n                        deck.takeObject({position=pos, flip=flip, index=nextIndex})\n                    else\n                        --Handles the leftover card\n                        local find_func = function(o) return o.tag==\"Card\" end\n                        local objList = findInRadiusBy(deck.getPosition(), 0.5, find_func)\n                        if #objList > 0 then\n                            objList[1].setPosition(pos)\n                            if flip then\n                                local rot = objList[1].getRotation()\n                                rot.z = rot.z+180\n                                objList[1].setRotationSmooth(rot)\n                            end\n                        end\n                    end\n                end\n            elseif whichType == \"button\" then\n                --Places button\n                self.createButton({\n                    label=\"X\", click_function=\"none\", function_owner=self,\n                    position=pos_local, height=0, width=0, font_size=1000,\n                    font_color=uiColor,\n                    rotation={0,deck.getRotation().y-self.getRotation().y,0},\n                })\n            end\n            coroutine.yield(0)\n            --Kills loop if deck is exhausted\n            if deck==nil then break end\n        end\n\n        self.setLock(false)\n        createClickButtons()\n        return 1\n    end\n    startLuaCoroutine(self, \"layout_routine\")\nend\n\n--Gets the order of cards alphabetized\nfunction findNextCardIndex()\n    local orderList = {}\n    for _, card in ipairs(deck.getObjects()) do\n        if card.nickname ~= \"\" then\n            local insertTable = {name=card.nickname, index=card.index}\n            table.insert(orderList, insertTable)\n        end\n    end\n    --Sort ordered list\n    local sort_func = function(a,b) return a[\"name\"] > b[\"name\"] end\n    table.sort(orderList, sort_func)\n    --Add no-names onto start\n    for _, card in ipairs(deck.getObjects()) do\n        if card.nickname == \"\" then\n            local insertTable = {name=card.nickname, index=card.index}\n            table.insert(orderList, 1, insertTable)\n        end\n    end\n    return orderList[1].index\nend\n\n--Finds objects in radius of a position, accepts optional filtering function\n--Example func: function(o) return o.tag==\"Deck\" or o.tag==\"Card\" end\nfunction findInRadiusBy(pos, radius, func)\n    local objList = Physics.cast({\n        origin=pos, direction={0,1,0}, type=2, size={radius,radius,radius},\n        max_distance=0, --debug=true\n    })\n\n    local refinedList = {}\n    for _, obj in ipairs(objList) do\n        if func == nil then\n            table.insert(refinedList, obj.hit_object)\n        else\n            if func(obj.hit_object) then\n                table.insert(refinedList, obj.hit_object)\n            end\n        end\n    end\n\n    return refinedList\nend\n\n\n\n--Button/input creation\n\n\n\nfunction createInputs()\n    function colInput(w,x,y,z) input_change(w,x,y,z,\"col\") end\n    self.createInput({\n        input_function=\"colInput\", function_owner=self, tooltip=\"Columns\",\n        alignment=3, position={0.2,0.1,-0.415}, height=250, width=630,\n        font_size=226, validation=2, tab=2, value=layoutData.col\n    })\n    function rowInput(w,x,y,z) input_change(w,x,y,z,\"row\") end\n    self.createInput({\n        input_function=\"rowInput\", function_owner=self, tooltip=\"Rows\",\n        alignment=3, position={0.2,0.1,0.195}, height=250, width=630,\n        font_size=226, validation=2, tab=2, value=layoutData.row\n    })\nend\n\nfunction createClickButtons()\n    self.createButton({\n        click_function=\"click_submit\", function_owner=self,\n        position={0.45,0.1,0.695}, height=190, width=440, color={1,1,1,0}\n    })\n    self.createButton({\n        click_function=\"click_preview\", function_owner=self,\n        position={-0.45,0.1,0.695}, height=190, width=440, color={1,1,1,0}\n    })\nend\n",
              "LuaScriptState": "{\"col\":7,\"row\":6}",
              "GUID": "b9c3d5"
            },
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 3.69474387,
                "posY": 2.58982325,
                "posZ": 9.170115,
                "rotX": 0.0181960724,
                "rotY": 179.999268,
                "rotZ": 359.986755,
                "scaleX": 1.56072485,
                "scaleY": 1.0,
                "scaleZ": 1.56072485
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": false,
              "Snap": false,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://i.imgur.com/RnkxnB6.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.20499979,
                  "MergeDistancePixels": 8.333335,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "--Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n    self.createButton({\r\n        click_function=\"click_refillDeck\", function_owner=self,\r\n        position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    })\r\n\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n    --Local positions for each pile of cards\r\n    pos_discard = {-0.957, 0.178, 0.222}\r\n    pos_draw = {0.957, 0.178, 0.222}\r\n\r\n    --This is which way is face down for a card or deck relative to the tool\r\n    rot_offset = {x=0, y=0, z=180}\r\nend\r\n\r\n--Activates when button is clicked\r\nfunction click_refillDeck()\r\n    --This gets all decks and cards in the discard area\r\n    local discardItemList = findObjectsAtPosition(pos_discard)\r\n    --This is where we want to put those discarded cards\r\n    local pos = self.positionToWorld(pos_draw)\r\n    --This is how we want the card rotated\r\n    local rot = self.getRotation()\r\n    rot = {rot.x+rot_offset.x, rot.y+rot_offset.y, rot.z+rot_offset.z}\r\n\r\n    --This is going through and placing all llcards/decks with this info\r\n    for _, obj in ipairs(discardItemList) do\r\n        obj.setPositionSmooth(pos, false, true)\r\n        obj.setRotationSmooth(rot)\r\n    end\r\n\r\n    --We check if any cards were moved before we go to shuffle\r\n    if #discardItemList > 0 then\r\n        --Finally, we start a short timer to shuffle the cards after they move\r\n        Timer.destroy(\"shuffleTimer_\"..self.getGUID())\r\n        Timer.create({\r\n            identifier = \"shuffleTimer_\"..self.getGUID(),\r\n            function_name = \"timer_shuffle\",\r\n            function_owner = self,\r\n            delay = 1\r\n        })\r\n    end\r\nend\r\n\r\n--This is used by another function to locate information on what is in an area\r\nfunction findObjectsAtPosition(localPos)\r\n    --We convert that local position to a global table position\r\n    local globalPos = self.positionToWorld(localPos)\r\n    --We then do a raycast of a sphere on that position to find objects there\r\n    --It returns a list of hits which includes references to what it hit\r\n    local objList = Physics.cast({\r\n        origin=globalPos, --Where the cast takes place\r\n        direction={0,1,0}, --Which direction it moves (up is shown)\r\n        type=2, --Type. 2 is \"sphere\"\r\n        size={2,2,2}, --How large that sphere is\r\n        max_distance=1, --How far it moves. Just a little bit\r\n        debug=false --If it displays the sphere when casting.\r\n    })\r\n\r\n    --Now we have objList which contains any and all objects in that area.\r\n    --But we only want decks and cards. So we will create a new list\r\n    local decksAndCards = {}\r\n    --Then go through objList adding any decks/cards to our new list\r\n    for _, obj in ipairs(objList) do\r\n        if obj.hit_object.tag == \"Deck\" or obj.hit_object.tag == \"Card\" then\r\n            table.insert(decksAndCards, obj.hit_object)\r\n        end\r\n    end\r\n\r\n    --Now we return this to where it was called with the information\r\n    return decksAndCards\r\nend\r\n\r\n--Activated by a timer to shuffle deck\r\nfunction timer_shuffle()\r\n    --This uses our findObjects function to find the deck in in the draw area\r\n    local discardItemList = findObjectsAtPosition(pos_draw)\r\n    --We should only have 1 item here, and it should be a deck\r\n    --But just in case, we will go through any and all returns\r\n    for _, obj in ipairs(discardItemList) do\r\n        --Final check to make sure its a deck we're trying to shuffle\r\n        if obj.tag == \"Deck\" then\r\n            obj.shuffle()\r\n        end\r\n    end\r\nend\r\n",
              "LuaScriptState": "",
              "PhysicsMaterial": {
                "StaticFriction": 0.5,
                "DynamicFriction": 0.5,
                "Bounciness": 0.0,
                "FrictionCombine": 0,
                "BounceCombine": 0
              },
              "Rigidbody": {
                "Mass": 1.125,
                "Drag": 0.1,
                "AngularDrag": 0.1,
                "UseGravity": true
              },
              "GUID": "ab12fe",
              "AttachedSnapPoints": [
                {
                  "Position": {
                    "x": 0.959766865,
                    "y": 0.102499925,
                    "z": 0.208676264
                  },
                  "Rotation": {
                    "x": -2.32612464E-07,
                    "y": 359.900146,
                    "z": 180.0
                  }
                },
                {
                  "Position": {
                    "x": -0.9572971,
                    "y": 0.102499895,
                    "z": 0.2228536
                  },
                  "Rotation": {
                    "x": -2.22738109E-07,
                    "y": 359.975861,
                    "z": 180.0
                  }
                }
              ]
            },
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 37.7498245,
                "posY": 2.49892163,
                "posZ": -6.75014734,
                "rotX": 0.001654103,
                "rotY": 270.005249,
                "rotZ": 0.0155934235,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Equipment Card",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/KYrJ3AD.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 15.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "skullChar = string.char(0x2620)\r\nnotChar = string.char(0x2298)\r\nhandChar = string.char(0x270C)\r\nwornChar = string.char(0x2606)\r\n  massnum = 0\r\n  energy = \"e\"\r\n  danger = skullChar\r\n  hands = handChar\r\n  editing = true\r\n  name = \"Name\"\r\n  description = \"Description\"\r\n  quick = \"Quick\\n Look\"\r\n\r\nfunction updateSave()\r\n  onSave()\r\nend\r\n\r\nfunction onSave()\r\n    local data_to_save = {\r\n      danger=danger,\r\n      hands=hands,\r\n      editing=editing,\r\n      name=name,\r\n      description=description,\r\n      quick=quick,\r\n      massnum=massnum,\r\n      energy=energy\r\n    }\r\n    saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n  print(\"loading\")\r\n  if saved_data ~= nil then\r\n    loaded_data = JSON.decode(saved_data)\r\n    massnum = loaded_data.massnum\r\n    energy = loaded_data.energy\r\n    danger = loaded_data.danger\r\n    hands = loaded_data.hands\r\n    editing = loaded_data.editing\r\n    name = loaded_data.name\r\n    description = loaded_data.description\r\n    quick = loaded_data.quick\r\n  end\r\n  createEditInputs()\r\n  createEditButtons()\r\n  done()\r\nend\r\n\r\n\r\nfunction createEditInputs()\r\n  local data = {input_function = \"editName\", index = 0, function_owner = self, label = name, position = {0.3, 0.1, 0.66}, width = 1150, height = 200, font_size = 150, alignment = 3, value = name, color = {0,0,0,0}, font_color = {1,1,1,100}}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editDesc\", index = 1, function_owner = self, label = description, position = {0.3, 0.1, 1.52}, width = 1250, height = 650, font_size = 75, alignment = 2, value = description, color = {0,0,0,0}, font_color = {1,1,1,100}}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editQuick\", index = 2, function_owner = self, label = quick, position = {-1.3, 0.1, 1.03}, rotation = {0, -90, 0}, width = 1100, height = 225, alignment = 2, value = quick, color = {0,0,0,0}, font_color = {1,1,1,100}}\r\n  self.createInput(data)\r\nend\r\n\r\nfunction createEditButtons()\r\n  local data = {click_function = \"alterDanger\", index = 0, function_owner = self, label = danger, position = {-1.3, 0.1, -0.37}, width = 225, height = 225, alignment = 2, font_size = 160, font_color = {0.8,0.2,0.2,1}}\r\n  self.createButton(data)\r\n  local data = {click_function = \"alterMass\", index = 1, function_owner = self, label = massnum .. \"m\", position = {-1.3, 0.1, -0.87}, width = 225, height = 225, alignment = 2, font_size = 80, font_color = {0.4,0.4,0.4,1}}\r\n  self.createButton(data)\r\n  local data = {click_function = \"alterEnergy\", index = 2, function_owner = self, label = energy, position = {-1.3, 0.1, -1.37}, width = 225, height = 225, alignment = 2, font_color = {0.8,0.8,0.2,100}}\r\n  self.createButton(data)\r\n  local data = {click_function = \"alterHand\", index = 3, function_owner = self, label = hands, position = {-1.3, 0.1, -1.87}, width = 225, height = 225, alignment = 2, font_size = 160, font_color = {0.6,0.4,0.2,100}}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange\", index = 4, function_owner = self, label = \"Image\", position = {0.3, 0.1, -1.8}, width = 1000, height = 220, font_size = 100}\r\n  self.createButton(data)\r\n  local data = {click_function = \"done\", index = 5, function_owner = self, label = \"Done\", position = {1.2, 0.1, 0.2}, width = 400, height = 110, font_size = 100}\r\n  self.createButton(data)\r\nend\r\n\r\nfunction editName(_obj, _string, value)\r\n  name = value\r\n  updateSave()\r\nend\r\nfunction editDesc(_obj, _string, value)\r\n  description = value\r\n  updateSave()\r\nend\r\nfunction editQuick(_obj, _string, value)\r\n  quick = value\r\n  updateSave()\r\nend\r\n\r\n\r\nfunction alterDanger(_obj, _color, alt_click)\r\n  if danger == '' then\r\n    danger = skullChar\r\n    self.editButton({index = 0, label = danger, font_size = 160})\r\n  elseif danger == skullChar then\r\n    danger = notChar\r\n    self.editButton({index = 0, label = danger, font_size = 240})\r\n  elseif danger == notChar then\r\n    danger = skullChar .. notChar\r\n    self.editButton({index = 0, label = danger, font_size = 120})\r\n  else\r\n    danger = ''\r\n    self.editButton({index = 0, label = danger})\r\n  end\r\n  updateSave()\r\nend\r\n\r\n\r\nfunction alterMass(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(massnum + mod, -10), 17)\r\n    if massnum ~= new_value then\r\n        massnum = new_value\r\n        if massnum == 16 then\r\n          self.editButton({index = 1, label = '75m'})\r\n        elseif massnum == 17 then\r\n          self.editButton({index = 1, label = '100m'})\r\n        else\r\n          self.editButton({index = 1, label = massnum .. 'm'})\r\n        end\r\n        updateSave()\r\n    end\r\nend\r\n\r\n\r\nfunction alterEnergy(_obj, _color, alt_click)\r\n  if energy == '' then\r\n    energy = 'e'\r\n    self.editButton({index = 2, label = energy, font_color = {0.8,0.8,0.2,100}})\r\n  elseif energy == 'e' then\r\n    energy = 'EMP'\r\n    self.editButton({index = 2, label = energy, font_size = 120, font_color = {0.2,0.8,0.8,100}})\r\n  else\r\n    energy = ''\r\n    self.editButton({index = 2, label = energy})\r\n  end\r\n  updateSave()\r\nend\r\n\r\n\r\nfunction alterHand(_obj, _color, alt_click)\r\n  if hands == '' then\r\n    hands = handChar\r\n    self.editButton({index = 3, label = hands, font_size = 160, font_color = {0.8,0.8,0.2,100}})\r\n  elseif hands == handChar then\r\n    hands = wornChar\r\n    self.editButton({index = 3, label = hands, font_size = 160, font_color = {0.8,0.8,0.2,100}})\r\n  elseif hands == wornChar then\r\n    hands = \"pack\"\r\n    self.editButton({index = 3, label = hands, font_size = 80, font_color = {0.6,0.4,0.2,100}})\r\n  else\r\n    hands = ''\r\n    self.editButton({index = 3, label = hands, font_color = {0.6,0.4,0.2,100}})\r\n  end\r\n  updateSave()\r\nend\r\n\r\n\r\nfunction done()\r\n  self.editButton({index = 0, width = 0, height = 0})\r\n  self.editButton({index = 1, width = 0, height = 0})\r\n  self.editButton({index = 2, color = {0,0,0,0}})\r\n  self.editButton({index = 3, color = {0,0,0,0}})\r\n  self.editButton({index = 4, width = 0, height = 0, label = \"\"})\r\n  self.editButton({index = 5, click_function = \"reEdit\", label = \"edit\", color = {0,0,0,0}, font_color = {0,0,0,100}})\r\n  editing = false\r\n  updateSave()\r\nend\r\n\r\nfunction reEdit()\r\n  self.editButton({index = 0, width = 225, height = 225})\r\n  self.editButton({index = 1, width = 225, height = 225})\r\n  self.editButton({index = 2, color = {1,1,1,1}})\r\n  self.editButton({index = 3, color = {1,1,1,1}})\r\n  self.editButton({index = 4, width = 1000, height = 220, label = \"Image\"})\r\n  self.editButton({index = 5, click_function = \"done\", label = \"Done\", color = {1,1,1,1}, font_color = {0,0,0,1}})\r\n  editing = true\r\nend\r\n\r\nfunction imageChange()\r\n  createImageButtons()\r\nend\r\n\r\nfunction createImageButtons(obj, color, alt_click)\r\n  local data = {click_function = \"imageChange0\", function_owner = self, label = \"[blank]\", position = {2.1, 0.1, -2}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange1\", function_owner = self, label = \"Blaster\", position = {2.1, 0.1, -1.7}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange2\", function_owner = self, label = \"Disintegrator\", position = {2.1, 0.1, -1.4}, width = 500, height = 100, font_size = 70}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange3\", function_owner = self, label = \"Laser\",  position = {2.1, 0.1, -1.1}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange4\", function_owner = self, label = \"Needler\", position = {2.1, 0.1, -0.8}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange5\", function_owner = self, label = \"Nerve Disruptor\", position = {2.1, 0.1, -0.5}, width = 500, height = 100, font_size = 60}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange6\", function_owner = self, label = \"Particle Gun\", position = {2.1, 0.1, -0.2}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange7\", function_owner = self, label = \"Plasma Projector\", position = {2.1, 0.1, 0.1}, width = 500, height = 100, font_size = 60}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange8\", function_owner = self, label = \"Slug Pistol\", position = {2.1, 0.1, 0.4}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange9\", function_owner = self, label = \"Voltrex\", position = {2.1, 0.1, 0.7}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange10\", function_owner = self, label = \"Heavy Ion Bore\", position = {2.1, 0.1, 1}, width = 500, height = 100, font_size = 60}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange11\", function_owner = self, label = \"Energy Blade\", position = {2.1, 0.1, 1.3}, width = 500, height = 100, font_size = 70}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange12\", function_owner = self, label = \"Ion Hammer\", position = {2.1, 0.1, 1.6}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange13\", function_owner = self, label = \"Phase Pick\", position = {3.1, 0.1, -2}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange14\", function_owner = self, label = \"Grenade\", position = {3.1, 0.1, -1.7}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange15\", function_owner = self, label = \"Satchel Charge\", position = {3.1, 0.1, -1.4}, width = 500, height = 100, font_size = 60}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange16\", function_owner = self, label = \"EVA\",  position = {3.1, 0.1, -1.1}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange17\", function_owner = self, label = \"Jetpack\", position = {3.1, 0.1, -0.8}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange18\", function_owner = self, label = \"Medkit\", position = {3.1, 0.1, -0.5}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange19\", function_owner = self, label = \"Shield\", position = {3.1, 0.1, -0.2}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange20\", function_owner = self, label = \"Toolkit\", position = {3.1, 0.1, 0.1}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange21\", function_owner = self, label = \"Wristcomp\", position = {3.1, 0.1, 0.4}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange22\", function_owner = self, label = \"Drug\", position = {3.1, 0.1, 0.7}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange23\", function_owner = self, label = \"Cyberfoot\", position = {3.1, 0.1, 1}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange24\", function_owner = self, label = \"Cyberhand\", position = {3.1, 0.1, 1.3}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange25\", function_owner = self, label = \"Skeletal Enh\", position = {3.1, 0.1, 1.6}, width = 500, height = 100, font_size = 70}\r\n  self.createButton(data)\r\n  local data = {click_function = \"imageChange26\", function_owner = self, label = \"Skill Chip\", position = {4.1, 0.1, -2}, width = 500, height = 100, font_size = 80}\r\n  self.createButton(data)\r\nend\r\n\r\n\r\nfunction set()\r\n  self.setCustomObject(params)\r\n  self.reload()\r\nend\r\n\r\n\r\nfunction imageChange0()\r\n  params = {image = \"https://i.imgur.com/uAdgdX9.png\"}\r\n  set()\r\nend\r\nfunction imageChange1()\r\n  params = {image = \"https://i.imgur.com/sXLFILc.png\"}\r\n  set()\r\nend\r\nfunction imageChange2()\r\n  params = {image = \"https://i.imgur.com/OlMwlAP.png\"}\r\n  set()\r\nend\r\nfunction imageChange3()\r\n  params = {image = \"https://i.imgur.com/KYrJ3AD.png\"}\r\n  set()\r\nend\r\nfunction imageChange4()\r\n  params = {image = \"https://i.imgur.com/sUhab5A.png\"}\r\n  set()\r\nend\r\nfunction imageChange5()\r\n  params = {image = \"https://i.imgur.com/Mg0Rvlv.png\"}\r\n  set()\r\nend\r\nfunction imageChange6()\r\n  params = {image = \"https://i.imgur.com/q4ZRlYn.png\"}\r\n  set()\r\nend\r\nfunction imageChange7()\r\n  params = {image = \"https://i.imgur.com/Cdk5fHS.png\"}\r\n  set()\r\nend\r\nfunction imageChange8()\r\n  params = {image = \"https://i.imgur.com/9C9s83n.png\"}\r\n  set()\r\nend\r\nfunction imageChange9()\r\n  params = {image = \"https://i.imgur.com/il9DR9S.png\"}\r\n  set()\r\nend\r\nfunction imageChange10()\r\n  params = {image = \"https://i.imgur.com/vD2onj8.png\"}\r\n  set()\r\nend\r\nfunction imageChange11()\r\n  params = {image = \"https://i.imgur.com/1m6ItNP.png\"}\r\n  set()\r\nend\r\nfunction imageChange12()\r\n  params = {image = \"https://i.imgur.com/6bufRau.png\"}\r\n  set()\r\nend\r\nfunction imageChange13()\r\n  params = {image = \"https://i.imgur.com/QD07feQ.png\"}\r\n  set()\r\nend\r\nfunction imageChange14()\r\n  params = {image = \"https://i.imgur.com/D2SbjQW.png\"}\r\n  set()\r\nend\r\nfunction imageChange15()\r\n  params = {image = \"https://i.imgur.com/bGNyjUM.png\"}\r\n  set()\r\nend\r\nfunction imageChange16()\r\n  params = {image = \"https://i.imgur.com/MvUM5IF.png\"}\r\n  set()\r\nend\r\nfunction imageChange17()\r\n  params = {image = \"https://i.imgur.com/J3uFLyT.png\"}\r\n  set()\r\nend\r\nfunction imageChange18()\r\n  params = {image = \"https://i.imgur.com/Sg38wjT.png\"}\r\n  set()\r\nend\r\nfunction imageChange19()\r\n  params = {image = \"https://i.imgur.com/7d43Z6R.png\"}\r\n  set()\r\nend\r\nfunction imageChange20()\r\n  params = {image = \"https://i.imgur.com/cWrmmIe.png\"}\r\n  set()\r\nend\r\nfunction imageChange21()\r\n  params = {image = \"https://i.imgur.com/5vX6Lnv.png\"}\r\n  set()\r\nend\r\nfunction imageChange22()\r\n  params = {image = \"https://i.imgur.com/iRgFQ8b.png\"}\r\n  set()\r\nend\r\nfunction imageChange23()\r\n  params = {image = \"https://i.imgur.com/Sd8y2uP.png\"}\r\n  set()\r\nend\r\nfunction imageChange24()\r\n  params = {image = \"https://i.imgur.com/qNYtv07.png\"}\r\n  set()\r\nend\r\nfunction imageChange25()\r\n  params = {image = \"https://i.imgur.com/eFLXp2X.png\"}\r\n  set()\r\nend\r\nfunction imageChange26()\r\n  params = {image = \"https://i.imgur.com/CCT3CV3.png\"}\r\n  set()\r\nend",
              "LuaScriptState": "{\"danger\":\"☠\",\"description\":\"1d6+1 ignore damage reduction\",\"editing\":false,\"energy\":\"\",\"hands\":\"?\",\"massnum\":5,\"name\":\"Laser\",\"quick\":\"Laser\\n1d6+1\"}",
              "GUID": "d8c780"
            }
          ],
          "GUID": "730cd4"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -10.6370564,
            "posY": 5.63371134,
            "posZ": 10.4613619,
            "rotX": -6.659812E-07,
            "rotY": 149.989365,
            "rotZ": -8.444242E-08,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Dies",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 2.44999528,
                "posY": 2.89338446,
                "posZ": -0.0455851331,
                "rotX": -4.177058E-08,
                "rotY": 29.9948349,
                "rotZ": -9.178743E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Diceboard",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/fiEzwJE.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.2,
                  "MergeDistancePixels": 15.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "--Overwrite all dice to be this color (table or false). Overrules diePlayerColor\r\ndieColorOverwrite = false     --ex. {1,0,0} for red\r\n--If a die is colored to match the player who pressed the button for it\r\ndiePlayerColor = true       --true or false\r\n\r\ndefault_dice_qty = 2\r\nMIN_VALUE = 0\r\nMAX_VALUE = 21\r\n\r\n--What type of die will be rolled by this tool (only works with 1)\r\ndieType = \"Die_6\"\r\n--Dice type options (quotes required)\r\n--  Die_4\r\n--  Die_6\r\n--  Die_6_Rounded\r\n--  Die_8\r\n--  Die_10\r\n--  Die_12\r\n--  Die_20\r\n--  Custom_Dice --REQUIRES ADDITIONAL ENTRIES BELOW\r\n\r\n--If Custom_Dice is the dice type used, then you must enter info below\r\n    --URL for the die image goes in the quotes\r\n    dieImage = \"\"\r\n    --Number of sides on die. Options are 4, 6, 8 10, 12, 20\r\n    dieSides = 4\r\n\r\n--Time before dice disappear. -1 means they do not (until next roll)\r\nremovalDelay = -1\r\n\r\n--If dice are added together for announcement (true or false)\r\nannounce_total = true\r\n--If individual results are displayed (true or false)\r\nannounce_each = true\r\n--If last player to click button before roll happens gets their name announced\r\nannounce_player = true\r\n\r\n--Distance dice are placed from the tool's center\r\nradialOffset = 2.2\r\n--Distance die gets moved up\r\nheightOffset = 1\r\n--Die size, default of 1\r\ndieSize = 1\r\n\r\n--How long to wait before rolling the spawned dice\r\nwaitBeforeRoll = 0.4\r\n\r\n--How many dice can be spawned. 0 is infinite\r\ndieLimit = 20\r\n\r\n--END OF VARIABLES TO EDIT\r\n--Beyond here, there be Lua!\r\n\r\n--Save to track currently active dice for disposal on load\r\nfunction onSave()\r\n    if #currentDice > 0 then\r\n        local currentDiceGUIDs = {}\r\n        for _, obj in ipairs(currentDice) do\r\n            if obj ~= nil then\r\n                table.insert(currentDiceGUIDs, obj.getGUID())\r\n            end\r\n        end\r\n        saved_data = JSON.encode(currentDiceGUIDs)\r\n    else\r\n        saved_data = \"\"\r\n    end\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    --Loads the save of any active dice and deletes them\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        for _, guid in ipairs(loaded_data) do\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then\r\n                destroyObject(obj)\r\n            end\r\n        end\r\n        currentDice = {}\r\n    else\r\n        currentDice = {}\r\n    end\r\n\r\n    --Makes the button\r\n    self.createButton({\r\n        click_function=\"click_execute\", function_owner=self, label=\"Roll\\n\" .. default_dice_qty, font_size = 500,\r\n        position={-1.4,0.2,0}, height=1000, width=1000, color={0.7,0.7,0.7,1}\r\n    })\r\n\r\n    self.createButton({\r\n        click_function=\"Change_Num\", function_owner=self, label=\"Qty Select\", font_size = 200,\r\n        position={1.1,0.2,0.66}, height=500, width=1000, color={0.7,0.7,0.7,1}, font_color={0,0,0,1}\r\n    })\r\n    self.createButton({\r\n        click_function=\"roll1\", function_owner=self, label=\"Roll 1\", font_size = 100,\r\n        position={0.2,0.2,-0.66}, height=300, width=300, color={0.7,0.7,0.7,1}, font_color={0,0,0,1}\r\n    })\r\n    self.createButton({\r\n        click_function=\"roll2\", function_owner=self, label=\"Roll 2\", font_size = 100,\r\n        position={0.8,0.2,-0.66}, height=300, width=300, color={0.7,0.7,0.7,1}, font_color={0,0,0,1}\r\n    })\r\n    self.createButton({\r\n        click_function=\"roll3\", function_owner=self, label=\"Roll 3\", font_size = 100,\r\n        position={1.4,0.2,-0.66}, height=300, width=300, color={0.7,0.7,0.7,1}, font_color={0,0,0,1}\r\n    })\r\n    self.createButton({\r\n        click_function=\"roll4\", function_owner=self, label=\"Roll 4\", font_size = 100,\r\n        position={2,0.2,-0.66}, height=300, width=300, color={0.7,0.7,0.7,1}, font_color={0,0,0,1}\r\n    })\r\nend\r\n\r\nfunction Change_Num(_obj, _color, alt_click)\r\n    mod = alt_click and -1 or 1\r\n    new_value = math.min(math.max(default_dice_qty  + mod, MIN_VALUE), MAX_VALUE)\r\n    if new_value == MAX_VALUE then new_value = MIN_VALUE+1\r\n    elseif new_value == MIN_VALUE then new_value = MAX_VALUE-1\r\n    end\r\n    if default_dice_qty ~= new_value then\r\n        default_dice_qty = new_value\r\n        self.editButton({index=0, label=\"Roll\\n\" .. default_dice_qty})\r\n    end\r\nend\r\n\r\n--Die spawning and positioning\r\n\r\nfunction click_execute(_, color)\r\n  for i=1,default_dice_qty do\r\n    click_roll(_, color)\r\n  end\r\nend\r\nfunction roll1(_, color)\r\n  for i=1,1 do\r\n    click_roll(_, color)\r\n  end\r\nend\r\nfunction roll2(_, color)\r\n  for i=1,2 do\r\n    click_roll(_, color)\r\n  end\r\nend\r\nfunction roll3(_, color)\r\n  for i=1,3 do\r\n    click_roll(_, color)\r\n  end\r\nend\r\nfunction roll4(_, color)\r\n  for i=1,4 do\r\n    click_roll(_, color)\r\n  end\r\nend\r\n--Click function, spawns new dice and waits for a pause to do the rolling\r\nfunction click_roll(_, color)\r\n    --Dice spam protection, can be disabled up at top of script\r\n    local diceCount = 0\r\n    for _ in pairs(currentDice) do\r\n        diceCount = diceCount + 1\r\n    end\r\n    local denyRoll = false\r\n    if dieLimit > 0 and diceCount >= dieLimit then\r\n        denyRoll = true\r\n    end\r\n    --Check for if click is allowed\r\n    if rollInProgress == nil and denyRoll == false then\r\n\r\n        --Find dice positions, moving previously spawned dice if needed\r\n        local angleStep = #currentDice+1\r\n        for i, die in ipairs(currentDice) do\r\n            local pos = findGlobalPosWithLocalDirection(i)\r\n            die.setPositionSmooth(pos, false, true)\r\n        end\r\n\r\n        --Spawns dice\r\n        local spawnedDie = spawnObject({\r\n            type=dieType,\r\n            position = findGlobalPosWithLocalDirection(angleStep),\r\n            rotation = randomRotation(), scale={dieSize,dieSize,dieSize}\r\n        })\r\n        if dieType == \"Custom_Dice\" then\r\n            spawnedDie.setCustomObject({\r\n                image = dieImage,\r\n                type = ref_customDieSides[tostring(dieSides)]\r\n            })\r\n        end\r\n        table.insert(currentDice, spawnedDie)\r\n        spawnedDie.setLock(true)\r\n        if dieColorOverwrite ~= false then\r\n            spawnedDie.setColorTint(dieColorOverwrite)\r\n        elseif diePlayerColor == true then\r\n            spawnedDie.setColorTint(stringColorToRGB(color))\r\n        end\r\n\r\n        --Timer starting\r\n        Timer.destroy(\"clickRoller_\"..self.getGUID())\r\n        Timer.create({\r\n            identifier=\"clickRoller_\"..self.getGUID(), delay=waitBeforeRoll,\r\n            function_name=\"rollDice\", function_owner=self,\r\n            parameters = {color = color}\r\n        })\r\n    elseif rollInProgress == false then\r\n        cleanupDice()\r\n        click_roll(_, color)\r\n    else\r\n        Player[color].broadcast(\"Roll in progress.\", {0.8, 0.2, 0.2})\r\n    end\r\nend\r\n\r\n\r\n\r\n--Die rolling\r\n\r\n\r\n\r\n--Rolls all the dice and then launches monitoring\r\nfunction rollDice(p)\r\n    rollInProgress = true\r\n    function coroutine_rollDice()\r\n        for _, die in ipairs(currentDice) do\r\n            die.setLock(false)\r\n            die.randomize()\r\n            wait(0.1)\r\n        end\r\n\r\n        monitorDice(p.color)\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rollDice\")\r\nend\r\n\r\n--Monitors dice to come to rest\r\nfunction monitorDice(color)\r\n    function coroutine_monitorDice()\r\n        repeat\r\n            local allRest = true\r\n            for _, die in ipairs(currentDice) do\r\n                if die ~= nil and die.resting == false then\r\n                    allRest = false\r\n                end\r\n            end\r\n            coroutine.yield(0)\r\n        until allRest == true\r\n\r\n        --Announcement\r\n        if announce_total==true or announce_each==true then\r\n            displayResults(color)\r\n        end\r\n\r\n        wait(0.1)\r\n        rollInProgress = false\r\n\r\n        --Auto die removal\r\n        if removalDelay ~= -1 then\r\n            --Timer starting\r\n            Timer.destroy(\"clickRoller_cleanup_\"..self.getGUID())\r\n            Timer.create({\r\n                identifier=\"clickRoller_cleanup_\"..self.getGUID(),\r\n                function_name=\"cleanupDice\", function_owner=self,\r\n                delay=removalDelay,\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_monitorDice\")\r\nend\r\n\r\n\r\n\r\n--After roll broadcasting and cleanup\r\n\r\n\r\n\r\nfunction displayResults(color)\r\n    local total = 0\r\n    local resultTable = {}\r\n\r\n    --Tally result info\r\n    for _, die in ipairs(currentDice) do\r\n        if die ~= nil then\r\n            local value = die.getValue()\r\n            total = total + value\r\n            table.insert(resultTable, value)\r\n        end\r\n    end\r\n\r\n    --Sort result table into order\r\n    local sort_func = function(a,b) return a < b end\r\n    table.sort(resultTable, sort_func)\r\n\r\n    --String assembly\r\n    local s = \"\"\r\n    if announce_each == true then\r\n        for i, v in ipairs(resultTable) do\r\n            s = s .. v\r\n            if i ~= #resultTable then\r\n                s = s .. \", \"\r\n            end\r\n        end\r\n    end\r\n    if announce_total == true then\r\n        if s ~= \"\" then\r\n            s = s .. \"     |     \"\r\n        end\r\n        s = s .. \"[b]\" .. total .. \"[/b]\"\r\n    end\r\n    if announce_player == true then\r\n        s = Player[color].steam_name .. \"     |     \" .. s\r\n    end\r\n\r\n    broadcastToAll(s, stringColorToRGB(color))\r\nend\r\n\r\n\r\n\r\n--Die cleanup\r\n\r\n\r\n\r\nfunction cleanupDice()\r\n    for _, die in ipairs(currentDice) do\r\n        if die ~= nil then\r\n            destroyObject(die)\r\n        end\r\n    end\r\n\r\n    Timer.destroy(\"clickRoller_cleanup_\"..self.getGUID())\r\n    rollInProgress = nil\r\n    currentDice = {}\r\nend\r\n\r\n\r\n\r\n\r\n--Utility functions to obtain info\r\n\r\n\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(angle)\r\n    local object, distance = self, radialOffset * self.getScale().x\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n  local posX = oPos.x -4.5 + 1.5*angle - (math.floor(angle/10))*15\r\n  local posY = oPos.y + heightOffset\r\n  local posZ = oPos.z + 2.5 * (math.ceil(angle/10))\r\n  --else local posZ = oPos.z + 4\r\n\r\n  return {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n\r\n--Data tables\r\n\r\n\r\n\r\nref_customDieSides = {[\"4\"]=0, [\"6\"]=1, [\"8\"]=2, [\"10\"]=3, [\"12\"]=4, [\"20\"]=5}",
              "LuaScriptState": "[\"a649e6\",\"166795\"]",
              "GUID": "5a9599"
            },
            {
              "Name": "BlockSquare",
              "Transform": {
                "posX": 11.5723038,
                "posY": 4.053087,
                "posZ": 15.659112,
                "rotX": -4.218554E-07,
                "rotY": -0.00571436435,
                "rotZ": 4.455208E-07,
                "scaleX": 1.57758832,
                "scaleY": 1.57758832,
                "scaleZ": 1.57758832
              },
              "Nickname": "TestUI",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.249997973,
                "g": 0.249997973,
                "b": 0.249997973
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "<Defaults>\r\n    <Text class=\"Title\" alignment=\"UpperCenter\" color=\"#ffffff\" fontSize=\"24\" outline=\"#000000\"/>\r\n    <Button class=\"AddButton\" onClick=\"AddDice\" colors=\"rgba(0.5,0.5,0.5,0)|rgba(0.5,0.5,0.5,0.1)|rgba(0.5,0.5,0.5,0.2)|rgb(0.1,0.1,0.1)\" textColor=\"#ffffff\" fontSize=\"40\" text=\"+\" preferredWidth=\"45\" preferredHeight=\"45\" ignoreLayout=\"true\" position=\"-20,0,0\" width=\"45\" height=\"45\"/>\r\n    <Button class=\"RemoveButton\" onClick=\"RemoveDice\" colors=\"rgba(0.5,0.5,0.5,0)|rgba(0.5,0.5,0.5,0.1)|rgba(0.5,0.5,0.5,0.2)|rgb(0.1,0.1,0.1)\" textColor=\"#ffffff\" fontSize=\"40\" text=\"-\" preferredWidth=\"45\" preferredHeight=\"45\" ignoreLayout=\"true\" position=\"20,0,0\" width=\"45\" height=\"45\"/>\r\n    <Button class=\"RollButton\" onClick=\"RollDice\" colors=\"rgb(1,1,1)|rgb(1,1,1)|rgb(1,1,1)|rgb(0.1,0.1,0.1)\" image=\"Button_Normal\" fontSize=\"30\" text=\"Roll\" preferredWidth=\"150\" preferredHeight=\"70\"/>\r\n    <Button class=\"ClearButton\" onClick=\"ClearDice\" colors=\"rgb(1,1,1)|rgb(1,1,1)|rgb(1,1,1)|rgb(0.1,0.1,0.1)\" image=\"Button_Normal\" fontSize=\"30\" text=\"Clear all\" preferredWidth=\"150\" preferredHeight=\"70\"/>\r\n    <Button class=\"ResetSpawnButton\" onClick=\"ResetSpawn\" colors=\"rgb(1,1,1)|rgb(1,1,1)|rgb(1,1,1)|rgba(0.1,0.1,0.1,0)\" image=\"Button_Normal\" fontSize=\"20\" text=\"Reset Objects\" preferredWidth=\"150\" preferredHeight=\"45\"/>\r\n    <HorizontalLayout class=\"Panels\" spacing=\"5\" childForceExpandHeight=\"false\" childForceExpandWidth=\"false\"/>\r\n    <HorizontalLayout class=\"AddRemovePanel\" spacing=\"5\" childForceExpandWidth=\"true\" childForceExpandHeight=\"true\"/>\r\n    <VerticalLayout class=\"BackElement\" spacing=\"5\" padding=\"5 5 5 5\" color=\"rgba(0.125,0.125,0.125,0)\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" childAlignment=\"UpperCenter\"/>\r\n    <Panel class=\"DiceColor\" flexibleWidth=\"0\" flexibleHeight=\"0\" preferredWidth=\"50\" preferredHeight=\"50\"/>\r\n    <Image class=\"BaseDice\" preferredWidth=\"100\" preferredHeight=\"100\"/>\r\n    <Panel class=\"SpacingPanel\" preferredWidth=\"50\" preferredHeight=\"50\"/>\r\n    <Toggle class=\"BasicToggle\" colors=\"rgb(0.5,0.5,0.5)|rgb(0.7,0.7,0.7)|rgb(0.9,0.9,0.9)|rgba(0.1,0.1,0.1,0)\" textColor=\"#ffffff\" fontSize=\"18\" preferredWidth=\"150\" preferredHeight=\"45\"/>\r\n    <Panel class=\"BasicPanel\" color=\"rgba(0,0,0,0)\" padding=\"5 5 5 5\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"/>\r\n    <Panel class=\"MainBackground\" padding=\"5 5 5 5\" childAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" image=\"Background\" color=\"rgba(1,1,1,0.98)\"/>\r\n</Defaults>\r\n\r\n<HorizontalLayout\r\n    position=\"45,-300,-100\"\r\n    width=\"850\"\r\n    height=\"400\"\r\n    childForceExpandWidth=\"false\"\r\n    childForceExpandHeight=\"false\"\r\n    spacing=\"80\"\r\n    flexibleWidth=\"1\"\r\n    >\r\n    <Panel class=\"MainBackground\" padding=\"35 10 25 25\"\r\n        >\r\n        <VerticalLayout\r\n            id=\"MainLayoutPanel\"\r\n            active=\"true\"\r\n            padding=\"5 5 5 5\"\r\n            spacing=\"5\"\r\n            childForceExpandWidth=\"false\"\r\n            childAlignment=\"MiddleCenter\"\r\n            >\r\n            <HorizontalLayout\r\n                class=\"Panels\"\r\n                >\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">Blue</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"BlueDice\"></Image>\r\n                    <Button class=\"AddButton\" id=\"BlueColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"BlueColor\"></Button>\r\n                </VerticalLayout>\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">Green</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"GreenDice\"></Image>\r\n                    <Button class=\"AddButton\" id=\"GreenColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"GreenColor\"></Button>\r\n                </VerticalLayout>\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">Yellow</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"YellowDice\"></Image>\r\n                    <Button class=\"AddButton\" id=\"YellowColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"YellowColor\"></Button>\r\n                </VerticalLayout>\r\n            </HorizontalLayout>\r\n            <HorizontalLayout\r\n                class=\"Panels\"\r\n                >\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">Red</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"RedDice\"></Image>\r\n                    <Button class=\"AddButton\" id=\"RedColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"RedColor\"></Button>\r\n                </VerticalLayout>\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">Black</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"BlackDice\" color=\"rgb(0.68,0.68,0.68)\"></Image>\r\n                    <Button class=\"AddButton\" id=\"BlackColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"BlackColor\"></Button>\r\n                </VerticalLayout>\r\n                <VerticalLayout class=\"BackElement\" color=\"rgba(0,0,0,0)\"\r\n                    >\r\n                    <!--<Text class=\"Title\">White</Text>-->\r\n                    <Image class=\"BaseDice\" image=\"WhiteDice\" color=\"rgb(0.88,0.88,0.88)\"></Image>\r\n                    <Button class=\"AddButton\" id=\"WhiteColor\"></Button>\r\n                    <Button class=\"RemoveButton\" id=\"WhiteColor\"></Button>\r\n                </VerticalLayout>\r\n            </HorizontalLayout>\r\n            <HorizontalLayout\r\n                class=\"Panels\"\r\n                childAlignment=\"MiddleCenter\"\r\n                >\r\n                <VerticalLayout\r\n                    class=\"BackElement\"\r\n                    childAlignment=\"MiddleCenter\"\r\n                    >\r\n                    <Button class=\"RollButton\"></Button>\r\n                </VerticalLayout>\r\n                <VerticalLayout\r\n                    class=\"BackElement\"\r\n                    childAlignment=\"MiddleCenter\"\r\n                    >\r\n                    <Button class=\"ClearButton\"></Button>\r\n                </VerticalLayout>\r\n            </HorizontalLayout>\r\n        </VerticalLayout>\r\n        <VerticalLayout\r\n            preferredHeight=\"1000\"\r\n            childForceExpandWidth=\"false\"\r\n            childForceExpandHeight=\"false\"\r\n            padding=\"-10 5 -20 5\"\r\n            childAlignment=\"UpperCenter\"\r\n            >\r\n            <Panel class=\"BasicPanel\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" childAlignment=\"UpperCenter\" color=\"rgba(0,0,0,0)\">\r\n                <Button\r\n                id=\"ExtraSettingsToggle\"\r\n                onClick=\"ToggleSettings\"\r\n                colors=\"rgb(0.5,0.5,0.5)|rgb(0.7,0.7,0.7)|rgb(0.9,0.9,0.9)|rgba(0.1,0.1,0.1,0)\"\r\n                image=\"Button_Toggle\"\r\n                preferredWidth=\"30\"\r\n                preferredHeight=\"30\"\r\n                >\r\n            </Button>\r\n            </Panel>\r\n        </VerticalLayout>\r\n    </Panel>\r\n    <Panel class=\"MainBackground\" id=\"BackgroundExSettings\">\r\n        <VerticalLayout\r\n            id=\"ExtraSettings\"\r\n            childForceExpandWidth=\"false\"\r\n            childForceExpandHeight=\"false\"\r\n            active=\"true\"\r\n            padding=\"5 5 5 5\"\r\n            spacing=\"5\"\r\n            childAlignment=\"UpperCenter\"\r\n            >\r\n            <Panel class=\"BasicPanel\" id=\"Sett_Panel_1\" childAlignment=\"MiddleCenter\" preferredWidth=\"300\"><Button class=\"ResetSpawnButton\" id=\"Sett_Button_1\" preferredWidth=\"150\"></Button></Panel>\r\n            <Panel class=\"BasicPanel\" id=\"Sett_Panel_2\"><Toggle class=\"BasicToggle\" id=\"Sett_Toggle_1\" text=\"Announce Rolls\" onValueChanged=\"ToggleAnnouncer\"></Toggle></Panel>\r\n            <Panel class=\"BasicPanel\" id=\"Sett_Panel_3\"><Toggle class=\"BasicToggle\" id=\"Sett_Toggle_2\" text=\"Remove tokens after Roll\" onValueChanged=\"ToggleTokenKill\"></Toggle></Panel>\r\n        </VerticalLayout>\r\n    </Panel>\r\n</HorizontalLayout>",
              "CustomUIAssets": [
                {
                  "Name": "Background",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368478960350/07428E3D13BE5A32C27B1FF67A77C6C73CD0D940/"
                },
                {
                  "Name": "BlackDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479040623/1D30BB3D632FE6BBF65B2F1EDA5723E909879690/"
                },
                {
                  "Name": "BlueDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479032984/196DBC5599CE4CA2471AA7980933BF155ECBD2EF/"
                },
                {
                  "Name": "Button_Toggle",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368478961386/C11FC707CC3D24080645FB9A6AF8B687932801D1/"
                },
                {
                  "Name": "Button_Normal",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368478961628/E714B4B81C59C4814FCACDD82787EBE3CF84C21B/"
                },
                {
                  "Name": "GreenDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479041400/175C866B0230724442BF071ED6881B9B668453DB/"
                },
                {
                  "Name": "RedDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479041753/BB0AB34016A5299C4C4280A5BA5871E377089744/"
                },
                {
                  "Name": "WhiteDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479042235/AACE8A3914D12EBDE2B1AD86A391CAF4DB0D9A40/"
                },
                {
                  "Name": "YellowDice",
                  "URL": "http://cloud-3.steamusercontent.com/ugc/792002368479042559/4F748404EBD4B283CF1BCF208897D66630B4790B/"
                }
              ],
              "LuaScript": "local cast_debug = false\r\n\r\nlocal dice_data = {\r\n    Offensive = {\r\n        Blue = {\r\n            [1] = {Surge = 1, Accuracy = 2, Damage = 0},\r\n            [2] = {Surge = 0, Accuracy = 2, Damage = 1},\r\n            [3] = {Surge = 0, Accuracy = 3, Damage = 2},\r\n            [4] = {Surge = 1, Accuracy = 3, Damage = 1},\r\n            [5] = {Surge = 0, Accuracy = 4, Damage = 2},\r\n            [6] = {Surge = 0, Accuracy = 5, Damage = 1},\r\n        },\r\n        Green = {\r\n            [1] = {Surge = 1, Accuracy = 1, Damage = 0},\r\n            [2] = {Surge = 1, Accuracy = 1, Damage = 1},\r\n            [3] = {Surge = 0, Accuracy = 1, Damage = 2},\r\n            [4] = {Surge = 1, Accuracy = 2, Damage = 1},\r\n            [5] = {Surge = 0, Accuracy = 2, Damage = 2},\r\n            [6] = {Surge = 0, Accuracy = 3, Damage = 2},\r\n        },\r\n        Yellow = {\r\n            [1] = {Surge = 1, Accuracy = 0, Damage = 0},\r\n            [2] = {Surge = 2, Accuracy = 0, Damage = 1},\r\n            [3] = {Surge = 0, Accuracy = 1, Damage = 2},\r\n            [4] = {Surge = 1, Accuracy = 1, Damage = 1},\r\n            [5] = {Surge = 1, Accuracy = 2, Damage = 0},\r\n            [6] = {Surge = 0, Accuracy = 2, Damage = 1},\r\n        },\r\n        Red = {\r\n            [1] = {Surge = 0, Accuracy = 0, Damage = 1},\r\n            [2] = {Surge = 0, Accuracy = 0, Damage = 2},\r\n            [3] = {Surge = 0, Accuracy = 0, Damage = 2},\r\n            [4] = {Surge = 1, Accuracy = 0, Damage = 2},\r\n            [5] = {Surge = 0, Accuracy = 0, Damage = 3},\r\n            [6] = {Surge = 0, Accuracy = 0, Damage = 3},\r\n        }\r\n    },\r\n    Defensive = {\r\n        Black = {\r\n            [1] = {Block = 3, Evade = 0, Dodge = 0},\r\n            [2] = {Block = 1, Evade = 0, Dodge = 0},\r\n            [3] = {Block = 2, Evade = 0, Dodge = 0},\r\n            [4] = {Block = 2, Evade = 0, Dodge = 0},\r\n            [5] = {Block = 1, Evade = 0, Dodge = 0},\r\n            [6] = {Block = 0, Evade = 1, Dodge = 0},\r\n        },\r\n        White = {\r\n            [1] = {Block = 1, Evade = 0, Dodge = 0},\r\n            [2] = {Block = 0, Evade = 0, Dodge = 0},\r\n            [3] = {Block = 1, Evade = 1, Dodge = 0},\r\n            [4] = {Block = 0, Evade = 1, Dodge = 0},\r\n            [5] = {Block = 1, Evade = 1, Dodge = 0},\r\n            [6] = {Block = 0, Evade = 0, Dodge = 1},\r\n        }\r\n    }\r\n}\r\n\r\nlocal current_dice = {\r\n    Blue = {},\r\n    Green = {},\r\n    Yellow = {},\r\n    Red = {},\r\n    Black = {},\r\n    White = {},\r\n}\r\n\r\nlocal assets = {\r\n    {\r\n        name = \"Background\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368478960350/07428E3D13BE5A32C27B1FF67A77C6C73CD0D940/\"\r\n    },\r\n    {\r\n        name = \"BlackDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479040623/1D30BB3D632FE6BBF65B2F1EDA5723E909879690/\"\r\n    },\r\n    {\r\n        name = \"BlueDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479032984/196DBC5599CE4CA2471AA7980933BF155ECBD2EF/\"\r\n    },\r\n    {\r\n        name = \"Button_Toggle\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368478961386/C11FC707CC3D24080645FB9A6AF8B687932801D1/\"\r\n    },\r\n    {\r\n        name = \"Button_Normal\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368478961628/E714B4B81C59C4814FCACDD82787EBE3CF84C21B/\"\r\n    },\r\n    {\r\n        name = \"GreenDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479041400/175C866B0230724442BF071ED6881B9B668453DB/\"\r\n    },\r\n    {\r\n        name = \"RedDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479041753/BB0AB34016A5299C4C4280A5BA5871E377089744/\"\r\n    },\r\n    {\r\n        name = \"WhiteDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479042235/AACE8A3914D12EBDE2B1AD86A391CAF4DB0D9A40/\"\r\n    },\r\n    {\r\n        name = \"YellowDice\", url = \"http://cloud-3.steamusercontent.com/ugc/792002368479042559/4F748404EBD4B283CF1BCF208897D66630B4790B/\"\r\n    }\r\n}\r\n\r\nlocal dice_references = {}\r\n\r\n--Defaults\r\nlocal Toggles = {}\r\nToggles.ExtraSettings = false\r\nToggles.Announcer = true\r\nToggles.KillTokens = true\r\n\r\nfunction SetDefaults()\r\n    if (Toggles.Announcer) then\r\n        self.UI.setAttribute(\"Sett_Toggle_1\", \"isOn\", \"true\")\r\n    else\r\n        self.UI.setAttribute(\"Sett_Toggle_1\", \"isOn\", \"false\")\r\n    end\r\n\r\n    if (Toggles.KillTokens) then\r\n        self.UI.setAttribute(\"Sett_Toggle_2\", \"isOn\", \"true\")\r\n    else\r\n        self.UI.setAttribute(\"Sett_Toggle_2\", \"isOn\", \"false\")\r\n    end\r\n\r\n    if (Toggles.ExtraSettings) then\r\n        self.UI.setAttribute(\"ExtraSettingsToggle\", \"isOn\", \"true\")\r\n        ExtraSettingsVis(true)\r\n    else\r\n        self.UI.setAttribute(\"ExtraSettingsToggle\", \"isOn\", \"false\")\r\n        --printToAll(\"Calling ESV false at OnLoad\", \"White\")\r\n        ExtraSettingsVis(false)\r\n    end\r\nend\r\n\r\nfunction onLoad(save_state)\r\n    math.randomseed(os.time())\r\n\r\n    self.UI.setCustomAssets(assets)\r\n\r\n    local result = GetDiceByDesc()\r\n    GetPlatforms()\r\n    --printToAll(\"Found: Blue: \" .. tostring(result.Blue) .. \" Green: \" .. tostring(result.Green) .. \" Yellow: \" .. tostring(result.Yellow) .. \" Red: \" .. tostring(result.Red) .. \" Black: \" .. tostring(result.Black) .. \" White: \" .. tostring(result.White), {0, 1, 1})\r\n\r\n    Wait.time(SetDefaults, 0.5, 0)\r\nend\r\n\r\nfunction GetPlatforms()\r\n    local foundSpawnP = false\r\n    local foundTokenP = false\r\n    local allObjs = getAllObjects()\r\n\r\n    for _, obj in ipairs(allObjs) do\r\n        if (foundSpawnP == false) then\r\n            if (obj.getDescription() == \"Dice Spawn Platform\") then\r\n                foundSpawnP = true\r\n                dice_references.SpawnPlatform = obj\r\n                printToAll(\"Found the spawn platform\", {0, 1, 1})\r\n            end\r\n        end\r\n        --[[\r\n        if (foundTokenP == false) then\r\n            if (obj.getDescription() == \"Token Platform\") then\r\n                foundTokenP = true\r\n                dice_references.TokenPlatform = obj\r\n                printToAll(\"Found the token platform\", {0, 1, 1})\r\n            end\r\n        end\r\n        --]]\r\n    end\r\n\r\n    if (foundSpawnP == false) then\r\n        dice_references.SpawnPlatform = nil\r\n        printToAll(\"Could not find Spawn Platform. Make the description of any object 'Dice Spawn Platform' without the single quotes\", {0, 1, 1})\r\n    end\r\n    --[[\r\n    if (foundTokenP == false) then\r\n        dice_references.TokenPlatform = nil\r\n        printToAll(\"Could not find Token Platform. Make the description of any object 'Token Platform' without the single quotes\", {0, 1, 1})\r\n    end\r\n    --]]\r\nend\r\n\r\nfunction GetDiceByDesc()\r\n    local found = {\r\n        Blue = false,\r\n        Green = false,\r\n        Yellow = false,\r\n        Red = false,\r\n        Black = false,\r\n        White = false,\r\n    }\r\n\r\n    --[[\r\n    local result = Physics.cast({\r\n        origin = self.getPosition(),\r\n        type = 2,\r\n        direction = {0, 1, 0},\r\n        size = {10, 10, 10},\r\n        max_distance = 0,\r\n        debug = true\r\n    })\r\n    --]]\r\n\r\n    --[[\r\n    for _, obj in ipairs(result) do\r\n        --Could probably optimize these\r\n        if (found.Blue == false) then\r\n            if (obj.hit_object.getDescription() == \"Blue Dice\") then\r\n                dice_references.Blue = obj.hit_object\r\n                found.Blue = true\r\n            end\r\n        end\r\n        if (found.Green == false) then\r\n            if (obj.hit_object.getDescription() == \"Green Dice\") then\r\n                dice_references.Green = obj.hit_object\r\n                found.Green = true\r\n            end\r\n        end\r\n        if (found.Yellow == false) then\r\n            if (obj.hit_object.getDescription() == \"Yellow Dice\") then\r\n                dice_references.Yellow = obj.hit_object\r\n                found.Yellow = true\r\n            end\r\n        end\r\n        if (found.Red == false) then\r\n            if (obj.hit_object.getDescription() == \"Red Dice\") then\r\n                dice_references.Red = obj.hit_object\r\n                found.Red = true\r\n            end\r\n        end\r\n        if (found.Black == false) then\r\n            if (obj.hit_object.getDescription() == \"Black Dice\") then\r\n                dice_references.Black = obj.hit_object\r\n                found.Black = true\r\n            end\r\n        end\r\n        if (found.White == false) then\r\n            if (obj.hit_object.getDescription() == \"White Dice\") then\r\n                dice_references.White = obj.hit_object\r\n                found.White = true\r\n            end\r\n        end\r\n    end\r\n    --]]\r\n\r\n    local result = getAllObjects()\r\n\r\n    for _, obj in ipairs(result) do\r\n        --Could probably optimize these\r\n        if (found.Blue == false) then\r\n            if (obj.getDescription() == \"Blue Dice\") then\r\n                dice_references.Blue = obj\r\n                found.Blue = true\r\n            end\r\n        end\r\n        if (found.Green == false) then\r\n            if (obj.getDescription() == \"Green Dice\") then\r\n                dice_references.Green = obj\r\n                found.Green = true\r\n            end\r\n        end\r\n        if (found.Yellow == false) then\r\n            if (obj.getDescription() == \"Yellow Dice\") then\r\n                dice_references.Yellow = obj\r\n                found.Yellow = true\r\n            end\r\n        end\r\n        if (found.Red == false) then\r\n            if (obj.getDescription() == \"Red Dice\") then\r\n                dice_references.Red = obj\r\n                found.Red = true\r\n            end\r\n        end\r\n        if (found.Black == false) then\r\n            if (obj.getDescription() == \"Black Dice\") then\r\n                dice_references.Black = obj\r\n                found.Black = true\r\n            end\r\n        end\r\n        if (found.White == false) then\r\n            if (obj.getDescription() == \"White Dice\") then\r\n                dice_references.White = obj\r\n                found.White = true\r\n            end\r\n        end\r\n    end\r\n\r\n    return found\r\nend\r\n\r\nfunction AddDice(player, value, id)\r\n    local spawnPos = dice_references.SpawnPlatform.getPosition()\r\n    spawnPos.x = spawnPos.x + (math.random() + math.random(-2, 2))\r\n    spawnPos.y = spawnPos.y + 4\r\n    spawnPos.z = spawnPos.z + (math.random() + math.random(-2, 2))\r\n\r\n    local cloned = nil\r\n\r\n    if (id == \"BlueColor\") then\r\n        cloned = dice_references.Blue.clone({position = spawnPos})\r\n        table.insert(current_dice.Blue, cloned)\r\n    elseif (id == \"GreenColor\") then\r\n        cloned = dice_references.Green.clone({position = spawnPos})\r\n        table.insert(current_dice.Green, cloned)\r\n    elseif (id == \"YellowColor\") then\r\n        cloned = dice_references.Yellow.clone({position = spawnPos})\r\n        table.insert(current_dice.Yellow, cloned)\r\n    elseif (id == \"RedColor\") then\r\n        cloned = dice_references.Red.clone({position = spawnPos})\r\n        table.insert(current_dice.Red, cloned)\r\n    elseif (id == \"BlackColor\") then\r\n        cloned = dice_references.Black.clone({position = spawnPos})\r\n        table.insert(current_dice.Black, cloned)\r\n    elseif (id == \"WhiteColor\") then\r\n        cloned = dice_references.White.clone({position = spawnPos})\r\n        table.insert(current_dice.White, cloned)\r\n    end\r\nend\r\n\r\nfunction RemoveDice(player, value, id)\r\n    local removed = nil\r\n    if (id == \"BlueColor\" and #current_dice.Blue > 0) then\r\n        removed = table.remove(current_dice.Blue)\r\n    elseif (id == \"GreenColor\" and #current_dice.Green > 0) then\r\n        removed = table.remove(current_dice.Green)\r\n    elseif (id == \"YellowColor\" and #current_dice.Yellow > 0) then\r\n        removed = table.remove(current_dice.Yellow)\r\n    elseif (id == \"RedColor\" and #current_dice.Red > 0) then\r\n        removed = table.remove(current_dice.Red)\r\n    elseif (id == \"BlackColor\" and #current_dice.Black > 0) then\r\n        removed = table.remove(current_dice.Black)\r\n    elseif (id == \"WhiteColor\" and #current_dice.White > 0) then\r\n        removed = table.remove(current_dice.White)\r\n    end\r\n\r\n    if (removed ~= nil) then\r\n        destroyObject(removed)\r\n    end\r\nend\r\n\r\nlocal isRollingDice = false\r\nfunction AllDiceResting()\r\n    local allResting = true\r\n\r\n    for k, v in pairs(current_dice) do\r\n        if (allResting == true) then\r\n            for i, obj in ipairs(v) do\r\n                if (obj.resting == false) then\r\n                    allResting = false\r\n                    break\r\n                end\r\n            end\r\n        else\r\n            break\r\n        end\r\n    end\r\n\r\n    return allResting\r\nend\r\n\r\nfunction ReadDice()\r\n    local surge = 0\r\n    local accuracy = 0\r\n    local damage = 0\r\n\r\n    local block = 0\r\n    local evade = 0\r\n    local dodge = 0\r\n\r\n    --if (dice_references.TokenPlatform ~= nil) then\r\n    if (true) then\r\n        --[[local physResult = Physics.cast({\r\n            origin = dice_references.TokenPlatform.getPosition(),\r\n            direction = {0, 1, 0},\r\n            type = 2,\r\n            size = {4, 4, 4},\r\n            max_distance = 0,\r\n            debug = true\r\n        })--]]\r\n        local physResult = Physics.cast({\r\n            origin = {-32.04, 5.01, -0.20},\r\n            direction = {0, 1, 0},\r\n            type = 3,\r\n            size = {2.30, 0.52, 5.13},\r\n            max_distance = 0,\r\n            debug = cast_debug\r\n        })\r\n\r\n        for _, objHit in ipairs(physResult) do\r\n            local obj = objHit.hit_object\r\n            local shouldDestroy = false\r\n            if (obj.getName() == \"Block\" and obj.getDescription() == \"Block\") then\r\n                block = block + 1\r\n                if (Toggles.KillTokens == true) then\r\n                    shouldDestroy = true\r\n                end\r\n            end\r\n            if (obj.getName() == \"Evade\" and obj.getDescription() == \"Evade\") then\r\n                evade = evade + 1\r\n                if (Toggles.KillTokens == true) then\r\n                    shouldDestroy = true\r\n                end\r\n            end\r\n            if (obj.getName() == \"Damage\" and obj.getDescription() == \"Damage\") then\r\n                damage = damage + 1\r\n                if (Toggles.KillTokens == true) then\r\n                    shouldDestroy = true\r\n                end\r\n            end\r\n            if (obj.getName() == \"Surge\" and obj.getDescription() == \"Surge\") then\r\n                surge = surge + 1\r\n                if (Toggles.KillTokens == true) then\r\n                    shouldDestroy = true\r\n                end\r\n            end\r\n\r\n            if (shouldDestroy == true) then\r\n                destroyObject(obj)\r\n            end\r\n        end\r\n    end\r\n\r\n    for k, v in pairs(current_dice) do\r\n        for i, obj in ipairs(v) do\r\n            local rotationValueString = obj.getRotationValue()\r\n            local allRotationValues = obj.getRotationValues()\r\n\r\n            local rotationValue = 1\r\n            for i, v in ipairs(allRotationValues) do\r\n                if (rotationValueString == v.value) then\r\n                    rotationValue = i\r\n                    break\r\n                end\r\n            end\r\n\r\n            local data = nil\r\n            local isDefensive = false\r\n            if (k == \"Blue\") then\r\n                data = dice_data.Offensive.Blue[rotationValue]\r\n            elseif (k == \"Green\") then\r\n                data = dice_data.Offensive.Green[rotationValue]\r\n            elseif (k == \"Yellow\") then\r\n                data = dice_data.Offensive.Yellow[rotationValue]\r\n            elseif (k == \"Red\") then\r\n                data = dice_data.Offensive.Red[rotationValue]\r\n            elseif (k == \"Black\") then\r\n                data = dice_data.Defensive.Black[rotationValue]\r\n                isDefensive = true\r\n            elseif (k == \"White\") then\r\n                data = dice_data.Defensive.White[rotationValue]\r\n                isDefensive = true\r\n            end\r\n\r\n            if (data ~= nil) then\r\n                if (isDefensive == false) then\r\n                    surge = surge + data.Surge\r\n                    accuracy = accuracy + data.Accuracy\r\n                    damage = damage + data.Damage\r\n                else\r\n                    block = block + data.Block\r\n                    evade = evade + data.Evade\r\n                    dodge = dodge + data.Dodge\r\n                end\r\n            else\r\n                printToAll(\"Data is nil\", {1, 0, 0})\r\n            end\r\n        end\r\n    end\r\n\r\n    if (surge > 0 or accuracy > 0 or damage > 0) then\r\n        AnnounceToAll(\"Damage: \" .. damage .. \" - Surge: \" .. surge .. \" - Accuracy: \" .. accuracy, {0, 1, 0})\r\n    end\r\n    if (block > 0 or evade > 0 or dodge > 0) then\r\n        AnnounceToAll(\"Block: \" .. block .. \" - Evade: \" .. evade .. \" - Dodge: \" .. dodge, {1, 1, 1})\r\n    end\r\n\r\n    isRollingDice = false\r\nend\r\n\r\nfunction RollDice(player, value, id)\r\n    local foundDice = false\r\n\r\n    for k, v in pairs(current_dice) do\r\n        for i, obj in ipairs(v) do\r\n            if (foundDice == false) then\r\n                foundDice = true\r\n            end\r\n            obj.roll()\r\n        end\r\n    end\r\n\r\n    if (foundDice == false) then\r\n        --printToAll(\"No dice to roll\", {0, 1, 1})\r\n        return\r\n    end\r\n\r\n    if (not isRollingDice) then\r\n        isRollingDice = true\r\n        AnnounceToAll(player.steam_name .. \" is rolling...\", {0, 1, 1})\r\n        Wait.condition(ReadDice, AllDiceResting)\r\n    end\r\nend\r\n\r\nfunction ClearDice(player, value, id)\r\n    local allEmpty = true\r\n    for k, v in pairs(current_dice) do\r\n        if (#v > 0) then\r\n            allEmpty = false\r\n            break\r\n        end\r\n    end\r\n\r\n    if (allEmpty == true) then\r\n        --printToAll(\"No dice have been spawned yet\", {0, 1, 1})\r\n        return\r\n    end\r\n\r\n    for k, v in pairs(current_dice) do\r\n        for i, obj in ipairs(v) do\r\n            destroyObject(obj)\r\n            v[i] = nil\r\n        end\r\n    end\r\n\r\n    isRollingDice = false\r\nend\r\n\r\nfunction ResetSpawn(player, value, id)\r\n    GetPlatforms()\r\n    local result = GetDiceByDesc()\r\n\r\n    printToAll(\"Found: Blue: \" .. tostring(result.Blue) .. \" Green: \" .. tostring(result.Green) .. \" Yellow: \" .. tostring(result.Yellow) .. \" Red: \" .. tostring(result.Red) .. \" Black: \" .. tostring(result.Black) .. \" White: \" .. tostring(result.White), {0, 1, 1})\r\nend\r\n\r\nfunction ToggleAnnouncer(player, isOn, id)\r\n    if (isOn == \"True\") then\r\n        Toggles.Announcer = true\r\n    else\r\n        Toggles.Announcer = false\r\n    end\r\nend\r\n\r\nfunction ToggleTokenKill(player, isOn, id)\r\n    if (isOn == \"True\") then\r\n        Toggles.KillTokens = true\r\n    else\r\n        Toggles.KillTokens = false\r\n    end\r\nend\r\n\r\nfunction ToggleSettings(player, value, id)\r\n    if (Toggles.ExtraSettings == false) then\r\n        ExtraSettingsVis(true)\r\n    else\r\n        ExtraSettingsVis(false)\r\n    end\r\n    Toggles.ExtraSettings = not Toggles.ExtraSettings\r\nend\r\n\r\nlocal ExSettingsToggleSize = 2\r\nlocal ExSettingsButtonSize = 1\r\nlocal ExSettingsPanels = ExSettingsToggleSize + ExSettingsButtonSize\r\nfunction ExtraSettingsVis(show)\r\n    local PanelString = \"Sett_Panel_\"\r\n    local ToggleString = \"Sett_Toggle_\"\r\n\r\n    local PanelButtonString = \"Sett_Panel_Button_\"\r\n    local ButtonString = \"Sett_Button_\"\r\n\r\n    local invisibleColor = \"rgba(0,0,0,0)\"\r\n    --local defPanelColor = \"rgba(0.125,0.125,0.125,1)\"\r\n    local defPanelColor = \"rgba(0,0,0,0)\"\r\n\r\n    if (show) then\r\n        for i=1, ExSettingsPanels do\r\n            self.UI.setAttribute(PanelString .. tostring(i), \"color\", defPanelColor)\r\n        end\r\n        for i=1, ExSettingsToggleSize do\r\n            local toggleName = ToggleString .. tostring(i)\r\n            self.UI.setAttribute(toggleName, \"textColor\", \"White\")\r\n            self.UI.setAttribute(toggleName, \"interactable\", \"true\")\r\n        end\r\n        for i=1, ExSettingsButtonSize do\r\n            local buttonName = ButtonString .. tostring(i)\r\n            self.UI.setAttribute(buttonName, \"textColor\", \"Black\")\r\n            self.UI.setAttribute(buttonName, \"interactable\", \"true\")\r\n        end\r\n        self.UI.setAttribute(\"BackgroundExSettings\", \"color\", \"rgba(1,1,1,0.98)\")\r\n    else\r\n        for i=1, ExSettingsPanels do\r\n            self.UI.setAttribute(PanelString .. tostring(i), \"color\", invisibleColor)\r\n        end\r\n        for i=1, ExSettingsToggleSize do\r\n            local toggleName = ToggleString .. tostring(i)\r\n            self.UI.setAttribute(toggleName, \"textColor\", invisibleColor)\r\n            self.UI.setAttribute(toggleName, \"interactable\", \"false\")\r\n        end\r\n        for i=1, ExSettingsButtonSize do\r\n            local buttonName = ButtonString .. tostring(i)\r\n            self.UI.setAttribute(buttonName, \"textColor\", invisibleColor)\r\n            self.UI.setAttribute(buttonName, \"interactable\", \"false\")\r\n        end\r\n        self.UI.setAttribute(\"BackgroundExSettings\", \"color\", invisibleColor)\r\n    end\r\nend\r\n\r\nfunction AnnounceToAll(string, color)\r\n    if (Toggles.Announcer == true) then\r\n        broadcastToAll(string, color)\r\n    else\r\n        printToAll(string, color)\r\n    end\r\nend",
              "LuaScriptState": "",
              "GUID": "061e25"
            },
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": -11.5240812,
                "posY": 6.09784651,
                "posZ": 9.781195,
                "rotX": 353.50415,
                "rotY": 180.089127,
                "rotZ": 359.021362,
                "scaleX": 1.70316041,
                "scaleY": 1.0,
                "scaleZ": 1.70316041
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://i.imgur.com/0Wu3Hhf.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.2,
                  "MergeDistancePixels": 15.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "--This is the basic distance from the tool a die is spawned\r\n--This number scales with the scale of the tool\r\ndistanceFromTool = 3\r\n\r\n--This is the option to collect the dice into ascending order\r\norganizeDice = true\r\n\r\n--Enables or disables auto-cleanup\r\n-- -1 is off, 0 is no delay, and 1+ is a delay of that many seconds\r\nautoCleanDelay = -1\r\n\r\n\r\n--End of variables to edit unless you know how to script\r\n\r\nfunction onSave()\r\n    local data_to_save = {['hmd']=howManyDice, ['pr']=printResults}\r\n    saved_data = JSON.encode(data_to_save)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        howManyDice = loaded_data.hmd\r\n        printResults = loaded_data.pr\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        howManyDice = 1\r\n        printResults = false\r\n    end\r\n\r\n    math.randomseed(os.time())\r\n    diceBeingRolled = {}\r\n    clearLock = false\r\n    rollLock = false\r\n\r\n    createDisplayAndFunctionButtons()\r\nend\r\n\r\n\r\n--Rolling\r\n\r\n\r\n--Activates rolling process\r\nfunction buttonClick_roll(_, rollerColor)\r\n    local dieOnPad = findDieOnPad()\r\n    if dieOnPad ~= nil then\r\n        if rollLock == false then\r\n            --Destroys old dice\r\n            buttonClick_clear(_, rollerColor)\r\n            --Spawns and rolls new nice\r\n            rollThisDieType(dieOnPad, rollerColor)\r\n        else\r\n            broadcastToColor(\"Please wait until the dice come to a complete stop before rolling again.\", rollerColor, {1,1,1})\r\n        end\r\n    else\r\n        broadcastToColor(\"Place the die type you want to roll onto the pad and try again.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\nfunction rollThisDieType(dieOnPad, rollerColor)\r\n    function coroutine_rolling()\r\n        diceBeingRolled = {}\r\n        clearLock = true\r\n        rollLock = true\r\n        local angle = 360/howManyDice\r\n        for i=1, howManyDice do\r\n            local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n            --Makes a duplicate of the die on the pad\r\n            local die = dieOnPad.clone({position=pos})\r\n            table.insert(diceBeingRolled, die)\r\n            --Gives it a random rotation and waits 1 frame for it to happen\r\n            die.setRotation(randomRotation())\r\n            coroutine.yield(0) coroutine.yield(0) coroutine.yield(0)\r\n\r\n            --Apply some rotational force in a random direction\r\n            --die.addTorque(randomRotation())\r\n            die.roll()\r\n\r\n            wait(0.05)\r\n        end\r\n        watchForDiceToStop(rollerColor)\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rolling\")\r\nend\r\n\r\nfunction watchForDiceToStop(rollerColor)\r\n    function coroutine_placing()\r\n        dieValueTable, rollString, totalRollValue = {}, \"\", 0\r\n        local angle = 360/howManyDice\r\n        --Wait for dice to stop moving after their roll\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            while die.resting == false do\r\n                coroutine.yield(0)\r\n            end\r\n            local rollValue = die.getValue()\r\n            totalRollValue = totalRollValue + rollValue\r\n            table.insert(dieValueTable, {die=die, val=rollValue})\r\n        end\r\n        --Sort the dice by their .getValue() in ascending order\r\n        local sort_func = function(a,b) return a.val < b.val end\r\n        table.sort(dieValueTable, sort_func)\r\n        --Move the dice into order and/or prints\r\n        for i, entry in ipairs(dieValueTable) do\r\n            --Organizes dice\r\n            if organizeDice == true then\r\n                local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n                pos.y = pos.y + 0.5\r\n                entry.die.setPositionSmooth(pos)\r\n            end\r\n            --Assembles print values\r\n            if i ~= 1 then rollString = rollString .. \", \" end\r\n            rollString = rollString .. entry.val\r\n        end\r\n\r\n        rollString = rollString .. \"   TOTAL: \" .. totalRollValue\r\n\r\n        if printResults == true then\r\n            broadcastToAll(Player[rollerColor].steam_name .. \" rolled: \" .. rollString, stringColorToRGB(rollerColor))\r\n        end\r\n\r\n        clearLock = false\r\n        rollLock = false\r\n\r\n        if autoCleanDelay ~= -1 then\r\n            Timer.create({\r\n                identifier=\"uniqueDelayName\"..self.getGUID(),\r\n                delay=autoCleanDelay, function_owner=self, function_name=\"autoClearTimerFunction\"\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_placing\")\r\nend\r\n\r\n\r\n--Printing\r\n\r\n\r\n--Enables/disables printing of results\r\nfunction buttonClick_print()\r\n    if printResults == false then printResults = true\r\n    else printResults = false\r\n    end\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    self.editButton({index=2, label=printStatus})\r\nend\r\n\r\n\r\n--Clearing\r\n\r\n\r\n--Clears rolled dice when called\r\nfunction buttonClick_clear(_, rollerColor)\r\n    --This line kills and delayed auto-cleanup that might be pending\r\n    Timer.destroy(\"uniqueDelayName\"..self.getGUID())\r\n\r\n    if clearLock == false then\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            if die ~= nil then\r\n                destroyObject(die)\r\n            end\r\n        end\r\n    else\r\n        broadcastToColor(\"Please do not hit clear until dice come to a complete stop.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\n--Timer function which triggers clear when acitvated\r\nfunction autoClearTimerFunction()\r\n    buttonClick_clear()\r\nend\r\n\r\n\r\n--Plus and Minus buttons\r\n\r\n\r\n--Adds to counter (how many to roll)\r\nfunction buttonClick_plus()\r\n    howManyDice = howManyDice + 1\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n--Subtracts from counter (how many to roll)\r\nfunction buttonClick_minus()\r\n    if howManyDice > 1 then howManyDice = howManyDice - 1 end\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n\r\n--Info finding utility\r\n\r\n\r\n--Cast to check for object on pad.\r\nfunction findDieOnPad()\r\n    local pos = self.getPosition()\r\n    local objectsInArea = Physics.cast({\r\n        origin=pos, type=2, size={0.2,0.1,0.2},\r\n        direction={0,1,0}, max_distance=3\r\n    })\r\n    for _, entry in ipairs(objectsInArea) do\r\n        if entry.hit_object.tag == \"Dice\" then\r\n            return entry.hit_object\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(object, distance, angle)\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n\tlocal posX = oPos.x + math.sin( math.rad(angle+oRot.y) ) * distance\r\n\tlocal posY = oPos.y\r\n\tlocal posZ = oPos.z + math.cos( math.rad(angle+oRot.y) ) * distance\r\n\treturn {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Wait, used with corotuine\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n--For print/roll, used 2 buttons, 1 display and 1 hidden for functionality\r\n--\r\nfunction createDisplayAndFunctionButtons()\r\n    --Number display\r\n    local params = {\r\n        label=howManyDice, click_function=\"buttonClick_roll\",\r\n        function_owner=self, position={0,0.1,1.45}, height=0, width=0,\r\n        font_size=320, font_color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {0,0,0,0}\r\n    self.createButton(params)--function\r\n\r\n    --Print ON/OFF\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    params = {\r\n        label=printStatus, click_function=\"buttonClick_print\",\r\n        function_owner=self, position={0.7,0.1,-1.1}, height=0, width=0,\r\n        font_size=118, font_color={1,1,1}, color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {1,1,1,0}\r\n    params.position={0.7,0.1,-1.22}\r\n    self.createButton(params)--function\r\n\r\n    --Clear\r\n    params = {\r\n        click_function=\"buttonClick_clear\", function_owner=self,\r\n        position={-0.7,0.1,-1.22}, height=350, width=350, color={1,1,1,0}\r\n    }\r\n    self.createButton(params)\r\n\r\n    --Plus and Minus buttons\r\n    params={function_owner=self, height=350, width=350, color={0,0,0,0}}\r\n    params.click_function, params.position = \"buttonClick_minus\", {-1.42,0.1,0}\r\n    self.createButton(params)--function\r\n    params.click_function, params.position = \"buttonClick_plus\", {1.42,0.1,0}\r\n    self.createButton(params)--function\r\nend\r\n",
              "LuaScriptState": "{\"hmd\":5,\"pr\":false}",
              "GUID": "b1f43a",
              "AttachedSnapPoints": [
                {
                  "Position": {
                    "x": -8.384346E-07,
                    "y": 0.100000024,
                    "z": 0.000162183074
                  }
                }
              ]
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -2.29887319,
                "posY": 3.737655,
                "posZ": 15.6847439,
                "rotX": 0.00211750786,
                "rotY": 180.021378,
                "rotZ": 0.000301964319,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "raber_doom_dice",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.117997505,
                "g": 0.53,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/852720752183911384/4CA6B3300F98EEA123CC135F8BE72A02F303AED9/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/852720752183912963/A41B857951944D7613A4D75817523E1FFFB57117/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 2,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 14.0152521,
                    "posY": 3.877621,
                    "posZ": 27.23426,
                    "rotX": 270.0,
                    "rotY": 64.44381,
                    "rotZ": 0.0,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/6kxjy5wfcjn4i8u/die6%20green.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "aeb680"
                },
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 13.0638428,
                    "posY": 3.8714056,
                    "posZ": 25.4733467,
                    "rotX": -8.786059E-06,
                    "rotY": 83.3869,
                    "rotZ": 180.0,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/lfd34tt5conxq0u/die6%20yellow.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "35785e"
                },
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 12.4844179,
                    "posY": 3.87768459,
                    "posZ": 26.75081,
                    "rotX": 90.0,
                    "rotY": 22.990242,
                    "rotZ": 0.0,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/6kxjy5wfcjn4i8u/die6%20green.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "5fc4ed"
                },
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 14.2823744,
                    "posY": 3.87597561,
                    "posZ": 25.975647,
                    "rotX": 0.0174523611,
                    "rotY": 99.826416,
                    "rotZ": 359.3658,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/ptnt9wio65q1ide/die6%20red.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "cbff30"
                },
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 11.852623,
                    "posY": 3.87761569,
                    "posZ": 28.331295,
                    "rotX": 0.005334146,
                    "rotY": 214.179688,
                    "rotZ": -0.00550217135,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/gjkacebmpu1h3pj/die6%20blue.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "caf52e"
                },
                {
                  "Name": "Custom_Model",
                  "Transform": {
                    "posX": 13.7184639,
                    "posY": 3.8778832,
                    "posZ": 28.50018,
                    "rotX": -0.00500551425,
                    "rotY": 29.64521,
                    "rotZ": 0.00251536653,
                    "scaleX": 0.5750004,
                    "scaleY": 0.5750004,
                    "scaleZ": 0.5750004
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomMesh": {
                    "MeshURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "DiffuseURL": "https://www.dropbox.com/s/gjkacebmpu1h3pj/die6%20blue.jpg?dl=1",
                    "NormalURL": "",
                    "ColliderURL": "https://www.dropbox.com/s/ci36l6wenchaix7/die6.obj?dl=1",
                    "Convex": true,
                    "MaterialIndex": 0,
                    "TypeIndex": 2,
                    "CastShadows": true
                  },
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 1.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 0.8937501,
                    "Drag": 0.1,
                    "AngularDrag": 0.1,
                    "UseGravity": true
                  },
                  "GUID": "c7f18d"
                }
              ],
              "GUID": "aef58d"
            }
          ],
          "GUID": "859c83"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 27.5225239,
            "posY": 2.273388,
            "posZ": -9.686731,
            "rotX": -1.4471897E-05,
            "rotY": 210.0255,
            "rotZ": -1.871092E-06,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Mover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Infinite_Bag",
              "Transform": {
                "posX": 15.0749826,
                "posY": 2.13711071,
                "posZ": 2.36197233,
                "rotX": -0.002803743,
                "rotY": 269.998657,
                "rotZ": 0.0001952582,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Interactable",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.191999257,
                "g": 0.701,
                "b": 0.167999238
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [
                {
                  "Name": "Chinese_Checkers_Piece",
                  "Transform": {
                    "posX": -38.94179,
                    "posY": 4.223505,
                    "posZ": -0.811558545,
                    "rotX": 357.802338,
                    "rotY": 267.8506,
                    "rotZ": 355.7988,
                    "scaleX": 0.450000465,
                    "scaleY": 0.450000465,
                    "scaleZ": 0.450000465
                  },
                  "Nickname": "Interactable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.191999853,
                    "g": 0.701,
                    "b": 0.167999834
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": 0,
                  "XmlUI": "",
                  "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = true\r\n  self.destruct()\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "0c9330"
                }
              ],
              "PhysicsMaterial": {
                "StaticFriction": 0.6,
                "DynamicFriction": 0.6,
                "Bounciness": 0.0,
                "FrictionCombine": 0,
                "BounceCombine": 0
              },
              "Rigidbody": {
                "Mass": 100.0,
                "Drag": 1E+09,
                "AngularDrag": 1E+09,
                "UseGravity": true
              },
              "GUID": "50b2d3",
              "States": {
                "5": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 16.56423,
                    "posY": 2.12948847,
                    "posZ": 5.05303764,
                    "rotX": 0.309056073,
                    "rotY": 359.9538,
                    "rotZ": 359.9611,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Uninteractable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.905,
                    "g": 0.898,
                    "b": 0.171999425
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -34.98226,
                        "posY": 4.31183338,
                        "posZ": -0.7578825,
                        "rotX": 3.4046905,
                        "rotY": 0.387042969,
                        "rotZ": 179.436523,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Uninteractable",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.905,
                        "g": 0.898,
                        "b": 0.171999842
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = false\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "d3a489"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "2b15f8"
                },
                "6": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.0373631,
                    "posY": 2.16992617,
                    "posZ": 3.28359461,
                    "rotX": 0.0214407,
                    "rotY": 359.992065,
                    "rotZ": 359.9884,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Delete",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.856,
                    "g": 0.0999994054,
                    "b": 0.09399941
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -27.0000076,
                        "posY": 4.16296673,
                        "posZ": -5.883177E-06,
                        "rotX": -0.00183394086,
                        "rotY": 90.01447,
                        "rotZ": 359.991119,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Delete",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.856,
                        "g": 0.09999988,
                        "b": 0.0939998552
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.destruct()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "96808f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "f45150"
                },
                "7": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.13471,
                    "posY": 2.58870268,
                    "posZ": 0.6960751,
                    "rotX": 354.4422,
                    "rotY": 0.0121308723,
                    "rotZ": 359.915771,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Copy",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.117999576,
                    "g": 0.53,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -32.2388763,
                        "posY": 4.08938837,
                        "posZ": -1.16114247,
                        "rotX": 3.87262678,
                        "rotY": 268.570831,
                        "rotZ": 0.6912212,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Copy",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.117999859,
                        "g": 0.53,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.clone({\r\n      position = self.getPosition()\r\n    })\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "da89c1"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "1780e5"
                },
                "8": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": -2.83828068,
                    "posY": 1.52735436,
                    "posZ": 5.544322,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Randomize",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.4429995,
                    "g": 0.230999529,
                    "b": 0.08999962
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -29.0757713,
                        "posY": 3.73343658,
                        "posZ": -0.164934546,
                        "rotX": 359.586,
                        "rotY": 88.92422,
                        "rotZ": 193.5898,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Randomize",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.44299984,
                        "g": 0.230999827,
                        "b": 0.08999988
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.shuffle()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "352ee7"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "b79c59"
                },
                "1": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 5.85745668,
                    "posY": 1.53940368,
                    "posZ": 5.554255,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Custom Tool Creator",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.627,
                    "g": 0.124999829,
                    "b": 0.941
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "function onObjectLeaveContainer(container, leave_object)\r\n  if container == self then\r\n    leave_object.setLuaScript(script)\r\n    leave_object.setVar(\"parentGUID\", self.getGUID())\r\n  end\r\nend\r\n\r\nscript = [===[\r\ntemplate = [[function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    local target = collision_info.collision_object\r\n    ---ENTER CUSTOM INTERACTION BELOW---\r\n    --replace me--\r\n    --example: target.lock()\r\n  end\r\n  self.destruct()\r\nend]]\r\n\r\nparentGUID = \"]===]..self.getGUID()..[===[\"\r\n\r\nfunction onLoad()\r\n  self.createInput({\r\n    input_function = \"dummy\"-- string (required),\r\n    ,function_owner = self -- Object (required),\r\n    --,label          = -- string,\r\n    ,alignment      = 2-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n    ,position       = {0,3,-0.4}-- Vector,\r\n    ,rotation       = {0,180,0}-- Vector,\r\n    ,scale          = {0.8,1,1}-- Vector,\r\n    ,width          = 900 -- int,\r\n    ,height         = 700-- int,\r\n    ,font_size      = 40-- int,\r\n  --  ,color          = {00,00,00}-- Color,\r\n  --  ,font_color     = {255,255,255}-- Color,\r\n    ,tooltip        = \"input code here\"-- Color,\r\n    ,value          = template-- string,\r\n    ,validation     = 1-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n    ,tab            = 3-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n    })\r\n    self.createInput({\r\n      input_function = \"dummy\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      --,label          = -- string,\r\n      ,alignment      = 3-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n      ,position       = {0,3,0.6}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 400-- int,\r\n      ,height         = 75-- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Name your tool here\"-- Color,\r\n      ,value          = \"CustomTool\"-- string,\r\n      ,validation     = 4-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n      ,tab            = 2-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n      })\r\n    self.createButton({\r\n      click_function = \"createTool\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      ,label          = \"Create\"-- string,\r\n      ,position       = {0.35,3,0.42}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 150-- int,\r\n      --,height         = -- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Create Custom tool\"-- string,\r\n    })\r\nend\r\ntoolBag = nil\r\ntoolBall = nil\r\nscript = \"\"\r\nfunction createTool()\r\n  script = self.getInputs()[1].value\r\n  local bagSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 0.2,\r\n    self.getPosition()[3]}\r\n  local BallSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 3,\r\n    self.getPosition()[3]}\r\n  local name = self.getInputs()[2].value\r\n--[[  toolBag = spawnObject({\r\n    type           = \"Infinite_Bag\"-- string,\r\n    ,position       = bagSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    --,scale          = -- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })]]\r\n  --Copy/paste in inf bag that the creator came so that the float physics cary to the new tool\r\n  --(you cannot edit a object's physics with code :/ )\r\n  copy({getObjectFromGUID(parentGUID)})\r\n  toolBag = (paste({position = bagSpawnPos}))[1]\r\n  toolBag.setColorTint({0.627,0.125,0.941,1})\r\n  toolBag.setName(name)\r\n  toolBag.reset()\r\n  toolBag.setLuaScript(\"\")\r\n  toolBall = spawnObject({\r\n    type           = \"Chinese_Checkers_Piece\"-- string,\r\n    ,position       = BallSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    ,scale          = {0.45,0.45,0.45}-- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })\r\n  toolBall.setLuaScript(script)\r\n  toolBall.setColorTint({0.627,0.125,0.941,1})\r\n  toolBall.setName(name)\r\nend\r\n\r\nfunction dummy()\r\nend\r\n\r\n]===]\r\n",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Notecard",
                      "Transform": {
                        "posX": 8.89699,
                        "posY": 4.94847965,
                        "posZ": 2.044845,
                        "rotX": 359.787781,
                        "rotY": 89.97574,
                        "rotZ": 0.0124006681,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Custom Tool Creator",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "XmlUI": "",
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "GUID": "5c96be"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "c47ddd"
                },
                "2": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 5.85745668,
                    "posY": 1.5394038,
                    "posZ": 5.554255,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.249999374,
                    "g": 0.249999374,
                    "b": 0.249999374
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -23.8302631,
                        "posY": 4.05259132,
                        "posZ": 0.273095965,
                        "rotX": 2.502317,
                        "rotY": 90.26367,
                        "rotZ": 4.03545332,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Locking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.0,
                        "g": 0.0,
                        "b": 0.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.lock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "1a368f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "27b7b7"
                },
                "3": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 5.85745668,
                    "posY": 1.5394038,
                    "posZ": 5.554255,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Unlock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -42.0548,
                        "posY": 4.32584333,
                        "posZ": -0.7650384,
                        "rotX": 3.418605,
                        "rotY": 359.9167,
                        "rotZ": 0.777484953,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Unlocking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.unlock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "76ce1e"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "e79372"
                }
              }
            },
            {
              "Name": "Infinite_Bag",
              "Transform": {
                "posX": 16.4334564,
                "posY": 2.137112,
                "posZ": 4.414221,
                "rotX": -0.002803743,
                "rotY": 269.998657,
                "rotZ": 0.0001952582,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Uninteractable",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.905,
                "g": 0.898,
                "b": 0.171999276
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [
                {
                  "Name": "Chinese_Checkers_Piece",
                  "Transform": {
                    "posX": -34.98226,
                    "posY": 4.31183338,
                    "posZ": -0.7578825,
                    "rotX": 3.4046905,
                    "rotY": 0.387042969,
                    "rotZ": 179.436523,
                    "scaleX": 0.450000465,
                    "scaleY": 0.450000465,
                    "scaleZ": 0.450000465
                  },
                  "Nickname": "Uninteractable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.905,
                    "g": 0.898,
                    "b": 0.171999842
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": 0,
                  "XmlUI": "",
                  "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = false\r\n  self.destruct()\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "d3a489"
                }
              ],
              "PhysicsMaterial": {
                "StaticFriction": 0.6,
                "DynamicFriction": 0.6,
                "Bounciness": 0.0,
                "FrictionCombine": 0,
                "BounceCombine": 0
              },
              "Rigidbody": {
                "Mass": 100.0,
                "Drag": 1E+09,
                "AngularDrag": 1E+09,
                "UseGravity": true
              },
              "GUID": "cd1b42",
              "States": {
                "6": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.0373631,
                    "posY": 2.16992617,
                    "posZ": 3.28359461,
                    "rotX": 0.0214407,
                    "rotY": 359.992065,
                    "rotZ": 359.9884,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Delete",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.856,
                    "g": 0.0999994054,
                    "b": 0.09399941
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -27.0000076,
                        "posY": 4.16296673,
                        "posZ": -5.883177E-06,
                        "rotX": -0.00183394086,
                        "rotY": 90.01447,
                        "rotZ": 359.991119,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Delete",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.856,
                        "g": 0.09999988,
                        "b": 0.0939998552
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.destruct()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "96808f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "f45150"
                },
                "7": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.13471,
                    "posY": 2.58870268,
                    "posZ": 0.6960751,
                    "rotX": 354.4422,
                    "rotY": 0.0121308723,
                    "rotZ": 359.915771,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Copy",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.117999576,
                    "g": 0.53,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -32.2388763,
                        "posY": 4.08938837,
                        "posZ": -1.16114247,
                        "rotX": 3.87262678,
                        "rotY": 268.570831,
                        "rotZ": 0.6912212,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Copy",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.117999859,
                        "g": 0.53,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.clone({\r\n      position = self.getPosition()\r\n    })\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "da89c1"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "1780e5"
                },
                "8": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": -2.83828068,
                    "posY": 1.52735436,
                    "posZ": 5.544322,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Randomize",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.4429995,
                    "g": 0.230999529,
                    "b": 0.08999962
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -29.0757713,
                        "posY": 3.73343658,
                        "posZ": -0.164934546,
                        "rotX": 359.586,
                        "rotY": 88.92422,
                        "rotZ": 193.5898,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Randomize",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.44299984,
                        "g": 0.230999827,
                        "b": 0.08999988
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.shuffle()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "352ee7"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "b79c59"
                },
                "1": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 8.408248,
                    "posY": 1.52735436,
                    "posZ": 5.532656,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Custom Tool Creator",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.627,
                    "g": 0.124999829,
                    "b": 0.941
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "function onObjectLeaveContainer(container, leave_object)\r\n  if container == self then\r\n    leave_object.setLuaScript(script)\r\n    leave_object.setVar(\"parentGUID\", self.getGUID())\r\n  end\r\nend\r\n\r\nscript = [===[\r\ntemplate = [[function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    local target = collision_info.collision_object\r\n    ---ENTER CUSTOM INTERACTION BELOW---\r\n    --replace me--\r\n    --example: target.lock()\r\n  end\r\n  self.destruct()\r\nend]]\r\n\r\nparentGUID = \"]===]..self.getGUID()..[===[\"\r\n\r\nfunction onLoad()\r\n  self.createInput({\r\n    input_function = \"dummy\"-- string (required),\r\n    ,function_owner = self -- Object (required),\r\n    --,label          = -- string,\r\n    ,alignment      = 2-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n    ,position       = {0,3,-0.4}-- Vector,\r\n    ,rotation       = {0,180,0}-- Vector,\r\n    ,scale          = {0.8,1,1}-- Vector,\r\n    ,width          = 900 -- int,\r\n    ,height         = 700-- int,\r\n    ,font_size      = 40-- int,\r\n  --  ,color          = {00,00,00}-- Color,\r\n  --  ,font_color     = {255,255,255}-- Color,\r\n    ,tooltip        = \"input code here\"-- Color,\r\n    ,value          = template-- string,\r\n    ,validation     = 1-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n    ,tab            = 3-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n    })\r\n    self.createInput({\r\n      input_function = \"dummy\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      --,label          = -- string,\r\n      ,alignment      = 3-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n      ,position       = {0,3,0.6}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 400-- int,\r\n      ,height         = 75-- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Name your tool here\"-- Color,\r\n      ,value          = \"CustomTool\"-- string,\r\n      ,validation     = 4-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n      ,tab            = 2-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n      })\r\n    self.createButton({\r\n      click_function = \"createTool\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      ,label          = \"Create\"-- string,\r\n      ,position       = {0.35,3,0.42}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 150-- int,\r\n      --,height         = -- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Create Custom tool\"-- string,\r\n    })\r\nend\r\ntoolBag = nil\r\ntoolBall = nil\r\nscript = \"\"\r\nfunction createTool()\r\n  script = self.getInputs()[1].value\r\n  local bagSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 0.2,\r\n    self.getPosition()[3]}\r\n  local BallSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 3,\r\n    self.getPosition()[3]}\r\n  local name = self.getInputs()[2].value\r\n--[[  toolBag = spawnObject({\r\n    type           = \"Infinite_Bag\"-- string,\r\n    ,position       = bagSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    --,scale          = -- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })]]\r\n  --Copy/paste in inf bag that the creator came so that the float physics cary to the new tool\r\n  --(you cannot edit a object's physics with code :/ )\r\n  copy({getObjectFromGUID(parentGUID)})\r\n  toolBag = (paste({position = bagSpawnPos}))[1]\r\n  toolBag.setColorTint({0.627,0.125,0.941,1})\r\n  toolBag.setName(name)\r\n  toolBag.reset()\r\n  toolBag.setLuaScript(\"\")\r\n  toolBall = spawnObject({\r\n    type           = \"Chinese_Checkers_Piece\"-- string,\r\n    ,position       = BallSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    ,scale          = {0.45,0.45,0.45}-- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })\r\n  toolBall.setLuaScript(script)\r\n  toolBall.setColorTint({0.627,0.125,0.941,1})\r\n  toolBall.setName(name)\r\nend\r\n\r\nfunction dummy()\r\nend\r\n\r\n]===]\r\n",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Notecard",
                      "Transform": {
                        "posX": 8.89699,
                        "posY": 4.94847965,
                        "posZ": 2.044845,
                        "rotX": 359.787781,
                        "rotY": 89.97574,
                        "rotZ": 0.0124006681,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Custom Tool Creator",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "XmlUI": "",
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "GUID": "5c96be"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "8a3fbd"
                },
                "2": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 8.408248,
                    "posY": 1.52735436,
                    "posZ": 5.532656,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.249999374,
                    "g": 0.249999374,
                    "b": 0.249999374
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -23.8302631,
                        "posY": 4.05259132,
                        "posZ": 0.273095965,
                        "rotX": 2.502317,
                        "rotY": 90.26367,
                        "rotZ": 4.03545332,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Locking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.0,
                        "g": 0.0,
                        "b": 0.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.lock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "1a368f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "6e85e5"
                },
                "3": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 8.408248,
                    "posY": 1.52735436,
                    "posZ": 5.532656,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Unlock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -42.0548,
                        "posY": 4.32584333,
                        "posZ": -0.7650384,
                        "rotX": 3.418605,
                        "rotY": 359.9167,
                        "rotZ": 0.777484953,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Unlocking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.unlock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "76ce1e"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "50bf02"
                },
                "4": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 8.408248,
                    "posY": 1.52735436,
                    "posZ": 5.532656,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Interactable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.191999376,
                    "g": 0.701,
                    "b": 0.167999357
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -38.94179,
                        "posY": 4.223505,
                        "posZ": -0.811558545,
                        "rotX": 357.802338,
                        "rotY": 267.8506,
                        "rotZ": 355.7988,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Interactable",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.191999853,
                        "g": 0.701,
                        "b": 0.167999834
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = true\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "0c9330"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "9be25c"
                }
              }
            },
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": -3.04259,
                "posY": 2.537648,
                "posZ": -8.839733,
                "rotX": -0.000104171762,
                "rotY": 180.013947,
                "rotZ": 1.20401537E-05,
                "scaleX": 0.5605753,
                "scaleY": 1.0,
                "scaleZ": 0.5605753
              },
              "Nickname": "Position Finder",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://i.imgur.com/WLjyIPz.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 14.77778,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "function update()\r\n    local pos = self.getPosition()\r\n    local heightOffset = self.getDescription()\r\n    local x = math.floor(pos.x*100+0.5) / 100\r\n    local y = (math.floor(pos.y*100+0.5) / 100)\r\n    local z = math.floor(pos.z*100+0.5) / 100\r\n    if heightOffset ~= \"\" then\r\n        y = y + tonumber(heightOffset)\r\n    end\r\n    setNotes(\"{\"..x..\", \"..y..\", \"..z..\"}\")\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "0d4a79"
            },
            {
              "Name": "Checker_Board",
              "Transform": {
                "posX": 1.73322916,
                "posY": 2.99757981,
                "posZ": 2.014891,
                "rotX": 359.963135,
                "rotY": 0.00345901051,
                "rotZ": 180.030624,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Scaling Tool",
              "Description": "Place item on pad, click \"Set Selection\", then pile on items you want to have that item's scale onto the pad. click \"Resize\" and you're done.\n\nThis tool works off of item distance from the tool's center. Be careful what you put this item on top of, or you may find it re-sizing objects underneath it.\n\nIt works this way due to my lazyness. Oops.",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "",
              "LuaScript": "--Distance to look for an object\r\nsearchDistance = 7\r\n\r\nfunction onload()\r\n    createButtonsAndDisplay()\r\nend\r\n\r\nfunction buttonClick_select()\r\n    local localPos = self.getPosition()\r\n    local scaleFactor = self.getScale().x\r\n    local objFound = false\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj~=self and findProximity(localPos,obj)<searchDistance*scaleFactor then\r\n            targetScale = obj.getScale()\r\n            local objName = obj.name\r\n            if obj.getName() ~= \"\" then\r\n                objName = obj.getName()\r\n            end\r\n            self.editButton({index=0, label=objName})\r\n            objFound = true\r\n            break\r\n        end\r\n    end\r\n    if objFound == false then\r\n        broadcastToAll(\"No object was found to select. Place object onto pad.\", {1,1,1})\r\n        self.editButton({index=0, label='No Current Selection'})\r\n        targetScale = nil\r\n    end\r\nend\r\n\r\nfunction buttonClick_resize()\r\n    local localPos = self.getPosition()\r\n    local scaleFactor = self.getScale().x\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj~=self and findProximity(localPos,obj)<searchDistance*scaleFactor then\r\n            if targetScale ~= nil then\r\n                obj.setScale(targetScale)\r\n            else\r\n                broadcastToAll(\"Error: Must Set Selection.\", {1,0,0})\r\n                break\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Creates buttons\r\nfunction createButtonsAndDisplay()\r\n    self.createButton({\r\n        label='No Current Selection', click_function=\"none\",\r\n        function_owner=self, position={0,0,8}, rotation={180,0,0},\r\n        width=0, height=0, font_size=300, font_color={1,1,1}, color={0,0,0}\r\n    })\r\n    self.createButton({\r\n        label=\"Set Selection\", click_function=\"buttonClick_select\",\r\n        function_owner=self, position={-6,0,-8}, rotation={180,0,0},\r\n        width=2000, height=500, font_size=300, font_color={1,1,1}, color={0.5,0.5,0.5}\r\n    })\r\n    self.createButton({\r\n        label=\"Resize\", click_function=\"buttonClick_resize\",\r\n        function_owner=self, position={6,0,-8}, rotation={180,0,0},\r\n        width=2000, height=500, font_size=300, font_color={1,1,1}, color={0.5,0.5,0.5}\r\n    })\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "ca5056"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -11.3469915,
                "posY": 2.60679388,
                "posZ": -11.6423235,
                "rotX": 0.0136772972,
                "rotY": 150.00444,
                "rotZ": 0.02716799,
                "scaleX": 0.75,
                "scaleY": 0.75,
                "scaleZ": 0.75
              },
              "Nickname": "1MegaFreeze",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://paste.ee/r/fGoRz",
                "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [
                {
                  "Name": "go_game_piece_white",
                  "Transform": {
                    "posX": -4.379629,
                    "posY": 2.80785418,
                    "posZ": -11.9221745,
                    "rotX": -0.00103559729,
                    "rotY": 0.00013354198,
                    "rotZ": -0.00041682052,
                    "scaleX": 1.749999,
                    "scaleY": 1.749999,
                    "scaleZ": 1.749999
                  },
                  "Nickname": "(Tool) - MegaFreeze Enable and Disable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.6617647,
                    "g": 0.6617647,
                    "b": 0.6617647
                  },
                  "Locked": false,
                  "Grid": false,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "XmlUI": "",
                  "LuaScript": "function onload()\r\n    MakeButtons()\r\nend\r\n\r\nfunction func_Unfreeze()\r\n    for _, obj in pairs(getAllObjects()) do\r\n        if obj.interactable == false then\r\n            obj.interactable = true\r\n        end\r\n    end\r\n    MakeButtons('Freeze')\r\n\r\nend\r\n\r\nfunction func_Freeze()\r\n    Global.call('MegaFreeze')\r\n    MakeButtons('unFreeze')\r\nend\r\n\r\nfunction MakeButtons(switch)\r\n    if switch == nil then\r\n        self.createButton({\r\n            label=\"Unfreeze Objects\", click_function=\"func_Unfreeze\", function_owner=self,\r\n            position={0,0.5,1}, rotation={0,180,0}, height=900, width=2200,\r\n            font_size=250,-- color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    elseif switch == 'Freeze' then\r\n        self.clearButtons()\r\n        self.createButton({\r\n            label=\"Freeze Objects\", click_function=\"func_Freeze\", function_owner=self,\r\n            position={0,0.5,1}, rotation={0,180,0}, height=900, width=2200,\r\n            font_size=250,-- color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    elseif switch == 'unFreeze' then\r\n        self.clearButtons()\r\n        self.createButton({\r\n            label=\"Unfreeze Objects\", click_function=\"func_Unfreeze\", function_owner=self,\r\n            position={0,0.5,1}, rotation={0,180,0}, height=900, width=2200,\r\n            font_size=250,-- color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\nend\r\n\r\n--[[\r\n\r\nThis is the MEGA FREEZE CODE\r\n\r\nfunction onLoad()\r\n    MegaFreeze() -- Call MegaFreeze - Place it here so you can disable it by just commenting out this alone.\r\nend\r\n\r\nfunction MegaFreeze()\r\n    local freezeByZone = {'4e6958'} -- Place GUIDs of script zones here\r\n    local freezeByGUID = {'98f523', '79b304', 'b718b4', '316f83'} -- Place GUIDs of individual Objects here\r\n\r\n    for _, obj in pairs(getAllObjects()) do\r\n        if      obj.getName() == 'MegaFreeze' then\r\n                obj.interactable = false\r\n        elseif  obj.getDescription() == 'MegaFreeze' then\r\n                obj.interactable = false\r\n        else\r\n            for _, guid in pairs(freezeByGUID) do\r\n                if obj.getGUID() == guid then obj.interactable = false end\r\n            end\r\n        end\r\n    end\r\n\r\n     -- Freeze Objects by Zone\r\n    for _, zone in pairs(freezeByZone) do\r\n        for _, obj in pairs(getObjectFromGUID(zone).getObjects()) do\r\n            obj.interactable = false\r\n        end\r\n    end\r\nend\r\n\r\n]]\r\n",
                  "LuaScriptState": "",
                  "GUID": "725ef4"
                },
                {
                  "Name": "BlockRectangle",
                  "Transform": {
                    "posX": -6.449876,
                    "posY": 2.98130178,
                    "posZ": -13.5107117,
                    "rotX": 0.0009966048,
                    "rotY": 329.999146,
                    "rotZ": 359.985565,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "MegaFreeze",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.0,
                    "g": 0.201567829,
                    "b": 0.8235294
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "GUID": "72b805"
                }
              ],
              "GUID": "54920d"
            },
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 46.7499962,
                "posY": 2.5773747,
                "posZ": 2.75000548,
                "rotX": 359.950226,
                "rotY": 179.99971,
                "rotZ": 0.1480728,
                "scaleX": 1.5,
                "scaleY": 1.0,
                "scaleZ": 1.5
              },
              "Nickname": "Character Mover",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HOTQFX5.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.2,
                  "MergeDistancePixels": 15.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "local distance = 1\r\n\r\nfunction onSave()\r\n--print(\"starting onsave()\")\r\n  data_to_save={}\r\n  if (mini~=nil) then\r\n  --  print(\"mini~=nil\")\r\n    data_to_save={miniguid=mini.guid}\r\n  --  print(\"data_to_save = \", data_to_save)\r\n  end\r\n--  print(\"encoding data...\")\r\n  saved_data = JSON.encode(data_to_save)\r\n--  print(\"returnign saved data\", saved_data)\r\n  return saved_data\r\nend\r\n\r\n\r\nfunction onload(saved_data)\r\n  if (saved_data~=nil) then\r\n    loaded_data = JSON.decode(saved_data)\r\n    if (loaded_data.miniguid ~= nil) then\r\n      mini = getObjectFromGUID(loaded_data.miniguid)\r\n    end\r\n  end\r\n\r\n  self.createButton({\r\n       label=\"Sync\", click_function=\"findByDistance\",\r\n       function_owner=self, position={0,0,0},\r\n       height=410, width=410, font_size=70\r\n   })\r\n\r\n   self.createButton({click_function = 'MoveE',    function_owner = self,    label = 'E',    position = {1.1,0,0},    rotation = {0,0,0},    width = 450,    height = 450,    font_size = 150})\r\n   self.createButton({click_function = 'MoveW',    function_owner = self,    label = 'W',    position = {-1.1,0,0},    rotation = {0,0,0},    width = 450,    height = 450,    font_size = 150})\r\n   self.createButton({click_function = 'MoveN',    function_owner = self,    label = 'N',    position = {-0,0,-1.1},    rotation = {0,0,0},    width = 450,    height = 450,    font_size = 150})\r\n   self.createButton({click_function = 'MoveS',    function_owner = self,    label = 'S',    position = {-0,0,1.1},    rotation = {0,0,0},    width = 450,    height = 450,    font_size = 150})\r\n--   self.createButton({click_function = 'Fall',    function_owner = self,    label = 'N',    position = {0.7,0,-0.3},    rotation = {0,0,0},    width = 250,    height = 250,    font_size = 150})\r\n--   self.createButton({click_function = 'Stand',    function_owner = self,    label = 'S',    position = {0.7,0,0.5},    rotation = {0,0,0},    width = 250,    height = 250,    font_size = 150})\r\nend\r\n\r\nfunction Fall()\r\n     local pos = mini.getPosition()\r\n--     local angle = mini.getRotation()\r\n     mini.setPosition({pos.x,pos.y+0.25,pos.z+(distance/2)})\r\n     mini.setRotation({270, 0, 0})\r\n     print(mini.guid)\r\nend\r\n\r\nfunction MoveE()\r\n     local pos = mini.getPosition()\r\n     mini.setPosition({pos.x+distance,pos.y+0.25,pos.z})\r\n end\r\n\r\n\r\nfunction MoveW()\r\n     local pos = mini.getPosition()\r\n     mini.setPosition({pos.x-distance,pos.y+0.25,pos.z})\r\nend\r\n\r\nfunction MoveN()\r\n     local pos = mini.getPosition()\r\n     mini.setPosition({pos.x,pos.y+0.25,pos.z+distance})\r\nend\r\n\r\nfunction MoveS()\r\n     local pos = mini.getPosition()\r\n     mini.setPosition({pos.x,pos.y+0.25,pos.z-distance})\r\nend\r\n\r\nfunction Stand()\r\n     local pos = mini.getPosition()\r\n--     local angle = mini.getRotation()\r\n     mini.setPosition({pos.x,pos.y+0.25,pos.z-(distance/3)})\r\n     mini.setRotation({0, 0, 0})\r\nend\r\n\r\nfunction findByDistance(obj, highlight, alt_click)\r\nprint(obj)\r\nprint(highlight)\r\nprint(alt_click)\r\n    print(\"[b]---Find By Distance---[/b]\")\r\n    --This is very similar to how we did findByTag()\r\n    --We are also using tag to narrow it down, which isn't strictly necessary\r\n    local allObjects = getAllObjects()\r\n    local foundFigurine = false\r\n    for _, object in ipairs(allObjects) do\r\n       if object.tag == \"Figurine\" or \"Tileset\" then\r\n            local distance = findProximity(self.getPosition(), object)\r\n            --Here is the check for distance\r\n            if distance <= 3 then\r\n                print(object.getName() .. \" found.\")\r\n--                print(object.tag .. \" object tag.\")\r\n              if object.guid ~= self.guid then\r\n                mini = getObjectFromGUID(object.guid)\r\n                print(mini.guid .. \" mini.guid.\")\r\n                local color = self.getColorTint()\r\n                mini.setColorTint(color)\r\n                          mini.setVar('hl', highlight)\r\n                          mini.setVar('hero', 'true')\r\n                          --hlcolor = mini.getVar('hl')\r\n                          mini.highlightOn(mini.getVar('hl'))\r\n                          print(\"mini.hl = \", mini.getVar('hl'), \", mini.hero = \", mini.getVar('hero'))\r\n              else\r\n                print(\"self found\")\r\n              end\r\n--                print(mini.guid .. \" = current mini control.\")\r\n--function onPickedUp()\r\n--print(color.r, color.g, color.b)\r\n--stringColorToRGB(color)\r\n--\r\n                foundFigurine = true\r\n            end\r\n        end\r\n    end\r\n    if foundFigurine == false then\r\n        print(\"No figurines found within 5 units.\")\r\n    end\r\n    print(\"[b]-------------------------[/b]\")\r\nend\r\n\r\n--Used by findByDistance\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend",
              "LuaScriptState": "[]",
              "GUID": "4a8ac1"
            },
            {
              "Name": "Notecard",
              "Transform": {
                "posX": 1.44624257,
                "posY": 2.52600241,
                "posZ": -0.6670697,
                "rotX": 0.0121879671,
                "rotY": 269.9838,
                "rotZ": 359.9842,
                "scaleX": 0.7000003,
                "scaleY": 0.7000003,
                "scaleZ": 0.7000003
              },
              "Nickname": "Red Block, a.k.a. a4843a",
              "Description": "[b]GUID NOT FOUND[/b]",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "",
              "LuaScript": "--[[\r\nOBJECT INSPECTOR BY MARKIMUS\r\nhttp://steamcommunity.com/sharedfiles/filedetails/?id=800246408\r\n--]]\r\n\r\ndecimalPointsToRound = 2\r\n--YOU CAN CHANGE THIS IF YOU LIKE.\r\n\r\nfunction round(num)\r\n    local function doRound(n)\r\n        local am = 10^decimalPointsToRound\r\n        return math.floor(n*am+0.5)/am\r\n    end\r\n    if type(num) == \"table\" then\r\n        for i, v in pairs(num) do\r\n            num[i] = doRound(v)\r\n        end\r\n        return num\r\n    elseif tonumber(num) ~= nil then\r\n        return doRound(num)\r\n    end\r\nend\r\n\r\nfunction update()\r\n    local myName = self:getName()\r\n    local target = nil\r\n    for x in string.gmatch(myName, \"%w%w%w%w%w%w\") do\r\n        local obj = getObjectFromGUID(x)\r\n        if obj ~= nil then\r\n            target = obj\r\n            break\r\n        end\r\n    end\r\n    if target ~= nil then\r\n        local name = target.name\r\n        local tag = target.tag\r\n        local pos = round(target:getPosition())\r\n        local rot = round(target:getRotation())\r\n        local scale = round(target:getScale())\r\n        \r\n        local text = \"[b]Name:[/b] \".. name ..\"\\n[b]Tag:[/b] \".. tag ..\"\\n\\n\"\r\n        text = text .. \"[b]Position:[/b] {x=\".. pos.x ..\", y=\".. pos.y ..\", z=\".. pos.z ..\"}\\n\"\r\n        text = text .. \"[b]Rotation:[/b] {x=\".. rot.x ..\", y=\".. rot.y ..\", z=\".. rot.z ..\"}\\n\"\r\n        text = text .. \"[b]Scale:[/b] {x=\".. scale.x ..\", y=\".. scale.y ..\", z=\".. scale.z ..\"}\"\r\n        \r\n        self.setDescription(text)\r\n    else\r\n        self:setDescription('[b]GUID NOT FOUND[/b]')\r\n    end\r\nend",
              "LuaScriptState": "{\"doRounding\":false}",
              "GUID": "f8f5c1"
            },
            {
              "Name": "Notecard",
              "Transform": {
                "posX": 1.437077,
                "posY": 2.5255127,
                "posZ": 0.449861556,
                "rotX": 359.936218,
                "rotY": 270.000183,
                "rotZ": 359.8666,
                "scaleX": 0.7000003,
                "scaleY": 0.7000003,
                "scaleZ": 0.7000003
              },
              "Nickname": "GUID HERE 0d4a79",
              "Description": "[b]GUID NOT FOUND[/b]",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "",
              "LuaScript": "--[[\r\nOBJECT INSPECTOR BY MARKIMUS\r\nhttp://steamcommunity.com/sharedfiles/filedetails/?id=800246408\r\n--]]\r\n\r\ndecimalPointsToRound = 2\r\n--YOU CAN CHANGE THIS IF YOU LIKE.\r\n\r\nfunction round(num)\r\n    local function doRound(n)\r\n        local am = 10^decimalPointsToRound\r\n        return math.floor(n*am+0.5)/am\r\n    end\r\n    if type(num) == \"table\" then\r\n        for i, v in pairs(num) do\r\n            num[i] = doRound(v)\r\n        end\r\n        return num\r\n    elseif tonumber(num) ~= nil then\r\n        return doRound(num)\r\n    end\r\nend\r\n\r\nfunction update()\r\n    local myName = self:getName()\r\n    local target = nil\r\n    for x in string.gmatch(myName, \"%w%w%w%w%w%w\") do\r\n        local obj = getObjectFromGUID(x)\r\n        if obj ~= nil then\r\n            target = obj\r\n            break\r\n        end\r\n    end\r\n    if target ~= nil then\r\n        local name = target.name\r\n        local tag = target.tag\r\n        local pos = round(target:getPosition())\r\n        local rot = round(target:getRotation())\r\n        local scale = round(target:getScale())\r\n        \r\n        local text = \"[b]Name:[/b] \".. name ..\"\\n[b]Tag:[/b] \".. tag ..\"\\n\\n\"\r\n        text = text .. \"[b]Position:[/b] {x=\".. pos.x ..\", y=\".. pos.y ..\", z=\".. pos.z ..\"}\\n\"\r\n        text = text .. \"[b]Rotation:[/b] {x=\".. rot.x ..\", y=\".. rot.y ..\", z=\".. rot.z ..\"}\\n\"\r\n        text = text .. \"[b]Scale:[/b] {x=\".. scale.x ..\", y=\".. scale.y ..\", z=\".. scale.z ..\"}\"\r\n        \r\n        self.setDescription(text)\r\n    else\r\n        self:setDescription('[b]GUID NOT FOUND[/b]')\r\n    end\r\nend",
              "LuaScriptState": "{\"doRounding\":false}",
              "GUID": "cba920"
            },
            {
              "Name": "Notecard",
              "Transform": {
                "posX": 1.26581645,
                "posY": 2.54729462,
                "posZ": -0.0991246,
                "rotX": 0.00412476249,
                "rotY": 270.021454,
                "rotZ": 359.974548,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "GUID HERE",
              "Description": "Position: \nRotation: \nScale: ",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "",
              "LuaScript": "--OBJECT DETAILS BOARD 2.0\r\nXYZ = {\"x\", \"y\", \"z\"}\r\n\r\nfunction onLoad()\r\n\r\n    local buttonParams = {}\r\n    buttonParams.position = {-0.325, 3, -0.37}\r\n    buttonParams.rotation = {0, 180, 0}\r\n    buttonParams.click_function = \"editObject\"\r\n    buttonParams.function_owner = self\r\n    buttonParams.width = 200\r\n    buttonParams.height = 100\r\n    buttonParams.label = \"Commit\\nChanges\"\r\n    buttonParams.font_size = 40\r\n    \r\n    self:createButton(buttonParams)\r\nend\r\n\r\nfunction copyTable(orig)\r\n    local orig_type = type(orig)\r\n    local copy\r\n    if orig_type == 'table' then\r\n        copy = {}\r\n        for orig_key, orig_value in next, orig, nil do\r\n            copy[copyTable(orig_key)] = copyTable(orig_value)\r\n        end\r\n        setmetatable(copy, copyTable(getmetatable(orig)))\r\n    else -- number, string, boolean, etc\r\n        copy = orig\r\n    end\r\n    return copy\r\nend\r\n\r\nfunction editObject()\r\n    local myName = self:getName()\r\n    \r\n    local objGUIDs = {}\r\n    for x in string.gmatch(myName, \"%w%w%w%w%w%w\") do\r\n        table.insert(objGUIDs, x)\r\n    end\r\n    \r\n    --GET GUIDS FROM TITLE.\r\n    local objects = {}\r\n    for _, v in pairs(objGUIDs) do\r\n        local obj = getObjectFromGUID(v)\r\n        if obj ~= nil then\r\n            table.insert(objects, obj)\r\n        end\r\n    end\r\n    \r\n    if #objects == 0 then return end\r\n    \r\n    local desc = string.lower(self:getDescription())\r\n    \r\n    local posTable = findTable(desc, \"position:\")\r\n    \r\n    if #posTable ~= 0 then\r\n        for _, obj in pairs(objects) do\r\n            local posTableCopy = copyTable(posTable)\r\n            \r\n            for i, v in pairs(posTableCopy) do\r\n                if type(v) == \"table\" then\r\n                    posTableCopy[i] = processVal(obj:getPosition()[XYZ[i]], v[1], v[2])\r\n                end\r\n            end\r\n            \r\n            for i = #posTableCopy + 1, 3 do\r\n                table.insert(posTableCopy, obj:getPosition()[XYZ[i]])\r\n            end\r\n            \r\n            obj:setPosition(posTableCopy)\r\n        end\r\n    end\r\n    \r\n    local rotTable = findTable(desc, \"rotation:\")\r\n    \r\n    if #rotTable ~= 0 then\r\n        for _, obj in pairs(objects) do\r\n            local rotTableCopy = copyTable(rotTable)\r\n            \r\n            for i, v in pairs(rotTableCopy) do\r\n                if type(v) == \"table\" then\r\n                    rotTableCopy[i] = processVal(obj:getRotation()[XYZ[i]], v[1], v[2])\r\n                end\r\n            end\r\n            \r\n            for i = #rotTable + 1, 3 do\r\n                table.insert(rotTableCopy, obj:getRotation()[XYZ[i]])\r\n            end\r\n            obj:setRotation(rotTableCopy)\r\n        end\r\n    end\r\n    \r\n    local scaleTable = findTable(desc, \"scale:\")\r\n    \r\n    if #scaleTable ~= 0 then\r\n        for _, obj in pairs(objects) do\r\n            local scaleTableCopy = copyTable(scaleTable)\r\n        \r\n            for i, v in pairs(scaleTableCopy) do\r\n                if type(v) == \"table\" then\r\n                    scaleTableCopy[i] = processVal(obj:getScale()[XYZ[i]], v[1], v[2])\r\n                end\r\n            end\r\n        \r\n            for i = #scaleTableCopy + 1, 3 do\r\n                table.insert(scaleTableCopy, obj:getScale()[XYZ[i]])\r\n            end\r\n            obj:setScale(scaleTableCopy)\r\n        end\r\n    end\r\n    \r\nend\r\n\r\nfunction processVal(val1, mathFunction, val2)\r\n    if mathFunction == nil or val2 == nil then return val1 end\r\n    \r\n    if mathFunction == \"+\" then\r\n        return val1 + val2\r\n    elseif mathFunction == \"*\" then\r\n        return val1 * val2\r\n    elseif mathFunction == \"/\" then\r\n        return val1 / val2\r\n    elseif mathFunction == \"^\" then\r\n        return val1^val2\r\n    end\r\nend\r\n\r\nfunction findTable(desc, textToMatch)\r\n    local tab = {}\r\n    local pos1, pos2 = string.find(desc, textToMatch)\r\n    if pos2 == nil then return tab end --IF CAN'T FIND, THEN RETURN EMPTY TABLE.\r\n    \r\n    local searchText = desc:sub(pos2+1)\r\n    \r\n    local lineSep = searchText:find(\"\\n\")\r\n    local myText = \"\"\r\n    \r\n    if lineSep ~= nil then\r\n        myText = searchText:sub(1, lineSep-1)\r\n    else\r\n        myText = searchText\r\n    end\r\n    \r\n    --print('myText 1: \"'.. myText ..'\".')\r\n    \r\n    for i = 1, 3 do\r\n        \r\n        local num = string.match(myText, \"([-+]?%d*%.?%d+)\")\r\n        local num1, num2\r\n        \r\n        local hash1, hash2 = string.find(myText, \"#\")\r\n        \r\n        --{#, 3, #}\r\n        --CHECK IF IT'S ADDING OR TAKING FROM CURRENT POS/ROT/SCALE\r\n        if num ~= nil then --IF IT FINDS NUMBER THEN\r\n            num1, num2 = string.find(myText, num) --FIND POSITION OF NUMBER\r\n            if num1-1 == hash2 then --IF HASH IS BEFORE NUMBER (+NUM or -NUM)\r\n                table.insert(tab, {\"+\", tonumber(num)})\r\n                myText = myText:sub(1, hash1-1) .. myText:sub(num2+1)\r\n                goto continue\r\n            elseif num1-2 == hash2 then --IF THERE'S A 1 SPACE GAP, CHECK FOR MATH FUNCTION.\r\n                local mathFunction = myText:sub(num1-1, num1-1)\r\n                if mathFunction == \"*\" or mathFunction == \"/\" or mathFunction == \"^\" then\r\n                    table.insert(tab, {mathFunction, tonumber(num)})\r\n                    myText = myText:sub(1, hash1-1) .. myText:sub(num2+1)\r\n                    goto continue\r\n                end\r\n            end\r\n        end\r\n        \r\n        if (num1 ~= nil and hash1 ~= nil and num1 < hash1) or (hash1 == nil and num1 ~= nil) then\r\n            table.insert(tab, tonumber(num))\r\n            myText = myText:sub(1, num1-1) .. myText:sub(num2+1)\r\n        elseif (hash1 ~= nil and num1 ~= nil and hash1 < num1) or (num1 == nil and hash1 ~= nil) then\r\n            --table.insert(tab, object:getPosition()[XYZ[i]])\r\n            table.insert(tab, {})\r\n            myText = myText:sub(1, hash1-1) .. myText:sub(hash2+1)\r\n        else\r\n            break\r\n        end\r\n        ::continue::\r\n    end\r\n    \r\n    --print('myText 2: \"'.. myText ..'\".\\n')\r\n    \r\n    return tab\r\nend",
              "LuaScriptState": "",
              "GUID": "9626a1"
            }
          ],
          "GUID": "c8f75b"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 61.4906158,
            "posY": 2.27338767,
            "posZ": 2.94101357,
            "rotX": -4.7305835E-07,
            "rotY": 150.000641,
            "rotZ": 7.922555E-07,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Couter",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 45.7498932,
                "posY": 2.49991536,
                "posZ": -4.749704,
                "rotX": 359.981323,
                "rotY": 180.000839,
                "rotZ": 359.9906,
                "scaleX": 0.5,
                "scaleY": 1.0,
                "scaleZ": 0.5
              },
              "Nickname": "Pool",
              "Description": "Left click - Increase\nRight click - Decrease",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.199999839,
                "g": 0.199999839,
                "b": 0.8
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463059274/DE73B64E1B5C6F272EA3BEE5EF458E73E48FF03D/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 5.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "MIN_VALUE = -99\r\nMAX_VALUE = 999\r\n\r\nfunction onload(saved_data)\r\n    light_mode = false\r\n    tooltip_show = true\r\n    val = 0\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        val = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, val, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0.6,0,0,100}\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.createButton({\r\n      label=tostring(val),\r\n      click_function=\"add_subtract\",\r\n      tooltip=ttText,\r\n      function_owner=self,\r\n      position={0,0.05,-0.4},\r\n      height=600,\r\n      width=600,\r\n      alignment = 3,\r\n      scale={x=1.5, y=1.5, z=1.5},\r\n      font_size=800,\r\n      font_color=f_color,\r\n      color={0,0,0,0}\r\n      })\r\n\r\n    self.createInput({\r\n        value = self.getName(),\r\n        input_function = \"editName\",\r\n        tooltip=ttText,\r\n        label = \"Counter\",\r\n        function_owner = self,\r\n        alignment = 3,\r\n        position = {0,0.05,1.5},\r\n        width = 1200,\r\n        height = 1000,\r\n        font_size = 300,\r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide value in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show value in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.2},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.6},\r\n        rotation={180,180,0},\r\n        height=150,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=150,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n\r\n    self.createButton({\r\n        label=\"[ Reset ]\",\r\n        tooltip=\"[ Reset ]\",\r\n        click_function=\"reset_val\",\r\n        function_owner=self,\r\n        position={0,-0.05,1.4},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=250,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"#\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\",\r\n        function_owner = self,\r\n        alignment = 3,\r\n        position={0,-0.05,-0.8},\r\n        rotation={180,180,0},\r\n        width = 600,\r\n        height = 800,\r\n        font_size = 1200,\r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value)\r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction add_subtract(_obj, _color, alt_click)\r\n    mod = alt_click and 1 or -1\r\n    new_value = math.min(math.max(val + mod, MIN_VALUE), MAX_VALUE)\r\n    if val ~= new_value then\r\n        val = new_value\r\n        updateVal()\r\n        updateSave()\r\n    end\r\nend\r\n\r\nfunction updateVal()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editButton({\r\n        index = 0,\r\n        label = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction reset_val()\r\n    val = 0\r\n    updateVal()\r\n    updateSave()\r\nend\r\n\r\nfunction setTooltips()\r\n    if tooltip_show then\r\n        ttText = \"     \" .. val .. \"\\n\" .. self.getName()\r\n    else\r\n        ttText = self.getName()\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editButton({\r\n        index = 0,\r\n        value = tostring(val),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value)\r\n    reloadAll()\r\nend\r\n",
              "LuaScriptState": "[true,5,true]",
              "GUID": "9acd5b"
            }
          ],
          "GUID": "b116b3"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 239.121735,
            "posY": 22.5887928,
            "posZ": 141.740585,
            "rotX": 0.0135093182,
            "rotY": 180.033569,
            "rotZ": -0.0009691079,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Camers",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/852720752183911384/4CA6B3300F98EEA123CC135F8BE72A02F303AED9/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/852720752183912963/A41B857951944D7613A4D75817523E1FFFB57117/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 2,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 208.4625,
                "posY": 27.19808,
                "posZ": 111.860161,
                "rotX": 0.0137962848,
                "rotY": 180.007217,
                "rotZ": -0.000922063249,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "See tooltips to see what values and buttons do",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://cdn.shopify.com/s/files/1/0185/5092/products/objects-0022.png?v=1369543741",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.2,
                  "MergeDistancePixels": 21.222229,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "local triggerIndex = 1 -- Which scripting button will trigger zoom-in\r\nlocal zoomAmount = 5\r\nlocal pitchAngle = 80\r\nlocal rotate = false\r\nlocal targetGUID = \"000000\"\r\nlocal lockedTargetGUID = \"none\"\r\n\r\nfunction onLoad(save_state)\r\n    self.createInput({\r\n        function_owner = self,\r\n        input_function = \"setShortcutKey\",\r\n        label = \"Shortcut Key\",\r\n        tooltip = \"Shortcut Key\\n(number only)\",\r\n        value = 1,\r\n        position = {0.1, 0.1, 0.3},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 800,\r\n        height = 700,\r\n        font_size = 600,\r\n        alignment = 3\r\n    })\r\n\r\n    self.createInput({\r\n        function_owner = self,\r\n        input_function = \"setPitchAngle\",\r\n        label = \"Pitch\",\r\n        tooltip = \"Pitch angle\\n(the higher, the more top-down the angle. Up to 90)\",\r\n        value = 80,\r\n        position = {-0.5, 0.1, -0.8},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 800,\r\n        height = 700,\r\n        font_size = 600,\r\n        alignment = 3,\r\n        validation = 3\r\n    })\r\n\r\n    self.createInput({\r\n        function_owner = self,\r\n        input_function = \"setZoom\",\r\n        label = \"Zoom\",\r\n        tooltip = \"Zoom amount\\n(the higher, the further away from the object)\",\r\n        value = 5,\r\n        position = {0.9, 0.1, -0.8},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 800,\r\n        height = 700,\r\n        font_size = 600,\r\n        alignment = 3,\r\n        validation = 3\r\n    })\r\n\r\n    self.createButton({\r\n        click_function = \"toggleRotate\",\r\n        function_owner = self,\r\n        label = \"↑\",\r\n        position = {1.4, 0.1, 0.6},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 500,\r\n        height = 1000,\r\n        font_size = 800,\r\n        --color = {0.1311, 0.8554, 0.1117, 1},\r\n        tooltip = \"Click to turn camera rotation on/off\"\r\n    })\r\n\r\n    self.createInput({\r\n        input_function = \"typeGUID\",\r\n        function_owner = self,\r\n        label = \"GUID\",\r\n        tooltip = \"Enter the GUID of the object or drop on top of object to get its GUID\",\r\n        position = {-2.3, 0.1, 0.4},\r\n        rotation = {0, 90, 0},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 1350,\r\n        height = 500,\r\n        font_size = 400,\r\n        alignment = 3,\r\n        validation = 4\r\n    })\r\n\r\n    self.createButton({\r\n        click_function = \"lockGUID\",\r\n        function_owner = self,\r\n        label = \"↲\",\r\n        tooltip = \"Make camera hover that object, instead of what's under your mouse\",\r\n        position = {-2.3, 0.1, 1.4},\r\n        rotation = {0, 90, 0},\r\n        scale = {0.5, 0.5, 0.5},\r\n        width = 400,\r\n        height = 500,\r\n        font_size = 400,\r\n        alignment = 3\r\n    })\r\nend\r\n\r\nfunction typeGUID(obj, color, guid)\r\n    targetGUID = guid\r\nend\r\n\r\nfunction setShortcutKey(obj, player, value)\r\n    triggerIndex = tonumber(value)\r\nend\r\n\r\nfunction setPitchAngle(obj, player, value)\r\n    pitchAngle = tonumber(value)\r\nend\r\n\r\nfunction setZoom(obj, player, value)\r\n    zoomAmount = tonumber(value)\r\nend\r\n\r\nfunction toggleRotate(obj, player)\r\n    if rotate then\r\n        self.editButton({\r\n            index = 0,\r\n            label = \"↑\"\r\n            --color = {0.8549, 0.1098, 0.1098, 1}\r\n        })\r\n        rotate = false\r\n    else\r\n        self.editButton({\r\n            index = 0,\r\n            label = \"↓\"\r\n            --color = {0.1311, 0.8554, 0.1117, 1}\r\n        })\r\n        rotate = true\r\n    end\r\nend\r\n\r\nfunction onScriptingButtonDown(pressedIndex, playerColor)\r\n    if playerColor == 'Grey' or pressedIndex ~= triggerIndex then\r\n        return -- Return if invalid player or wrong button clicked\r\n    end\r\n\r\n    local obj\r\n    if lockedTargetGUID == \"none\" then --if not aiming at an object\r\n        obj = Player[playerColor].getHoverObject()\r\n    else\r\n        obj = getObjectFromGUID(lockedTargetGUID)\r\n    end\r\n    if not obj then-- Return if no hover object\r\n        return\r\n    end\r\n\r\n    if rotate then\r\n        Player[playerColor].lookAt({-- Focus camera on the hover object\r\n            position = obj.getPosition(),\r\n            yaw = obj.getRotation().y + 180,\r\n            pitch = pitchAngle,\r\n            distance = zoomAmount\r\n        })\r\n    else\r\n        Player[playerColor].lookAt({-- Focus camera on the hover object\r\n            position = obj.getPosition(),\r\n            pitch = pitchAngle,\r\n            yaw = obj.getRotation().y,\r\n            distance = zoomAmount\r\n        })\r\n    end\r\nend\r\n\r\nfunction lockGUID(obj, color)\r\n    --check that it's a GUID\r\n    if string.sub(targetGUID,-string.len('\\n')) ~= '\\n' then\r\n        local trueGUID = string.sub(targetGUID,0,6)\r\n        if getObjectFromGUID(trueGUID) ~= nil and getObjectFromGUID(trueGUID) ~= self then\r\n            self.editButton({\r\n                index = 1,\r\n                label = \"X\",\r\n                color = stringColorToRGB(\"Red\"),\r\n                click_function = \"clearTarget\",\r\n                tooltip = \"Click to go back to looking at what is under your mouse\"\r\n            })\r\n            self.createButton({\r\n                click_function = \"nothing\",\r\n                function_owner = self,\r\n                label = \"Locked\",\r\n                position = {-3, 0.1, 0.6},\r\n                rotation = {0, 90, 0},\r\n                scale = {0.5, 0.5, 0.5},\r\n                width = 0,\r\n                height = 500,\r\n                font_size = 600,\r\n                font_color = {1, 1, 1, 1},\r\n                alignment = 3\r\n            })\r\n            lockedTargetGUID = trueGUID\r\n        else\r\n            broadcastToColor(\"Error: This is not a valid GUID\", color, stringColorToRGB(\"Red\"))\r\n        end\r\n    end\r\nend\r\n\r\nfunction clearTarget(obj, color)\r\n    lockedTargetGUID = \"none\"\r\n    self.editButton({\r\n        index = 1,\r\n        click_function = \"lockGUID\",\r\n        label = \"↲\",\r\n        tooltip = \"Make camera hover that object, instead of what's under your mouse\",\r\n        color = stringColorToRGB(\"White\")\r\n    })\r\n    self.editInput({\r\n        index = 3,\r\n        value = \"\",\r\n    })\r\n    self.removeButton(2)\r\nend\r\n\r\nfunction onCollisionEnter(collision_info)\r\n    -- collision_info table:\r\n    --   collision_object    Object\r\n    --   contact_points      Table     {Vector, ...}\r\n    --   relative_velocity   Vector\r\n    if collision_info.collision_object == nil\r\n    or collision_info.collision_object == self\r\n    or collision_info.collision_object.getGUID() == nil\r\n    or collision_info.collision_object.tag == \"Surface\"\r\n    or objectLoaded\r\n    then\r\n        return\r\n    end\r\n    targetGUID = collision_info.collision_object.getGUID()\r\n    self.editInput({\r\n        index = 3,\r\n        value = targetGUID,\r\n    })\r\nend\r\n\r\nfunction nothing(obj, color)\r\n\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "81ed2d"
            }
          ],
          "GUID": "743c74"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 9.523256,
            "posY": 2.273388,
            "posZ": -0.04933742,
            "rotX": 2.76734227E-06,
            "rotY": 150.000916,
            "rotZ": -2.62664184E-06,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Bags",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Bag",
              "Transform": {
                "posX": -4.730452,
                "posY": 2.29986238,
                "posZ": -8.984231,
                "rotX": 0.207778737,
                "rotY": 180.0281,
                "rotZ": 0.130334288,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "relativ Bag",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.7058823,
                "g": 0.366520882,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "XmlUI": "",
              "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local selfPos = self.getPosition()\r\n        local objPos = obj.getPosition()\r\n        local deltaPos = {}\r\n        deltaPos.x = (objPos.x-selfPos.x)\r\n        deltaPos.y = (objPos.y-selfPos.y)\r\n        deltaPos.z = (objPos.z-selfPos.z)\r\n        local pos, rot = deltaPos, obj.getRotation()\r\n\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        local selfPos = self.getPosition()\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            local deltaPos = compare_coords(selfPos, entry.pos, false)\r\n            obj.setPositionSmooth(deltaPos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local deltaPos = compare_coords(selfPos, entry.pos, false)\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=deltaPos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n          self.putObject(obj)\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n--Compares points p1 and p2. If substract is true, it returns p1 - p2. Otherwise, p1 + p2.\r\nfunction compare_coords(p1, p2, subtract)\r\n    local deltaPos = {}\r\n    if subtract then\r\n        deltaPos.x = (p1.x-p2.x)\r\n        deltaPos.y = (p1.y-p2.y)\r\n        deltaPos.z = (p1.z-p2.z)\r\n    else\r\n        deltaPos.x = (p1.x+p2.x)\r\n        deltaPos.y = (p1.y+p2.y)\r\n        deltaPos.z = (p1.z+p2.z)\r\n    end\r\n    return deltaPos\r\nend\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"0347c7\":{\"lock\":false,\"pos\":{\"x\":3.3723,\"y\":0.3993,\"z\":7.3042},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"3e31be\":{\"lock\":false,\"pos\":{\"x\":-5.483,\"y\":0.685,\"z\":3.0559},\"rot\":{\"x\":0,\"y\":359.9907,\"z\":0}},\"8a9692\":{\"lock\":false,\"pos\":{\"x\":9.4129,\"y\":0.685,\"z\":4.5938},\"rot\":{\"x\":0,\"y\":0.001,\"z\":0}}}}",
              "GUID": "d14543"
            },
            {
              "Name": "Bag",
              "Transform": {
                "posX": -5.26423359,
                "posY": 2.3025403,
                "posZ": -7.363407,
                "rotX": 0.00105566252,
                "rotY": 29.998003,
                "rotZ": -1.767552E-06,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Packup BAG",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.7058823,
                "g": 0.366520882,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "XmlUI": "",
              "LuaScript": "packupZone = '0838b1' -- change this to the GUID of your own script packupZone\r\nadditive = true -- This will disable the save system, allowing you to setup a bag, and then next time you pack up it will only pick up what it already has saved before.\r\nUseBagNameAsButtonName = false\r\n\r\n--These are the \"ignore lists\" put in here anything you do not want to be packed up.\r\n--You can leave these blank... if you do just make the '= {}'\r\n\r\n-- Use general utem Tags here.\r\nignoreTAG  = {'Deck',}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreNAME = {'Doorway', 'NPC',}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreDESC = {'Burnded Location', 'Searched Location',}\r\n\r\n-- Ignore by GUID\r\nignoreGUID = {'01bb90', '4b8ae3',}\r\n\r\n-- Some Objects you may want to force to be included in apack up, even if outside the script zone.. just place the GUID here.\r\nforceGUID = {'502d13', '073d87',}\r\n\r\n--Runs whenever game is saved/autosaved\r\nfunction onSave()\r\n --Begin State Managment of Saving Object Data.\r\n --Create GUID list fomr Object List\r\n    if tableSize(memoryData) == 0 then saved_data = \"\" return saved_data\r\n    else\r\n        local data_to_save = { md=memoryData }\r\n        saved_data = JSON.encode(data_to_save)\r\n        --saved_data = \"\" --Remove -- at start + save to clear save data\r\n       return saved_data end\r\n\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryData = loaded_data.md\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryData = {}\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction SetButtonName()\r\n    if UseBagNameAsButtonName then\r\n        PlaceText = self.getName()\r\n        PlaceWidth = string.len(PlaceText)*200\r\n        PlaceHeight = 450\r\n        Scale = {1.6,1.6,1.6}\r\n    else\r\n        PlaceText = 'Place'\r\n        PlaceWidth = 1000\r\n        PlaceHeight = 450\r\n        Scale = {1.6,1.6,1.6}\r\n    end\r\n    self.clearButtons()\r\n    makeButtons()\r\nend\r\n\r\nfunction createSaveData(obj)\r\n    local objData = {position = tableCullNumericIndexes(obj.getPosition()),\r\n                     rotation = tableCullNumericIndexes(obj.getRotation()),\r\n                     guid = obj.getGUID(),\r\n                     lock = obj.getLock(),\r\n                     interactable = tostring(obj.interactable),\r\n                     tooltip = tostring(obj.tooltip)}\r\n\r\n    memoryData[objData.guid] = objData\r\nend\r\n\r\nfunction placeStuff()\r\n    local prams = {}\r\n    for key, entry in pairs(memoryData) do\r\n        prams.guid = key\r\n        prams.position = {entry.position.x, entry.position.y, entry.position.z}\r\n        prams.rotation = {entry.rotation.x, entry.rotation.y, entry.rotation.z}\r\n        local item = self.takeObject(prams)\r\n\r\n        if entry.lock == true then\r\n        item.setPositionSmooth({entry.position.x, entry.position.y, entry.position.z}, false, true)\r\n        item.setRotationSmooth({entry.rotation.x, entry.rotation.y, entry.rotation.z}, false, true)\r\n        item.setLock(entry.lock) end\r\n\r\n        if entry.tooltip == 'false' then item.tooltip = false end\r\n        if entry.interactable == 'false' then item.interactable = false end\r\n\r\n    end\r\n    if additive == true then memoryData = {} end\r\n    SetButtonName()\r\nend\r\n\r\n\r\nfunction pickupStuff()\r\n\r\n    if additive == true then\r\n         -- Grab FORCED objects\r\n        for _, obj in ipairs(forceGUID) do\r\n            createSaveData(getObjectFromGUID(obj))\r\n            self.putObject(getObjectFromGUID(obj)) end\r\n         -- Grab All Objects in Zone\r\n        for _, obj in ipairs(getObjectFromGUID(packupZone).getObjects()) do\r\n            local add = true\r\n            for _, list in ipairs(ignoreTAG) do if obj.tag == list then add = false end end\r\n            for _, list in ipairs(ignoreNAME) do if obj.getName() == list then add = false end end\r\n            for _, list in ipairs(ignoreDESC) do if obj.getDescription() == list then add = false end end\r\n            for _, list in ipairs(ignoreGUID) do if obj.getGUID() == list then add = false end end\r\n            if add == true then\r\n                createSaveData(obj)\r\n                self.putObject(obj)\r\n            end\r\n            add = true\r\n        end\r\n    end\r\n\r\n    if additive == false then\r\n        for key, entry in pairs(memoryData) do\r\n            self.putObject(getObjectFromGUID(key))\r\n        end\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction tableSize(t)\r\n    local count = 0\r\n    for key,value in pairs(t) do count = count + 1 end\r\n    return count\r\nend\r\n\r\nfunction tableCullNumericIndexes(t)\r\n    for i in pairs(t) do\r\n        if type(i) == \"number\" then\r\n            table.remove(t, i)\r\n            return tableCullNumericIndexes(t)\r\n        end\r\n    end\r\n    return t\r\nend\r\n\r\nfunction makeButtons(set)\r\n    local buttons = {}\r\n\r\n -- DEFAULT START BUTTONS\r\n    if set == nil then\r\n        button_Place = {\r\n                click_function = 'placeStuff',\r\n                function_owner = self,\r\n                label = PlaceText,\r\n                position = {0, 0.5, -2},\r\n                rotation = {0, 180, 0},\r\n                width = PlaceWidth,\r\n                height = PlaceHeight,\r\n                scale = Scale,\r\n                font_size = 250,\r\n                color={0,0,0},\r\n                font_color={1,1,1}}\r\n        table.insert(buttons, button_Place)\r\n\r\n        button_PickUp = {\r\n            click_function = 'pickupStuff',\r\n            function_owner = self,\r\n            label = 'Pack Up',\r\n            position = {-2.2, 0.5, 0.5},\r\n            rotation = {0, -90, 0},\r\n            width = 1200,\r\n            height = 500,\r\n            font_size = 250,\r\n            scale = {1.3,1.3,1.3},\r\n            color={0,0,0},\r\n            font_color={1,1,1}}\r\n        table.insert(buttons, button_PickUp) end\r\n -- Create Buttons\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "ec2006"
            }
          ],
          "GUID": "c2b71a"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -4.000027,
            "posY": 2.57835722,
            "posZ": 16.0000324,
            "rotX": -0.000694159,
            "rotY": 210.0027,
            "rotZ": -0.00235584774,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Buttons",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": 12.6176367,
                "posY": 3.42377877,
                "posZ": 2.13322616,
                "rotX": 358.911377,
                "rotY": 125.723976,
                "rotZ": 88.13284,
                "scaleX": 0.950000048,
                "scaleY": 0.950000048,
                "scaleZ": 0.950000048
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.018586874,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/854978386866114925/A8093F7A448A137FDBB8297A3D8A61D0B0EA5112/",
                "AssetbundleSecondaryURL": "",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "XmlUI": "",
              "LuaScript": "function onload()\r\n  -- clickable area\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=700, width=700, color={1,1,1,0}, label=\"\"\r\n  })\r\n  -- button label\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=1, width=1, color={1,1,1,1}, label=\"US\", font_size=200\r\n  })\r\nend\r\n\r\nfunction click()\r\n  self.AssetBundle.playTriggerEffect(0)\r\n  print(\"These buttons\")\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "4405c6"
            },
            {
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": 13.09184,
                "posY": 3.60057,
                "posZ": 2.86293149,
                "rotX": 5.3744,
                "rotY": 290.555481,
                "rotZ": 93.44922,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 0.802974,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/854978386866114925/A8093F7A448A137FDBB8297A3D8A61D0B0EA5112/",
                "AssetbundleSecondaryURL": "",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "XmlUI": "",
              "LuaScript": "function onload()\r\n  -- clickable area\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=700, width=700, color={1,1,1,0}, label=\"\"\r\n  })\r\n  -- button label\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=1, width=1, color={1,1,1,1}, label=\"THANKS\", font_size=200\r\n  })\r\nend\r\n\r\nfunction click()\r\n  self.AssetBundle.playTriggerEffect(0)\r\n  print(\"cool!\")\r\nend",
              "LuaScriptState": "",
              "GUID": "0e63cb"
            },
            {
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": 13.301384,
                "posY": 3.53816557,
                "posZ": 2.40392947,
                "rotX": 355.970184,
                "rotY": 289.990265,
                "rotZ": 273.4436,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.8550184,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/854978386866114925/A8093F7A448A137FDBB8297A3D8A61D0B0EA5112/",
                "AssetbundleSecondaryURL": "",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "XmlUI": "",
              "LuaScript": "function onload()\r\n  -- clickable area\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=700, width=700, color={1,1,1,0}, label=\"\"\r\n  })\r\n  -- button label\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=1, width=1, color={1,1,1,1}, label=\"CLICK\", font_size=200\r\n  })\r\nend\r\n\r\nfunction click()\r\n  self.AssetBundle.playTriggerEffect(0)\r\n  print(\"Wow!\")\r\nend",
              "LuaScriptState": "",
              "GUID": "78b2b4"
            },
            {
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": 13.082057,
                "posY": 3.58526874,
                "posZ": 2.2290647,
                "rotX": 5.78842735,
                "rotY": 125.498878,
                "rotZ": 267.975647,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.594795167,
                "g": 0.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/854978386866114925/A8093F7A448A137FDBB8297A3D8A61D0B0EA5112/",
                "AssetbundleSecondaryURL": "",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "XmlUI": "",
              "LuaScript": "function onload()\r\n  -- clickable area\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=700, width=700, color={1,1,1,0}, label=\"\"\r\n  })\r\n  -- button label\r\n  self.createButton({\r\n      click_function=\"click\", function_owner=self,\r\n      position={0, 0.2, 0}, height=1, width=1, color={1,1,1,1}, label=\"PLEASE\", font_size=200\r\n  })\r\nend\r\n\r\nfunction click()\r\n  self.AssetBundle.playTriggerEffect(0)\r\n  print(\"are really\")\r\nend",
              "LuaScriptState": "",
              "GUID": "d82b9a"
            }
          ],
          "GUID": "306861"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 11.3679581,
            "posY": 3.73754573,
            "posZ": -11.0264559,
            "rotX": 0.00518983742,
            "rotY": 180.033722,
            "rotZ": 0.00296180928,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Replicator",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.117997564,
            "g": 0.53,
            "b": 1.0
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/852720752183911384/4CA6B3300F98EEA123CC135F8BE72A02F303AED9/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/852720752183912963/A41B857951944D7613A4D75817523E1FFFB57117/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 2,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 25.7561989,
                "posY": 3.529226,
                "posZ": -13.0157948,
                "rotX": 359.9892,
                "rotY": 180.012833,
                "rotZ": 0.00336569734,
                "scaleX": 3.0,
                "scaleY": 1.0,
                "scaleZ": 3.0
              },
              "Nickname": "Replicator index",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/VHhNC2O.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 0,
                  "Thickness": 0.2,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "XmlUI": "",
              "LuaScript": "page = 8\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"Index\", index = 0, function_owner = self, label = \"index\", position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 140, font_color={1,1,1,1}, tooltip = \"Page 8\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() self.setState(page-1) end\r\nfunction pageup() self.setState(1) end\r\n\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"pg1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Modules\"})\r\nself.createButton({click_function = \"pg2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Tokens\"})\r\nself.createButton({click_function = \"pg3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Setup\"})\r\nself.createButton({click_function = \"pg4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Minis 1\"})\r\nself.createButton({click_function = \"pg5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Minis 2\"})\r\nself.createButton({click_function = \"pg6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Minis Beastmen\"})\r\nself.createButton({click_function = \"pg7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Ships\"})\r\n--self.createButton({click_function = \"pg8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Mine\"})\r\n--self.createButton({click_function = \"pg9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Missile\"})\r\n--self.createButton({click_function = \"pg10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Science\"})\r\n--self.createButton({click_function = \"pg11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Med\"})\r\n--self.createButton({click_function = \"pg12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Teleport\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\nfunction pg1() self.setState(1) end\r\nfunction pg2() self.setState(2) end\r\nfunction pg3() self.setState(3) end\r\nfunction pg4() self.setState(4) end\r\nfunction pg5() self.setState(5) end\r\nfunction pg6() self.setState(6) end\r\nfunction pg7() self.setState(7) end",
              "LuaScriptState": "",
              "GUID": "cb8404",
              "States": {
                "1": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532789,
                    "posY": 0.960000753,
                    "posZ": -2.64725184,
                    "rotX": 9.187782E-07,
                    "rotY": 180.012833,
                    "rotZ": 3.162734E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg1",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/zrU8QDf.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 1\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() self.setState(maxpage) end\r\nfunction pageup() self.setState(page+1) end\r\n\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Cannon\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Cargo\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Cloak\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Engine\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Helm\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"HD\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"LS\"})\r\nself.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Mine\"})\r\nself.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Missile\"})\r\nself.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Science\"})\r\nself.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Med\"})\r\nself.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Teleport\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\n\r\n\r\nfunction spawn1() --Cannon\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091420328/A92177A10BAB2109AF126C40A9026731046FFF32/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471228723/AAD0A75AD9780E06B715041F5B8360E7F8CCBE89/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn2() --Cargo\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091454330/B552290D117AA6CE63B6E2C24900AB469B870856/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471390738/7F2383D6F02B9C843A4C6731749D31FBFCB49633/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn3() --Cloak\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091455632/20E25CEF02196CB60DFF8B442970F0FDADABB920/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471395095/8A73ADEF82F539105B2957518080586158033C5F/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn4() --Engine\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091457057/53E106C0939DBF2D37D6F1400FD9909B487D3C9D/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471386389/34FB0EE81672837B7E4F79F7833D33FD76C9F15C/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn5() --Helm\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091457803/07B16B14B1F1EF262C9DEBAF6E17A803BACA8227/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471389243/CC2D87E3B281738982AF45CE7A35490EEE141F37/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn6() --HD\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091458738/0243B4FEC450BC4F58F05CCBF97422A6DF059191/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471397920/822043512980E7B38EB98F73A76D403B976190C9/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn7() --LS\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091459536/3A443A26CF01E70ADF52A1E190BCB62CBBC134CA/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471391584/898C589986BA24221DD57863CE82F5058095E5B1/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn8() --Mine\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091460615/0537D9275A6966D5F6E5A55BFF46B1ABCCC7129C/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471388153/F5EC78D15669B5937734D3887294BE346DF583D8/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn9() --Missile\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091461753/87BA03C8706EE42A60C7CA1B0A6F3EAC4944EE4F/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471385213/CEF136F57799705F7F1BABFF12EF328BF19F58E1/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn10() --Science\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091462679/0FFAB7ECE030B2F58C7E9AC85008B99F4D1D781E/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471421036/BA1C949EFAAFD85C77D0213DA8840DA66AE6E998/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn11() --Sickbay\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091463602/9930E16CC4CB72D8C45ACA2354C61AB25F8A8A34/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471393591/AFA549EF873635C5D0B1D5E24939745DF538223F/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn12() --Teleporter\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2.48, y=1, z=2.48},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"http://cloud-3.steamusercontent.com/ugc/957479782091464226/BEEBA5B6D99C1C21ADFD72AAF09F51F1AA34F1EB/\",\r\n    image_bottom = \"http://cloud-3.steamusercontent.com/ugc/956354469471396245/802720959C577A4B87AE9ABC21572A95C024657D/\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "d815a4"
                },
                "2": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.507333E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg2",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/NxO52VV.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 2\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page) self.setState(page+1) end\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Used\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Damage\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Configure\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Program\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prepare\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Overwatch\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fire\"})\r\nself.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Upgrade\"})\r\nself.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fighter\"})\r\nself.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Mine\"})\r\nself.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Star\"})\r\nself.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Planet adw\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\n\r\nfunction spawn1() --used\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/kxD7CdS.png\",\r\n    image_bottom = \"https://i.imgur.com/2A7ipod.png\",\r\n    type = 3,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setName(\"Used\")\r\nend\r\n\r\n\r\nfunction spawn2() --damaged\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/y9AyKj2.png\",\r\n    type = 3,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({1,0,0,1})\r\nend\r\n\r\n\r\nfunction spawn3() --configuration\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/PmCmQfl.png\",\r\n    image_bottom = \"https://i.imgur.com/PpOLnR5.png\",\r\n    type = 3,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.4,0.4,1,1})\r\nend\r\n\r\n\r\nfunction spawn4() --Program\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/D5BFVjB.png\",\r\n    --image_bottom = \"https://i.imgur.com/PpOLnR5.png\",\r\n    type = 3,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.2,1,0.2,1})\r\nend\r\n\r\n\r\nfunction spawn5() --Prepare\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/pzMaLiw.png\",\r\n    image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 1,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.6,0.6,0.6,1})\r\nend\r\n\r\n\r\nfunction spawn6() --Overwatch\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/Gtqpn3g.png\",\r\n    --image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 1,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.6,0.6,0.6,1})\r\nend\r\n\r\n\r\nfunction spawn7() --fire\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Assetbundle',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=0.1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    assetbundle = \"https://drive.google.com/uc?export=download&id=0BxvLXJFgtJJ8dnZYOHE2SnJOX1k\",\r\n    --image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 0,\r\n    material = 1,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.AssetBundle.playLoopingEffect(2)\r\nend\r\n\r\nfunction spawn8() --Upgrade\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=0.5, y=1, z=0.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/pQDUSES.png\",\r\n    --image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 2,\r\n    thickness = 0.2,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.4,0.4,1,1})\r\nend\r\n\r\n\r\nfunction spawn9() --fighter\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+3,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1.5, y=1, z=1.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/1004771069904331659/5966B9333DB1B23272F7F5C736C23ED144D7F8A5/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({1,0.4,0.4,1})\r\nend\r\n\r\n\r\nfunction spawn10() --mine\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+2,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1.5, y=1.5, z=1.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/1004771069915424703/6CA08E37CDACE1EF17888D179C17D304292723DA/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint({0.4,0.4,1,1})\r\nend\r\n\r\n\r\nfunction spawn11() --star\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Assetbundle',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    assetbundle = \"http://cloud-3.steamusercontent.com/ugc/967615741397066906/7B9E1FFE605F5A29900BE050D26DEEEFAD956D85/\",\r\n    --image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 0,\r\n    material = 1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn12() --planet earth\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Assetbundle',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    assetbundle = \"http://cloud-3.steamusercontent.com/ugc/967615741397119040/FF211AC4C317DFDE919F0ADF1FC4A53AD6F2F98E/\",\r\n    --image_bottom = \"https://i.imgur.com/HOWDmld.png\",\r\n    type = 0,\r\n    material = 1,\r\n  }\r\n  object.setCustomObject(params)\r\nend",
                  "LuaScriptState": "",
                  "GUID": "4c2d12"
                },
                "3": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.5073338E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg3",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": false,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/qfWWNDf.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 3\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page)\r\n  if page == maxpage then self.setState(1) else self.setState(page+1) end\r\nend\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Space board 1 (no snap)\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Space board 2 (no snap)\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Asteroid board - sparse (no snap)\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Asteroid board - dense (no snap)\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Double space board (no snap)\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Plot Twists\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"not working yet\"})\r\nself.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"not working yet\"})\r\nself.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"basic pregens\"})\r\nself.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"special abilities (unsearchable)\"})\r\nself.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"race stats\"})\r\nself.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"equipment\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\n\r\nfunction spawn1() --Space board 1\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x,pos.y+1,pos.z+10},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=5.5, y=1, z=5.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/SNGlJpn.jpg\",\r\n    image_bottom = \"https://i.imgur.com/hkOVYE8.jpg\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn2()  --Space board 2\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x,pos.y+1,pos.z+10},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=5.5, y=1, z=5.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/4mOcJPL.png\",\r\n    image_bottom = \"https://i.imgur.com/TGzzm10.png\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn3() --asteroid board sparse\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x,pos.y+1,pos.z+10},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=5.5, y=1, z=5.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/IlFHgce.png\",\r\n    image_bottom = \"https://i.imgur.com/s0xT6VR.png\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn4() --asteroid board sparse\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x,pos.y+1,pos.z+10},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=5.5, y=1, z=5.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/Tc2SBhq.png\",\r\n    image_bottom = \"https://i.imgur.com/eOS9wml.png\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn5() --space board double\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Tile',\r\n    position          = {pos.x+5,pos.y+1,pos.z+10},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=5.5, y=1, z=5.5},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    image = \"https://i.imgur.com/driKbkV.jpg\",\r\n    image_bottom = \"https://i.imgur.com/TErlyWu.jpg\",\r\n    type = 0,\r\n    thickness = 0.1,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn6() --plot twist deck\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2, y=1, z=2},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/I5ZCQjm.jpg\",\r\n    back = \"http://i.imgur.com/Q4Z3vCU.png\",\r\n    width = 10,\r\n    height = 7,\r\n    number = 64,\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn7() --notecard\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2, y=1, z=2},\r\n  }\r\n--  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/I5ZCQjm.jpg\",\r\n    back = \"http://i.imgur.com/Q4Z3vCU.png\",\r\n    width = 10,\r\n    height = 7,\r\n    number = 64,\r\n  }\r\n--  object.setCustomObject(params)\r\nend\r\n\r\nfunction spawn8() --character sheet\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=2, y=1, z=2},\r\n  }\r\n  --object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/I5ZCQjm.jpg\",\r\n    back = \"http://i.imgur.com/Q4Z3vCU.png\",\r\n    width = 10,\r\n    height = 7,\r\n    number = 64,\r\n  }\r\n  --object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn9() --pregen deck\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/jkjkT8I.jpg\",\r\n    unique_back = true,\r\n    back = \"https://i.imgur.com/6jZrKq3.jpg\",\r\n    width = 7,\r\n    height = 7,\r\n    number = 44,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn10() --ability deck\r\n  pos = self.getPosition()\r\n  --deck 1 of 3 'z'\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,180},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/tw6GRgO.jpg\",\r\n    unique_back = true,\r\n    back = \"https://i.imgur.com/tw6GRgO.jpg\",\r\n    width = 8,\r\n    height = 7,\r\n    number = 32,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\n  --deck 2 of 3 'mid'\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+2,pos.z},\r\n    rotation          = {0,180,180},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/geYFbnw.jpg\",\r\n    unique_back = true,\r\n    back = \"https://i.imgur.com/geYFbnw.jpg\",\r\n    width = 8,\r\n    height = 7,\r\n    number = 55,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\n  --deck 3 of 3 'a'\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+3,pos.z},\r\n    rotation          = {0,180,180},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/vgrdvB5.jpg\",\r\n    unique_back = true,\r\n    back = \"https://i.imgur.com/vgrdvB5.jpg\",\r\n    width = 8,\r\n    height = 7,\r\n    number = 55,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn11() --race deck\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,180},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/Et3xXai.png\",\r\n    unique_back = true,\r\n    back = \"https://i.imgur.com/Et3xXai.png\",\r\n    width = 7,\r\n    height = 4,\r\n    number = 26,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n\r\n\r\nfunction spawn12() --equip deck\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'DeckCustom',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,180},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    face = \"https://i.imgur.com/TqVkdYi.png\",\r\n    --unique_back = true,\r\n    back = \"https://i.imgur.com/LRFkydP.png\",\r\n    width = 4,\r\n    height = 4,\r\n    number = 12,\r\n    back_is_hidden = true\r\n  }\r\n  object.setCustomObject(params)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "0953b4"
                },
                "4": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.507336E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg4",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/8OVvbNR.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 4\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page)\r\n  if page == maxpage then self.setState(1) else self.setState(page+1) end\r\nend\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Power Armor\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Bot\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Blootian\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Canosian\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Diploid\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Human (male)\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Human (female)\"})\r\nself.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Kerbite\"})\r\nself.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fungaloid\"})\r\nself.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Tentac\"})\r\nself.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Silicoid\"})\r\nself.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Trundlian\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\n\r\nfunction spawn1(obj, color, alt_click) --power armor\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476322687/917112430298FF370C1E3F15E52E942FC60FB508/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn2(obj, color, alt_click) --bot\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954103694725392206/4FD3F2525394A3696238D05453BEBB0DD71F40C4/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn3(obj, color, alt_click) --blootian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/967615741397353201/6653A3A9B70008584CCE8BB494B0D943E0252952/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn4(obj, color, alt_click) --canosian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954103694725393129/51AC1F6CC6FE9EC4228170E1E70592E01F5E1CC7/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn5(obj, color, alt_click) --diploid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954103694725429278/EDF9853EB166418380C5E0AD0DF72903FCF31D45/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn6(obj, color, alt_click) --human male\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476300277/1352927A9DF8F49D544F6DBB9F554F3B948C83B5/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn7(obj, color, alt_click) --human female\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476295362/40A6C1B4A3DFF6F6F7F0F676866E4C93AF7DDF73/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn8(obj, color, alt_click) --kerbite\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476298025/B72F75CBD52E7E25C7A0ADF53F0F4D1B8FC43DD4/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn9(obj, color, alt_click) --fungaloid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476307918/FCB587D564C98B474227087B07754FF2A81D967F/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn10(obj, color, alt_click) --tentac\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476309950/516183C887274664733697286EB217FCC40F3BCA/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn11(obj, color, alt_click) --silicoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476302887/447DF46C0744EB7DFE161E872DBB5B48320F9AAE/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn12(obj, color, alt_click) --trundlian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476311004/D2EA7862B42FFE0B12C3B277D31C1818CF182EFB/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "626dda"
                },
                "5": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.50733664E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg5",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/PNQaLHL.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 5\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page)\r\n  if page == maxpage then self.setState(1) else self.setState(page+1) end\r\nend\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Whistler\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Xeloxian\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Zoallan\"})\r\n--self.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Canosian\"})\r\n--self.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Diploid\"})\r\n--self.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Human (male)\"})\r\n--self.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Human (female)\"})\r\n--self.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Kerbite\"})\r\n--self.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fungaloid\"})\r\n--self.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Tentac\"})\r\n--self.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Silicoid\"})\r\n--self.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Trundlian\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\n\r\nfunction spawn1(obj, color, alt_click) --Whistler\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476318316/4E3073B92E5C97F79E9F66820B1A572A8F9EE61F/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn2(obj, color, alt_click) --Xeloxian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476323905/347A163964B8C6BAC448555456EFA6E28CB685C3/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn3(obj, color, alt_click) --Zoallan\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476324727/B418E3AE8AAF44063992916733DD86E32AAF844A/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "1b8b2c"
                },
                "6": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.50733735E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg6",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/1hYbwFB.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 6\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page)\r\n  if page == maxpage then self.setState(1) else self.setState(page+1) end\r\nend\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Avianoid\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Cheetahoid\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Crocodilian\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Elephantoid\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Felinoid\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Gorilloid\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Lupinoid\"})\r\nself.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Lapinoid\"})\r\nself.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Rhinoceroid\"})\r\nself.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Reptilianoid\"})\r\nself.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Tetsudinoid\"})\r\nself.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Ursinoid\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\nfunction spawn1(obj, color, alt_click) --avianoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476390792/D79004367CC0DC2F4BDD611BF73255F60D3CCCAA/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn2(obj, color, alt_click) --cheetahoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954103694725407415/01B684B01FC2858DD9DB34C35C41B2A6152068D9/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn3(obj, color, alt_click) --Crocodilian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954103694725414278/391FFEAAC3958ABB887FE85DE56E2A14FD79562B/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn4(obj, color, alt_click) --Elephantoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476317104/7D7D441DBE003CCC31AAC07D7D55856C106FD068/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn5(obj, color, alt_click) --Felinoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476299341/CF063C26A8D511CAEAAEEEDBBD8F1472BA6C5707/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn6(obj, color, alt_click) --Gorilloid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476296111/A52E70BA9D3B92484EA21287A155147AC4D4DF3E/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn7(obj, color, alt_click) --Lupinoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476319088/0B15ECBA8BB15F97E4B2EEC3F4D4A3C4E6DB9405/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn8(obj, color, alt_click) --Lapinoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/967616059749348735/0A71325C143FA517CA717253F244B73B344E4902/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn9(obj, color, alt_click) --Rhinoceroid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476350646/61CE09A2912CE6060C72FA4CD20F882747F2F45E/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn10(obj, color, alt_click) --Reptilianoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476498357/0C7154B7FEB0C6E619ACAEAB9F4E5231EF164067/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\n\r\nfunction spawn11(obj, color, alt_click) --Tetsudinoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476564795/937C7250299EB475C3678CAB46CDD475399FE225/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\n\r\nfunction spawn12(obj, color, alt_click) --Ursinoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/954104002476316004/97D3B4D5D5976581DBEB9BFFB93F617EBE4D1782/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/1004771069908980106/5B79587E5AECC3DFC3AADA55B4C6961760E6E9DF/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "18ab69"
                },
                "7": {
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": 9.532788,
                    "posY": 0.9600005,
                    "posZ": -2.64726615,
                    "rotX": 6.767723E-07,
                    "rotY": 180.012817,
                    "rotZ": 3.507338E-08,
                    "scaleX": 3.0,
                    "scaleY": 1.0,
                    "scaleZ": 3.0
                  },
                  "Nickname": "Replicator pg7",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/VeXnwBL.png",
                    "ImageSecondaryURL": "",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 0,
                      "Thickness": 0.2,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "XmlUI": "",
                  "LuaScript": "page = 7\r\nmaxpage = 8\r\nfunction onload()\r\nself.createButton({click_function = \"index\", index = 0, function_owner = self, label = page, position = {0.25, 0.2, 0.85}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 250, font_color={1,1,1,1}, tooltip = \"Page\"})\r\nself.createButton({click_function = \"pagedn\", index = 1, function_owner = self, label = \"1\", position = {0.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Prev\"})\r\nself.createButton({click_function = \"pageup\", index = 2, function_owner = self, label = \"2\", position = {1.25, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Next\"})\r\ncreatePage()\r\nend\r\n\r\nfunction pagedn() print(page) self.setState(page-1) end\r\nfunction pageup() print(page)\r\n  if page == maxpage then self.setState(1) else self.setState(page+1) end\r\nend\r\n--function pageup()  page=page+1  if page > maxpage then page = 1 end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n--function pagedn()  page=page-1  if page < 1 then page = maxpage end print(\"Replicator page \" .. page)  self.editButton({index=0, label=page}) changepage() end\r\n\r\n--function deletePage()\r\n--end\r\n\r\nfunction createPage()\r\nself.createButton({click_function = \"spawn1\", function_owner = self, label = \"3\", position = {0.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fighter\"})\r\nself.createButton({click_function = \"spawn2\", function_owner = self, label = \"4\", position = {0.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Canosian 3\"})\r\nself.createButton({click_function = \"spawn3\", function_owner = self, label = \"5\", position = {1.25, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Human 4\"})\r\nself.createButton({click_function = \"spawn4\", function_owner = self, label = \"6\", position = {1.75, 0.1, -0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Silicoid 4\"})\r\nself.createButton({click_function = \"spawn5\", function_owner = self, label = \"7\", position = {0.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Tentac 5\"})\r\nself.createButton({click_function = \"spawn6\", function_owner = self, label = \"8\", position = {0.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Xeloxian 6\"})\r\nself.createButton({click_function = \"spawn7\", function_owner = self, label = \"9\", position = {1.25, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Zoallan 4\"})\r\n--self.createButton({click_function = \"spawn8\", function_owner = self, label = \"a\", position = {1.75, 0.1, -0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Kerbite\"})\r\n--self.createButton({click_function = \"spawn9\", function_owner = self, label = \"b\", position = {0.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Fungaloid\"})\r\n--self.createButton({click_function = \"spawn10\", function_owner = self, label = \"c\", position = {0.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Tentac\"})\r\n--self.createButton({click_function = \"spawn11\", function_owner = self, label = \"d\", position = {1.25, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Silicoid\"})\r\n--self.createButton({click_function = \"spawn12\", function_owner = self, label = \"e\", position = {1.75, 0.1, 0.25}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, color = {0,0,0,0}, tooltip = \"Trundlian\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"Index\", position = {1.75, 0.2, 0.75}, scale = {0.5, 0.5, 0.5}, width = 0, height = 0, font_size = 160, font_color = {1,1,1,1}, tooltip = \"Index\"})\r\nself.createButton({click_function = \"pgindex\", function_owner = self, label = \"f\", position = {1.75, 0.1, 0.75}, scale = {0.5, 0.5, 0.5}, width = 400, height = 400, font_size = 400, tooltip = \"Index\"})\r\n\r\nend\r\n\r\nfunction pgindex() self.setState(maxpage) end\r\n\r\n\r\nfunction spawn1(obj, color, alt_click) --fighter\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/1004771069904331659/5966B9333DB1B23272F7F5C736C23ED144D7F8A5/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('hero', true)\r\nend\r\n\r\nfunction spawn2(obj, color, alt_click) --Canosian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/956354469473346114/6FD950FDEDCBE4919E66C88252D9CA8E87C7E2B3/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n\r\nfunction spawn3(obj, color, alt_click) --Human\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/956354469473367659/511DD0A321146CC053729F8DFF304BC7AA166C50/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n\r\nfunction spawn4(obj, color, alt_click) --Silicoid\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/956354469473317186/300F4A9360737FA6773D0427837C77B6AD4550A6/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n\r\nfunction spawn5(obj, color, alt_click) --Tentac\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/967616059748947987/DC38053B3D4B8169192DB6C455345DD34D773504/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n\r\nfunction spawn6(obj, color, alt_click) --Xeloxian\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/956354469473338002/ED262DBC55BFE21E2AB2D089F5A52A64839ADEDD/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n\r\nfunction spawn7(obj, color, alt_click) --Zoallan\r\n  pos = self.getPosition()\r\n  spawnparams = {\r\n    type = 'Custom_Model',\r\n    position          = {pos.x-3,pos.y+1,pos.z},\r\n    rotation          = {0,180,0},\r\n    scale             = {x=1, y=1, z=1},\r\n  }\r\n  object = spawnObject(spawnparams)\r\n  params = {\r\n    mesh = \"http://cloud-3.steamusercontent.com/ugc/967616059748947349/1420EDF7FE559C27D75ECF3340265A586B8A573F/\",\r\n    collider = \"http://cloud-3.steamusercontent.com/ugc/967616059748912163/706F2DCB160DFCD455616DA015F4253AFF341A95/\",\r\n    type = 1,\r\n    material = 0,\r\n  }\r\n  object.setCustomObject(params)\r\n  object.setColorTint(color)\r\n  object.setVar('hl', color)\r\n  object.setVar('ship', true)\r\nend\r\n",
                  "LuaScriptState": "",
                  "GUID": "b1683e"
                }
              }
            }
          ],
          "GUID": "48847f"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 13.571743,
            "posY": 2.60694432,
            "posZ": 14.8865776,
            "rotX": -0.000726405648,
            "rotY": 149.992157,
            "rotZ": -0.0015430206,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "Script",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Token",
              "Transform": {
                "posX": 1.78330433,
                "posY": 4.86444426,
                "posZ": 19.95236,
                "rotX": -2.64458553E-08,
                "rotY": 359.993073,
                "rotZ": -6.487881E-08,
                "scaleX": 1.40899587,
                "scaleY": 1.0,
                "scaleZ": 1.17233849
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.1,
                  "MergeDistancePixels": 15.0,
                  "Stackable": false
                }
              },
              "XmlUI": "",
              "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
              "LuaScriptState": "",
              "GUID": "7ff1bb"
            },
            {
              "Name": "Notecard",
              "Transform": {
                "posX": 4.315734,
                "posY": 5.80064535,
                "posZ": 10.0254126,
                "rotX": 11.0180292,
                "rotY": 268.727631,
                "rotZ": 353.35556,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Custom Tool Creator",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "XmlUI": "",
              "LuaScript": "template = [[function onCollisionEnter(collision_info)\n  if collision_info.collision_object.interactable then\n    local target = collision_info.collision_object\n    ---ENTER CUSTOM INTERACTION BELOW---\n    --replace me--\n    --example: target.lock()\n  end\n  self.destruct()\nend]]\n\nparentGUID = \"9b218c\"\n\nfunction onLoad()\n  self.createInput({\n    input_function = \"dummy\"-- string (required),\n    ,function_owner = self -- Object (required),\n    --,label          = -- string,\n    ,alignment      = 2-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\n    ,position       = {0,3,-0.4}-- Vector,\n    ,rotation       = {0,180,0}-- Vector,\n    ,scale          = {0.8,1,1}-- Vector,\n    ,width          = 900 -- int,\n    ,height         = 700-- int,\n    ,font_size      = 40-- int,\n  --  ,color          = {00,00,00}-- Color,\n  --  ,font_color     = {255,255,255}-- Color,\n    ,tooltip        = \"input code here\"-- Color,\n    ,value          = template-- string,\n    ,validation     = 1-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\n    ,tab            = 3-- int (1 = None, 2 = Select Next, 3 = Indent),\n    })\n    self.createInput({\n      input_function = \"dummy\"-- string (required),\n      ,function_owner = self-- Object (required),\n      --,label          = -- string,\n      ,alignment      = 3-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\n      ,position       = {0,3,0.6}-- Vector,\n      ,rotation       = {0,180,0}-- Vector,\n      ,scale          = {0.8,1,1}-- Vector,\n      ,width          = 400-- int,\n      ,height         = 75-- int,\n      ,font_size      = 40-- int,\n      --,color          = -- Color,\n      --,font_color     = -- Color,\n      ,tooltip        = \"Name your tool here\"-- Color,\n      ,value          = \"CustomTool\"-- string,\n      ,validation     = 4-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\n      ,tab            = 2-- int (1 = None, 2 = Select Next, 3 = Indent),\n      })\n    self.createButton({\n      click_function = \"createTool\"-- string (required),\n      ,function_owner = self-- Object (required),\n      ,label          = \"Create\"-- string,\n      ,position       = {0.35,3,0.42}-- Vector,\n      ,rotation       = {0,180,0}-- Vector,\n      ,scale          = {0.8,1,1}-- Vector,\n      ,width          = 150-- int,\n      --,height         = -- int,\n      ,font_size      = 40-- int,\n      --,color          = -- Color,\n      --,font_color     = -- Color,\n      ,tooltip        = \"Create Custom tool\"-- string,\n    })\nend\ntoolBag = nil\ntoolBall = nil\nscript = \"\"\nfunction createTool()\n  script = self.getInputs()[1].value\n  local bagSpawnPos = {\n    self.getPosition()[1],\n    self.getPosition()[2] + 0.2,\n    self.getPosition()[3]}\n  local BallSpawnPos = {\n    self.getPosition()[1],\n    self.getPosition()[2] + 3,\n    self.getPosition()[3]}\n  local name = self.getInputs()[2].value\n--[[  toolBag = spawnObject({\n    type           = \"Infinite_Bag\"-- string,\n    ,position       = bagSpawnPos-- Vector [x=0, y=3, z=0],\n    --,rotation       = -- Vector [x=0, y=0, z=0],\n    --,scale          = -- Vector [x=1, y=1, z=1],\n    --,callback       = -- string,\n    --,callback_owner = -- Object,\n    --,sound          = -- bool,\n    --,params         = -- Table,\n    --,snap_to_grid   = -- bool,\n  })]]\n  --Copy/paste in inf bag that the creator came so that the float physics cary to the new tool\n  --(you cannot edit a object's physics with code :/ )\n  copy({getObjectFromGUID(parentGUID)})\n  toolBag = (paste({position = bagSpawnPos}))[1]\n  toolBag.setColorTint({0.627,0.125,0.941,1})\n  toolBag.setName(name)\n  toolBag.reset()\n  toolBag.setLuaScript(\"\")\n  toolBall = spawnObject({\n    type           = \"Chinese_Checkers_Piece\"-- string,\n    ,position       = BallSpawnPos-- Vector [x=0, y=3, z=0],\n    --,rotation       = -- Vector [x=0, y=0, z=0],\n    ,scale          = {0.45,0.45,0.45}-- Vector [x=1, y=1, z=1],\n    --,callback       = -- string,\n    --,callback_owner = -- Object,\n    --,sound          = -- bool,\n    --,params         = -- Table,\n    --,snap_to_grid   = -- bool,\n  })\n  toolBall.setLuaScript(script)\n  toolBall.setColorTint({0.627,0.125,0.941,1})\n  toolBall.setName(name)\nend\n\nfunction dummy()\nend\n\n",
              "LuaScriptState": "",
              "GUID": "a9d902"
            },
            {
              "Name": "Infinite_Bag",
              "Transform": {
                "posX": 44.95968,
                "posY": 2.13777018,
                "posZ": -7.053672,
                "rotX": 359.994171,
                "rotY": 270.001343,
                "rotZ": 359.983246,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Custom Tool Creator",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.627,
                "g": 0.124999665,
                "b": 0.941
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "XmlUI": "",
              "LuaScript": "function onObjectLeaveContainer(container, leave_object)\r\n  if container == self then\r\n    leave_object.setLuaScript(script)\r\n    leave_object.setVar(\"parentGUID\", self.getGUID())\r\n  end\r\nend\r\n\r\nscript = [===[\r\ntemplate = [[function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    local target = collision_info.collision_object\r\n    ---ENTER CUSTOM INTERACTION BELOW---\r\n    --replace me--\r\n    --example: target.lock()\r\n  end\r\n  self.destruct()\r\nend]]\r\n\r\nparentGUID = \"]===]..self.getGUID()..[===[\"\r\n\r\nfunction onLoad()\r\n  self.createInput({\r\n    input_function = \"dummy\"-- string (required),\r\n    ,function_owner = self -- Object (required),\r\n    --,label          = -- string,\r\n    ,alignment      = 2-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n    ,position       = {0,3,-0.4}-- Vector,\r\n    ,rotation       = {0,180,0}-- Vector,\r\n    ,scale          = {0.8,1,1}-- Vector,\r\n    ,width          = 900 -- int,\r\n    ,height         = 700-- int,\r\n    ,font_size      = 40-- int,\r\n  --  ,color          = {00,00,00}-- Color,\r\n  --  ,font_color     = {255,255,255}-- Color,\r\n    ,tooltip        = \"input code here\"-- Color,\r\n    ,value          = template-- string,\r\n    ,validation     = 1-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n    ,tab            = 3-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n    })\r\n    self.createInput({\r\n      input_function = \"dummy\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      --,label          = -- string,\r\n      ,alignment      = 3-- int (1 = Automatic, 2 = Left, 3 = Center, 4 = Right, 5 = Justified),\r\n      ,position       = {0,3,0.6}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 400-- int,\r\n      ,height         = 75-- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Name your tool here\"-- Color,\r\n      ,value          = \"CustomTool\"-- string,\r\n      ,validation     = 4-- int (1 = None, 2 = Integer, 3 = Float, 4 = Alphanumeric, 5 = Username, 6 = Name),\r\n      ,tab            = 2-- int (1 = None, 2 = Select Next, 3 = Indent),\r\n      })\r\n    self.createButton({\r\n      click_function = \"createTool\"-- string (required),\r\n      ,function_owner = self-- Object (required),\r\n      ,label          = \"Create\"-- string,\r\n      ,position       = {0.35,3,0.42}-- Vector,\r\n      ,rotation       = {0,180,0}-- Vector,\r\n      ,scale          = {0.8,1,1}-- Vector,\r\n      ,width          = 150-- int,\r\n      --,height         = -- int,\r\n      ,font_size      = 40-- int,\r\n      --,color          = -- Color,\r\n      --,font_color     = -- Color,\r\n      ,tooltip        = \"Create Custom tool\"-- string,\r\n    })\r\nend\r\ntoolBag = nil\r\ntoolBall = nil\r\nscript = \"\"\r\nfunction createTool()\r\n  script = self.getInputs()[1].value\r\n  local bagSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 0.2,\r\n    self.getPosition()[3]}\r\n  local BallSpawnPos = {\r\n    self.getPosition()[1],\r\n    self.getPosition()[2] + 3,\r\n    self.getPosition()[3]}\r\n  local name = self.getInputs()[2].value\r\n--[[  toolBag = spawnObject({\r\n    type           = \"Infinite_Bag\"-- string,\r\n    ,position       = bagSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    --,scale          = -- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })]]\r\n  --Copy/paste in inf bag that the creator came so that the float physics cary to the new tool\r\n  --(you cannot edit a object's physics with code :/ )\r\n  copy({getObjectFromGUID(parentGUID)})\r\n  toolBag = (paste({position = bagSpawnPos}))[1]\r\n  toolBag.setColorTint({0.627,0.125,0.941,1})\r\n  toolBag.setName(name)\r\n  toolBag.reset()\r\n  toolBag.setLuaScript(\"\")\r\n  toolBall = spawnObject({\r\n    type           = \"Chinese_Checkers_Piece\"-- string,\r\n    ,position       = BallSpawnPos-- Vector [x=0, y=3, z=0],\r\n    --,rotation       = -- Vector [x=0, y=0, z=0],\r\n    ,scale          = {0.45,0.45,0.45}-- Vector [x=1, y=1, z=1],\r\n    --,callback       = -- string,\r\n    --,callback_owner = -- Object,\r\n    --,sound          = -- bool,\r\n    --,params         = -- Table,\r\n    --,snap_to_grid   = -- bool,\r\n  })\r\n  toolBall.setLuaScript(script)\r\n  toolBall.setColorTint({0.627,0.125,0.941,1})\r\n  toolBall.setName(name)\r\nend\r\n\r\nfunction dummy()\r\nend\r\n\r\n]===]\r\n",
              "LuaScriptState": "",
              "ContainedObjects": [
                {
                  "Name": "Notecard",
                  "Transform": {
                    "posX": 8.89699,
                    "posY": 4.94847965,
                    "posZ": 2.044845,
                    "rotX": 359.787781,
                    "rotY": 89.97574,
                    "rotZ": 0.0124006681,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Custom Tool Creator",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "GUID": "5c96be"
                }
              ],
              "PhysicsMaterial": {
                "StaticFriction": 0.6,
                "DynamicFriction": 0.6,
                "Bounciness": 0.0,
                "FrictionCombine": 0,
                "BounceCombine": 0
              },
              "Rigidbody": {
                "Mass": 100.0,
                "Drag": 1E+09,
                "AngularDrag": 1E+09,
                "UseGravity": true
              },
              "GUID": "9b218c",
              "States": {
                "3": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 9.569277,
                    "posY": 2.131095,
                    "posZ": 6.038562,
                    "rotX": 0.0202820655,
                    "rotY": 359.9921,
                    "rotZ": 0.01042889,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Unlock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -42.0548,
                        "posY": 4.32584333,
                        "posZ": -0.7650384,
                        "rotX": 3.418605,
                        "rotY": 359.9167,
                        "rotZ": 0.777484953,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Unlocking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.unlock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "76ce1e"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "66ae38"
                },
                "4": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 12.9433012,
                    "posY": 2.11860323,
                    "posZ": 5.33224535,
                    "rotX": 359.983215,
                    "rotY": -0.00398673257,
                    "rotZ": 359.9811,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Interactable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.1919994,
                    "g": 0.701,
                    "b": 0.167999387
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -38.94179,
                        "posY": 4.223505,
                        "posZ": -0.811558545,
                        "rotX": 357.802338,
                        "rotY": 267.8506,
                        "rotZ": 355.7988,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Interactable",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.191999853,
                        "g": 0.701,
                        "b": 0.167999834
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = true\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "0c9330"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "dbd1ce"
                },
                "5": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 16.56423,
                    "posY": 2.12948847,
                    "posZ": 5.05303764,
                    "rotX": 0.309056073,
                    "rotY": 359.9538,
                    "rotZ": 359.9611,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Uninteractable",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.905,
                    "g": 0.898,
                    "b": 0.171999425
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -34.98226,
                        "posY": 4.31183338,
                        "posZ": -0.7578825,
                        "rotX": 3.4046905,
                        "rotY": 0.387042969,
                        "rotZ": 179.436523,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Uninteractable",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.905,
                        "g": 0.898,
                        "b": 0.171999842
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  collision_info.collision_object.interactable = false\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "d3a489"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "2b15f8"
                },
                "6": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.0373631,
                    "posY": 2.16992617,
                    "posZ": 3.28359461,
                    "rotX": 0.0214407,
                    "rotY": 359.992065,
                    "rotZ": 359.9884,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Delete",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.856,
                    "g": 0.0999994054,
                    "b": 0.09399941
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -27.0000076,
                        "posY": 4.16296673,
                        "posZ": -5.883177E-06,
                        "rotX": -0.00183394086,
                        "rotY": 90.01447,
                        "rotZ": 359.991119,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Delete",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.856,
                        "g": 0.09999988,
                        "b": 0.0939998552
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.destruct()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "96808f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "f45150"
                },
                "7": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": 19.13471,
                    "posY": 2.58870268,
                    "posZ": 0.6960751,
                    "rotX": 354.4422,
                    "rotY": 0.0121308723,
                    "rotZ": 359.915771,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Copy",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.117999576,
                    "g": 0.53,
                    "b": 1.0
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -32.2388763,
                        "posY": 4.08938837,
                        "posZ": -1.16114247,
                        "rotX": 3.87262678,
                        "rotY": 268.570831,
                        "rotZ": 0.6912212,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Copy",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.117999859,
                        "g": 0.53,
                        "b": 1.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.clone({\r\n      position = self.getPosition()\r\n    })\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "da89c1"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "1780e5"
                },
                "8": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": -2.83828068,
                    "posY": 1.52735436,
                    "posZ": 5.544322,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Randomize",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.4429995,
                    "g": 0.230999529,
                    "b": 0.08999962
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -29.0757713,
                        "posY": 3.73343658,
                        "posZ": -0.164934546,
                        "rotX": 359.586,
                        "rotY": 88.92422,
                        "rotZ": 193.5898,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Randomize",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.44299984,
                        "g": 0.230999827,
                        "b": 0.08999988
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.shuffle()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "352ee7"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "b79c59"
                },
                "2": {
                  "Name": "Infinite_Bag",
                  "Transform": {
                    "posX": -2.83828068,
                    "posY": 1.52735436,
                    "posZ": 5.544322,
                    "rotX": -0.002803743,
                    "rotY": 269.998657,
                    "rotZ": 0.0001952582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lock",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 0.2499994,
                    "g": 0.2499994,
                    "b": 0.2499994
                  },
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "XmlUI": "",
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "ContainedObjects": [
                    {
                      "Name": "Chinese_Checkers_Piece",
                      "Transform": {
                        "posX": -23.8302631,
                        "posY": 4.05259132,
                        "posZ": 0.273095965,
                        "rotX": 2.502317,
                        "rotY": 90.26367,
                        "rotZ": 4.03545332,
                        "scaleX": 0.450000465,
                        "scaleY": 0.450000465,
                        "scaleZ": 0.450000465
                      },
                      "Nickname": "Locking",
                      "Description": "",
                      "GMNotes": "",
                      "ColorDiffuse": {
                        "r": 0.0,
                        "g": 0.0,
                        "b": 0.0
                      },
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "Hands": false,
                      "MaterialIndex": 0,
                      "XmlUI": "",
                      "LuaScript": "function onCollisionEnter(collision_info)\r\n  if collision_info.collision_object.interactable then\r\n    collision_info.collision_object.lock()\r\n  end\r\n  self.destruct()\r\nend\r\n",
                      "LuaScriptState": "",
                      "GUID": "1a368f"
                    }
                  ],
                  "PhysicsMaterial": {
                    "StaticFriction": 0.6,
                    "DynamicFriction": 0.6,
                    "Bounciness": 0.0,
                    "FrictionCombine": 0,
                    "BounceCombine": 0
                  },
                  "Rigidbody": {
                    "Mass": 100.0,
                    "Drag": 1E+09,
                    "AngularDrag": 1E+09,
                    "UseGravity": true
                  },
                  "GUID": "dc96b1"
                }
              }
            },
            {
              "Name": "Custom_Model",
              "Transform": {
                "posX": -2.46307826,
                "posY": 4.84509325,
                "posZ": -18.1232281,
                "rotX": 359.9907,
                "rotY": 359.987762,
                "rotZ": 359.991,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Component Explorer",
              "Description": "Made by Buckwheat",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/792008966795081565/A31339A57B8DB31DA0695FCD7A784BE36909A44D/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/792008966798244334/8697B54B7A9263CF57B0636DDA043F617C1ED2B8/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 0,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "local guid_input_params = {\r\n    input_function = \"guidInputFunc\",\r\n    function_owner = self,\r\n    label = \"GUID\",\r\n    position = {0, 0.1, 0.1},\r\n    rotation = {0, 180, 0},\r\n    scale = {0.5, 0.5, 0.5},\r\n    width = 2200,\r\n    height = 600,\r\n    font_size = 577,\r\n    color = {0.2247, 0.2247, 0.2247, 1},\r\n    font_color = {1, 1, 1, 1},\r\n    alignment = 3,\r\n    validation = 4,\r\n}\r\n\r\nlocal export_input_params = {\r\n    input_function = \"doNothing\",\r\n    function_owner = self,\r\n    label = \"Exported Code\",\r\n    position = {0, 0.1, -1.1},\r\n    rotation = {0, 180, 0},\r\n    scale = {0.5, 0.5, 0.5},\r\n    width = 7400,\r\n    height = 1500,\r\n    font_size = 277,\r\n    color = {0.2247, 0.2247, 0.2247, 1},\r\n    font_color = {1, 1, 1, 1},\r\n    alignment = 2,\r\n}\r\n\r\nlocal button_params = {\r\n    function_owner = self,\r\n    rotation = {0, 180, 0},\r\n    scale = {0.5, 0.5, 0.5},\r\n    width = 2500,\r\n    height = 600,\r\n    font_size = 400,\r\n    color = {0, 90/255, 192/255, 1},\r\n    font_color = {1, 1, 1, 1},\r\n}\r\n\r\nlocal button_params_variable = {\r\n    start_position = Vector(2.7, 0.1, -2.3),\r\n    step_x = -2.7,\r\n    step_z = -0.6,\r\n    color_child = {0, 90/255, 192/255, 1},\r\n    color_component = {0, 192/255, 90/255, 1},\r\n    color_var = {0, 90/255, 90/255, 1},\r\n    font_color_selected = Color(0, 0, 0, 1),\r\n}\r\n\r\n\r\nfunction onLoad()\r\n    self.createInput(guid_input_params)\r\n    self.createInput(export_input_params)\r\nend\r\n\r\nfunction processClick(type, indices, obj)\r\n    if type == \"child\" or type == \"component\" then\r\n        if obj == nil then\r\n            self.clearButtons()\r\n            self.editInput({\r\n                index          = 0,\r\n                value          = \"\",\r\n            })\r\n            print(\"Object lost.\")\r\n            return\r\n        end\r\n        self.clearButtons()\r\n        makeList(obj, indices)\r\n    end\r\nend\r\n\r\nfunction guidInputFunc(_, color, input, stillEditing)\r\n    if stillEditing then\r\n        return\r\n    end\r\n    if input == \"\" then\r\n        self.clearButtons()\r\n    end\r\n    local obj = getObjectFromGUID(input)\r\n    if obj ~= nil and obj ~= self then\r\n        self.clearButtons()\r\n        makeList(obj, {})\r\n    end\r\nend\r\n\r\nfunction makeList(obj, selections)\r\n    local children = obj.getChildren()\r\n    local components = obj.getComponents()\r\n    for childNum, child in ipairs(children) do\r\n        local params = deepCopy(button_params)\r\n        local func_name = \"child_\" .. childNum\r\n        _G[func_name] = function()\r\n            processClick(\"child\", {childNum}, obj)\r\n        end\r\n        params.click_function = func_name\r\n        params.position = button_params_variable.start_position + Vector(0, 0, button_params_variable.step_z * (childNum - 1))\r\n        params.color = button_params_variable.color_child\r\n        params.tooltip = logString(child)\r\n        params.label = string.sub(logString(child), 1, 10)\r\n        if childNum == selections[1] then\r\n            params.font_color = button_params_variable.font_color_selected\r\n        end\r\n        self.createButton(params)\r\n    end\r\n    for componentNum, component in ipairs(components) do\r\n        local params = deepCopy(button_params)\r\n        local func_name = \"component_\" .. componentNum\r\n        _G[func_name] = function()\r\n            processClick(\"component\", {#children + componentNum}, obj)\r\n        end\r\n        params.click_function = func_name\r\n        params.position = button_params_variable.start_position + Vector(0, 0, button_params_variable.step_z * (componentNum + #children - 1))\r\n        params.color = button_params_variable.color_component\r\n        params.tooltip = logString(component)\r\n        params.label = string.sub(logString(component), 1, 10)\r\n        if #children + componentNum == selections[1] then\r\n            params.font_color = button_params_variable.font_color_selected\r\n        end\r\n        self.createButton(params)\r\n    end\r\n    local current_gameObject = obj\r\n    for depth, selection in ipairs(selections) do\r\n        if selection <= #(current_gameObject.getChildren()) then\r\n            current_gameObject = current_gameObject.getChildren()[selection]\r\n            local children = current_gameObject.getChildren()\r\n            local components = current_gameObject.getComponents()\r\n            for childNum, child in ipairs(children) do\r\n                local params = deepCopy(button_params)\r\n                local selection_buffer = {}\r\n                for i = 1, depth do\r\n                    selection_buffer[i] = selections[i]\r\n                end\r\n                selection_buffer[#selection_buffer + 1] = childNum\r\n                local func_name = \"child_\" .. table.concat(selection_buffer, \"_\")\r\n                _G[func_name] = function()\r\n                    processClick(\"child\", selection_buffer, obj)\r\n                end\r\n                params.click_function = func_name\r\n                params.position = button_params_variable.start_position + Vector(button_params_variable.step_x * depth, 0, button_params_variable.step_z * (childNum - 1))\r\n                params.color = button_params_variable.color_child\r\n                params.tooltip = logString(child)\r\n                params.label = string.sub(logString(child), 1, 10)\r\n                if childNum == selections[depth + 1] then\r\n                    params.font_color = button_params_variable.font_color_selected\r\n                end\r\n                self.createButton(params)\r\n            end\r\n            for componentNum, component in ipairs(components) do\r\n                local params = deepCopy(button_params)\r\n                local selection_buffer = {}\r\n                for i = 1, depth do\r\n                    selection_buffer[i] = selections[i]\r\n                end\r\n                selection_buffer[#selection_buffer + 1] = #children + componentNum\r\n                local func_name = \"component_\" .. table.concat(selection_buffer, \"_\")\r\n                _G[func_name] = function()\r\n                    processClick(\"component\", selection_buffer, obj)\r\n                end\r\n                params.click_function = func_name\r\n                params.position = button_params_variable.start_position + Vector(button_params_variable.step_x * depth, 0, button_params_variable.step_z * (componentNum + #children - 1))\r\n                params.color = button_params_variable.color_component\r\n                params.tooltip = logString(component)\r\n                params.label = string.sub(logString(component), 1, 10)\r\n                if #children + componentNum == selections[depth + 1] then\r\n                    params.font_color = button_params_variable.font_color_selected\r\n                end\r\n                self.createButton(params)\r\n            end\r\n        else\r\n            local vars = current_gameObject.getComponents()[selection - #(current_gameObject.getChildren())].getVars()\r\n            local varNum = 0\r\n            for varName, varType in pairs(vars) do\r\n                varNum = varNum + 1\r\n                local params = deepCopy(button_params)\r\n                local selection_buffer = {}\r\n                for i = 1, depth do\r\n                    selection_buffer[i] = selections[i]\r\n                end\r\n                selection_buffer[#selection_buffer + 1] = varNum\r\n                local func_name = \"var_\" .. table.concat(selection_buffer, \"_\")\r\n                _G[func_name] = function()\r\n                    local export_buffer = {\"getObjectFromGUID('\"}\r\n                    export_buffer[#export_buffer + 1] = obj.getGUID()\r\n                    export_buffer[#export_buffer + 1] = \"')\"\r\n                    for export_depth = 1, depth - 1 do\r\n                        export_buffer[#export_buffer + 1] = \".getChildren()[\"\r\n                        export_buffer[#export_buffer + 1] = selection_buffer[export_depth]\r\n                        export_buffer[#export_buffer + 1] = \"]\"\r\n                    end\r\n                    export_buffer[#export_buffer + 1] = \".getComponents()[\"\r\n                    export_buffer[#export_buffer + 1] = selection_buffer[#selection_buffer - 1] - #(current_gameObject.getChildren())\r\n                    export_buffer[#export_buffer + 1] = \"].set('\"\r\n                    export_buffer[#export_buffer + 1] = varName\r\n                    export_buffer[#export_buffer + 1] = \"', <\"\r\n                    export_buffer[#export_buffer + 1] = varType\r\n                    export_buffer[#export_buffer + 1] = \">)    --Current Value: \"\r\n                    if string.find(varType, \"UnityEngine\") then\r\n                        print(\"Cannot get current value of UnityEngine variable.\")\r\n                        export_buffer[#export_buffer + 1] = \"<Unavailable>\"\r\n                    else\r\n                        export_buffer[#export_buffer + 1] = logString(current_gameObject.getComponents()[selection_buffer[#selection_buffer - 1] - #(current_gameObject.getChildren())].get(varName))\r\n                    end\r\n                    self.editInput({\r\n                        index = 1,\r\n                        value = table.concat(export_buffer)\r\n                    })\r\n                end\r\n                params.click_function = func_name\r\n                params.position = button_params_variable.start_position + Vector(button_params_variable.step_x * depth, 0, button_params_variable.step_z * (varNum - 1))\r\n                params.color = button_params_variable.color_var\r\n                params.tooltip = varName\r\n                params.label = string.sub(varName, 1, 10)\r\n                self.createButton(params)\r\n            end\r\n            break\r\n        end\r\n    end\r\nend\r\n\r\nfunction deepCopy(original)\r\n    if type(original) ~= \"table\" then\r\n        return original\r\n    else\r\n        local copy = {}\r\n        for i, v in pairs(original) do\r\n            copy[i] = deepCopy(v)\r\n        end\r\n        return copy\r\n    end\r\nend\r\n\r\nfunction doNothing()\r\n    return nil\r\nend",
              "LuaScriptState": "",
              "GUID": "6cd656"
            }
          ],
          "GUID": "9e8664"
        },
        {
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 14.2177181,
            "posY": 2.59006977,
            "posZ": 15.7084723,
            "rotX": -0.00113331107,
            "rotY": 180.000854,
            "rotZ": 0.00522907544,
            "scaleX": 0.75,
            "scaleY": 0.75,
            "scaleZ": 0.75
          },
          "Nickname": "New",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://paste.ee/r/fGoRz",
            "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CastShadows": true
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -7.138077,
                "posY": 2.47078562,
                "posZ": 12.7094221,
                "rotX": -0.002123652,
                "rotY": 60.00697,
                "rotZ": 359.943146,
                "scaleX": 0.475000471,
                "scaleY": 0.475000471,
                "scaleZ": 0.475000471
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992166,
                "b": 0.9999998
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "https://drive.google.com/uc?export=download&id=0Bz7qw6fhzuHCN25reWxveUtMY0U",
                "DiffuseURL": "https://drive.google.com/uc?export=download&id=0Bz7qw6fhzuHCeFJYMXc4OG5WeUE",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 0.8745098,
                    "g": 0.8117647,
                    "b": 0.745098054
                  },
                  "SpecularIntensity": 0.04,
                  "SpecularSharpness": 2.66666484,
                  "FresnelStrength": 0.072222054
                },
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "a2166f"
            },
            {
              "Name": "Custom_Assetbundle_Bag",
              "Transform": {
                "posX": -8.300963,
                "posY": 2.12150955,
                "posZ": 13.4744892,
                "rotX": -0.004129958,
                "rotY": 60.0013771,
                "rotZ": -0.00130892463,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Resource Pouch",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomAssetbundle": {
                "AssetbundleURL": "<Pillars of Eternity - Lords of the Eastern Reach>pillarsofeternityloterpouch.unity3d",
                "AssetbundleSecondaryURL": "<Pillars of Eternity - Lords of the Eastern Reach>pillarsofeternitylotertilesshared.unity3d",
                "MaterialIndex": 1,
                "TypeIndex": 6,
                "LoopingEffectIndex": 0
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "119477"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -7.95719051,
                "posY": 2.59044266,
                "posZ": 12.9463024,
                "rotX": 359.9482,
                "rotY": 179.9975,
                "rotZ": 0.06333799,
                "scaleX": 0.75,
                "scaleY": 0.75,
                "scaleZ": 0.75
              },
              "Nickname": "New",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "https://paste.ee/r/fGoRz",
                "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "daf88c"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.6411324,
                "posY": 2.46883678,
                "posZ": 6.40680027,
                "rotX": 359.9206,
                "rotY": 0.0125900283,
                "rotZ": 0.025644375,
                "scaleX": 1.99999917,
                "scaleY": 1.99999917,
                "scaleZ": 1.99999917
              },
              "Nickname": "Kiosk",
              "Description": "*Looking through it you find a assortment of tools, Mostly Junk...*\n\nRoll a Yellow Dice\n\nif the DMG is 2 or higher -\n\n*Hmm, A Tac Welder, Full on fuel.... Seems useful*\n\nMarine gains a \"Welding Torch\"",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/90478669043431741/B537F114DF7719C6FE6AA72A5A0614A58CD0CE91/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/90478669043431914/34779E44A382F4477FB72A365138EC22E1836835/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 0,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "4b3920"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.59006,
                "posY": 2.47127652,
                "posZ": 7.319945,
                "rotX": 359.951782,
                "rotY": 29.9943657,
                "rotZ": 0.008291341,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Crate Pile",
              "Description": "\"Somthing useful has to be in here\"\n\n*Roll Yellow Dice if greater then 2 Damage*\n\n\n*Marine Gains Landmines*",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/90478827544458791/C6F50D37A23BB24FF7BFDCEA2E03A6A6E1AEC077/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/90478827544455678/AC4F431E4DBCCDFF4A96C644036EA6E5C700F413/",
                "NormalURL": "",
                "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/90478827544458791/C6F50D37A23BB24FF7BFDCEA2E03A6A6E1AEC077/",
                "Convex": false,
                "MaterialIndex": 0,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "6974a8"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.9543056,
                "posY": 2.46882868,
                "posZ": 7.52546,
                "rotX": 359.967621,
                "rotY": 149.996155,
                "rotZ": 0.0136271995,
                "scaleX": 2.549999,
                "scaleY": 2.549999,
                "scaleZ": 2.549999
              },
              "Nickname": "Storage Unit",
              "Description": "\"It's full of Medical supplies, Looks like somone already cleaned it out\"\n\n*Roll a Yellow Dice*\n\n*If greater then 2*\n\n\"Looks like they left a Medkit\"",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/90478669043255828/127BBD38F967AE7FCA4F6F90B4375D7612D61DCE/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/90478669043256198/E933E69563FCB53989EBAAE43C5F47A82F0E7A8B/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 0,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "42cc8c"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 20.3030128,
                "posY": 2.90556526,
                "posZ": 6.89046574,
                "rotX": -0.002635512,
                "rotY": 180.000641,
                "rotZ": 0.000215714885,
                "scaleX": 0.300000429,
                "scaleY": 0.300000429,
                "scaleZ": 0.300000429
              },
              "Nickname": "PackUP Box BIG",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/773992883142219991/66E65F8B64579DFE18BFD9C142DD92E259BF8E78/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/773992883142220106/660C9CCB49D7AE1C180E19F2FB149A113F1CC3B4/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "packupZone = '1782d0' -- change this to the GUID of your own script packupZone\r\nadditive = true -- This will disable the save system, allowing you to setup a bag, and then next time you pack up it will only pick up what it already has saved before.\r\nUseBagNameAsButtonName = false\r\n\r\n--These are the \"ignore lists\" put in here anything you do not want to be packed up.\r\n--You can leave these blank... if you do just make the '= {}'\r\n\r\n-- Use general utem Tags here.\r\nignoreTAG  = {}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreNAME = {}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreDESC = {}\r\n\r\n-- Ignore by GUID\r\nignoreGUID = {}\r\n\r\n-- Some Objects you may want to force to be included in apack up, even if outside the script zone.. just place the GUID here.\r\nforceGUID = {}\r\n\r\n--Runs whenever game is saved/autosaved\r\nfunction onSave()\r\n --Begin State Managment of Saving Object Data.\r\n --Create GUID list fomr Object List\r\n    if tableSize(memoryData) == 0 then saved_data = \"\" return saved_data\r\n    else\r\n        local data_to_save = { md=memoryData }\r\n        saved_data = JSON.encode(data_to_save)\r\n        --saved_data = \"\" --Remove -- at start + save to clear save data\r\n       return saved_data end\r\n\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryData = loaded_data.md\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryData = {}\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction SetButtonName()\r\n    if UseBagNameAsButtonName then\r\n        PlaceText = self.getName()\r\n        PlaceWidth = string.len(PlaceText)*145\r\n        PlaceHeight = 450\r\n        Scale = {4.2,4.2,4.2}\r\n    else\r\n        PlaceText = 'Place'\r\n        PlaceWidth = 1000\r\n        PlaceHeight = 450\r\n        Scale = {4.2,4.2,4.2}\r\n    end\r\n    self.clearButtons()\r\n    makeButtons()\r\nend\r\n\r\nfunction createSaveData(obj)\r\n    local objData = {position = tableCullNumericIndexes(obj.getPosition()),\r\n                     rotation = tableCullNumericIndexes(obj.getRotation()),\r\n                     guid = obj.getGUID(),\r\n                     lock = obj.getLock(),\r\n                     interactable = tostring(obj.interactable),\r\n                     tooltip = tostring(obj.tooltip)}\r\n\r\n    memoryData[objData.guid] = objData\r\nend\r\n\r\nfunction placeStuff()\r\n    local prams = {}\r\n    for key, entry in pairs(memoryData) do\r\n        prams.guid = key\r\n        prams.position = {entry.position.x, entry.position.y, entry.position.z}\r\n        prams.rotation = {entry.rotation.x, entry.rotation.y, entry.rotation.z}\r\n        local item = self.takeObject(prams)\r\n\r\n        if entry.lock == true then\r\n        item.setPositionSmooth({entry.position.x, entry.position.y, entry.position.z}, false, true)\r\n        item.setRotationSmooth({entry.rotation.x, entry.rotation.y, entry.rotation.z}, false, true)\r\n        item.setLock(entry.lock) end\r\n\r\n        if entry.tooltip == 'false' then item.tooltip = false end\r\n        if entry.interactable == 'false' then item.interactable = false end\r\n\r\n    end\r\n    if additive == true then memoryData = {} end\r\n    SetButtonName()\r\nend\r\n\r\n\r\nfunction pickupStuff()\r\n\r\n    if additive == true then\r\n         -- Grab FORCED objects\r\n        for _, obj in ipairs(forceGUID) do\r\n            createSaveData(getObjectFromGUID(obj))\r\n            self.putObject(getObjectFromGUID(obj)) end\r\n         -- Grab All Objects in Zone\r\n        for _, obj in ipairs(getObjectFromGUID(packupZone).getObjects()) do\r\n            local add = true\r\n            for _, list in ipairs(ignoreTAG) do if obj.tag == list then add = false end end\r\n            for _, list in ipairs(ignoreNAME) do if obj.getName() == list then add = false end end\r\n            for _, list in ipairs(ignoreDESC) do if obj.getDescription() == list then add = false end end\r\n            for _, list in ipairs(ignoreGUID) do if obj.getGUID() == list then add = false end end\r\n            if add == true then\r\n                createSaveData(obj)\r\n                self.putObject(obj)\r\n            end\r\n            add = true\r\n        end\r\n    end\r\n\r\n    if additive == false then\r\n        for key, entry in pairs(memoryData) do\r\n            self.putObject(getObjectFromGUID(key))\r\n        end\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction tableSize(t)\r\n    local count = 0\r\n    for key,value in pairs(t) do count = count + 1 end\r\n    return count\r\nend\r\n\r\nfunction tableCullNumericIndexes(t)\r\n    for i in pairs(t) do\r\n        if type(i) == \"number\" then\r\n            table.remove(t, i)\r\n            return tableCullNumericIndexes(t)\r\n        end\r\n    end\r\n    return t\r\nend\r\n\r\nfunction makeButtons(set)\r\n    local buttons = {}\r\n\r\n -- DEFAULT START BUTTONS\r\n    if set == nil then\r\n        button_Place = {\r\n                click_function = 'placeStuff',\r\n                function_owner = self,\r\n                label = PlaceText,\r\n                position = {0, 0.5, 7.3},\r\n                rotation = {0, 0, 0},\r\n                width = PlaceWidth,\r\n                height = PlaceHeight,\r\n                scale = Scale,\r\n                font_size = 250,\r\n                color={0,0,0},\r\n                font_color={1,1,1}}\r\n        table.insert(buttons, button_Place)\r\n\r\n        button_PickUp = {\r\n            click_function = 'pickupStuff',\r\n            function_owner = self,\r\n            label = 'Pack Up',\r\n            position = {7.5, 0.5, -0.4},\r\n            rotation = {0, -90, 0},\r\n            width = 1200,\r\n            height = 500,\r\n            font_size = 250,\r\n            scale = {3.8,3.8,3.8},\r\n            color={0,0,0},\r\n            font_color={1,1,1}}\r\n        table.insert(buttons, button_PickUp) end\r\n -- Create Buttons\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "dee8e1"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.77908,
                "posY": 2.69778132,
                "posZ": 6.10201263,
                "rotX": 0.000133507885,
                "rotY": 179.999969,
                "rotZ": -2.33713E-05,
                "scaleX": 0.275000423,
                "scaleY": 0.275000423,
                "scaleZ": 0.275000423
              },
              "Nickname": "PackUP Box SMALL",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/773992883142220235/B638233F5273FACBDC7483A9A248A0CE01590A71/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/773992883142220350/0881454168738DE1368CA2A34F300736CA06D9E6/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "packupZone = '1782d0' -- change this to the GUID of your own script packupZone\r\nadditive = true -- This will disable the save system, allowing you to setup a bag, and then next time you pack up it will only pick up what it already has saved before.\r\nUseBagNameAsButtonName = false\r\n\r\n--These are the \"ignore lists\" put in here anything you do not want to be packed up.\r\n--You can leave these blank... if you do just make the '= {}'\r\n\r\n-- Use general utem Tags here.\r\nignoreTAG  = {}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreNAME = {}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreDESC = {}\r\n\r\n-- Ignore by GUID\r\nignoreGUID = {}\r\n\r\n-- Some Objects you may want to force to be included in apack up, even if outside the script zone.. just place the GUID here.\r\nforceGUID = {}\r\n\r\n--Runs whenever game is saved/autosaved\r\nfunction onSave()\r\n --Begin State Managment of Saving Object Data.\r\n --Create GUID list fomr Object List\r\n    if tableSize(memoryData) == 0 then saved_data = \"\" return saved_data\r\n    else\r\n        local data_to_save = { md=memoryData }\r\n        saved_data = JSON.encode(data_to_save)\r\n        --saved_data = \"\" --Remove -- at start + save to clear save data\r\n       return saved_data end\r\n\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryData = loaded_data.md\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryData = {}\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction SetButtonName()\r\n    if UseBagNameAsButtonName then\r\n        PlaceText = self.getName()\r\n        PlaceWidth = string.len(PlaceText)*145\r\n        PlaceHeight = 450\r\n        Scale = {3.2,3.2,3.2}\r\n    else\r\n        PlaceText = 'Place'\r\n        PlaceWidth = 1000\r\n        PlaceHeight = 450\r\n        Scale = {3.2,3.2,3.2}\r\n    end\r\n    self.clearButtons()\r\n    makeButtons()\r\nend\r\n\r\nfunction createSaveData(obj)\r\n    local objData = {position = tableCullNumericIndexes(obj.getPosition()),\r\n                     rotation = tableCullNumericIndexes(obj.getRotation()),\r\n                     guid = obj.getGUID(),\r\n                     lock = obj.getLock(),\r\n                     interactable = tostring(obj.interactable),\r\n                     tooltip = tostring(obj.tooltip)}\r\n\r\n    memoryData[objData.guid] = objData\r\nend\r\n\r\nfunction placeStuff()\r\n    local prams = {}\r\n    for key, entry in pairs(memoryData) do\r\n        prams.guid = key\r\n        prams.position = {entry.position.x, entry.position.y, entry.position.z}\r\n        prams.rotation = {entry.rotation.x, entry.rotation.y, entry.rotation.z}\r\n        local item = self.takeObject(prams)\r\n\r\n        if entry.lock == true then\r\n        item.setPositionSmooth({entry.position.x, entry.position.y, entry.position.z}, false, true)\r\n        item.setRotationSmooth({entry.rotation.x, entry.rotation.y, entry.rotation.z}, false, true)\r\n        item.setLock(entry.lock) end\r\n\r\n        if entry.tooltip == 'false' then item.tooltip = false end\r\n        if entry.interactable == 'false' then item.interactable = false end\r\n\r\n    end\r\n    if additive == true then memoryData = {} end\r\n    SetButtonName()\r\nend\r\n\r\n\r\nfunction pickupStuff()\r\n\r\n    if additive == true then\r\n         -- Grab FORCED objects\r\n        for _, obj in ipairs(forceGUID) do\r\n            createSaveData(getObjectFromGUID(obj))\r\n            self.putObject(getObjectFromGUID(obj)) end\r\n         -- Grab All Objects in Zone\r\n        for _, obj in ipairs(getObjectFromGUID(packupZone).getObjects()) do\r\n            local add = true\r\n            for _, list in ipairs(ignoreTAG) do if obj.tag == list then add = false end end\r\n            for _, list in ipairs(ignoreNAME) do if obj.getName() == list then add = false end end\r\n            for _, list in ipairs(ignoreDESC) do if obj.getDescription() == list then add = false end end\r\n            for _, list in ipairs(ignoreGUID) do if obj.getGUID() == list then add = false end end\r\n            if add == true then\r\n                createSaveData(obj)\r\n                self.putObject(obj)\r\n            end\r\n            add = true\r\n        end\r\n    end\r\n\r\n    if additive == false then\r\n        for key, entry in pairs(memoryData) do\r\n            self.putObject(getObjectFromGUID(key))\r\n        end\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction tableSize(t)\r\n    local count = 0\r\n    for key,value in pairs(t) do count = count + 1 end\r\n    return count\r\nend\r\n\r\nfunction tableCullNumericIndexes(t)\r\n    for i in pairs(t) do\r\n        if type(i) == \"number\" then\r\n            table.remove(t, i)\r\n            return tableCullNumericIndexes(t)\r\n        end\r\n    end\r\n    return t\r\nend\r\n\r\nfunction makeButtons(set)\r\n    local buttons = {}\r\n\r\n -- DEFAULT START BUTTONS\r\n    if set == nil then\r\n        button_Place = {\r\n                click_function = 'placeStuff',\r\n                function_owner = self,\r\n                label = PlaceText,\r\n                position = {0, 0.5, 5},\r\n                rotation = {0, 0, 0},\r\n                width = PlaceWidth,\r\n                height = PlaceHeight,\r\n                scale = Scale,\r\n                font_size = 250,\r\n                color={0,0,0},\r\n                font_color={1,1,1}}\r\n        table.insert(buttons, button_Place)\r\n\r\n        button_PickUp = {\r\n            click_function = 'pickupStuff',\r\n            function_owner = self,\r\n            label = 'Pack Up',\r\n            position = {4.3, 0.5, -0.4},\r\n            rotation = {0, -90, 0},\r\n            width = 1200,\r\n            height = 500,\r\n            font_size = 250,\r\n            scale = {3,3,3},\r\n            color={0,0,0},\r\n            font_color={1,1,1}}\r\n        table.insert(buttons, button_PickUp) end\r\n -- Create Buttons\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "27fd36"
            },
            {
              "Name": "Bag",
              "Transform": {
                "posX": 19.88226,
                "posY": 2.30251956,
                "posZ": 6.54502153,
                "rotX": 0.00193716027,
                "rotY": 0.004988216,
                "rotZ": 0.00218631513,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Packup BAG",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.300094724,
                "g": 0.7019608,
                "b": 0.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "XmlUI": "",
              "LuaScript": "packupZone = '1782d0' -- change this to the GUID of your own script packupZone\r\nadditive = true -- This will disable the save system, allowing you to setup a bag, and then next time you pack up it will only pick up what it already has saved before.\r\nUseBagNameAsButtonName = false\r\n\r\n--These are the \"ignore lists\" put in here anything you do not want to be packed up.\r\n--You can leave these blank... if you do just make the '= {}'\r\n\r\n-- Use general utem Tags here.\r\nignoreTAG  = {'Deck',}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreNAME = {'Doorway', 'NPC',}\r\n\r\n-- Put in \"EXACT\" names in here. This code will not work with BBcode formatting (I can add that if people need I guess latter)\r\nignoreDESC = {'Burnded Location', 'Searched Location',}\r\n\r\n-- Ignore by GUID\r\nignoreGUID = {'01bb90', '4b8ae3',}\r\n\r\n-- Some Objects you may want to force to be included in apack up, even if outside the script zone.. just place the GUID here.\r\nforceGUID = {'502d13', '073d87',}\r\n\r\n--Runs whenever game is saved/autosaved\r\nfunction onSave()\r\n --Begin State Managment of Saving Object Data.\r\n --Create GUID list fomr Object List\r\n    if tableSize(memoryData) == 0 then saved_data = \"\" return saved_data\r\n    else\r\n        local data_to_save = { md=memoryData }\r\n        saved_data = JSON.encode(data_to_save)\r\n        --saved_data = \"\" --Remove -- at start + save to clear save data\r\n       return saved_data end\r\n\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryData = loaded_data.md\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryData = {}\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction SetButtonName()\r\n    if UseBagNameAsButtonName then\r\n        PlaceText = self.getName()\r\n        PlaceWidth = string.len(PlaceText)*200\r\n        PlaceHeight = 450\r\n        Scale = {1.6,1.6,1.6}\r\n    else\r\n        PlaceText = 'Place'\r\n        PlaceWidth = 1000\r\n        PlaceHeight = 450\r\n        Scale = {1.6,1.6,1.6}\r\n    end\r\n    self.clearButtons()\r\n    makeButtons()\r\nend\r\n\r\nfunction createSaveData(obj)\r\n    local objData = {position = tableCullNumericIndexes(obj.getPosition()),\r\n                     rotation = tableCullNumericIndexes(obj.getRotation()),\r\n                     guid = obj.getGUID(),\r\n                     lock = obj.getLock(),\r\n                     interactable = tostring(obj.interactable),\r\n                     tooltip = tostring(obj.tooltip)}\r\n\r\n    memoryData[objData.guid] = objData\r\nend\r\n\r\nfunction placeStuff()\r\n    local prams = {}\r\n    for key, entry in pairs(memoryData) do\r\n        prams.guid = key\r\n        prams.position = {entry.position.x, entry.position.y, entry.position.z}\r\n        prams.rotation = {entry.rotation.x, entry.rotation.y, entry.rotation.z}\r\n        local item = self.takeObject(prams)\r\n\r\n        if entry.lock == true then\r\n        item.setPositionSmooth({entry.position.x, entry.position.y, entry.position.z}, false, true)\r\n        item.setRotationSmooth({entry.rotation.x, entry.rotation.y, entry.rotation.z}, false, true)\r\n        item.setLock(entry.lock) end\r\n\r\n        if entry.tooltip == 'false' then item.tooltip = false end\r\n        if entry.interactable == 'false' then item.interactable = false end\r\n\r\n    end\r\n    if additive == true then memoryData = {} end\r\n    SetButtonName()\r\nend\r\n\r\n\r\nfunction pickupStuff()\r\n\r\n    if additive == true then\r\n         -- Grab FORCED objects\r\n        for _, obj in ipairs(forceGUID) do\r\n            createSaveData(getObjectFromGUID(obj))\r\n            self.putObject(getObjectFromGUID(obj)) end\r\n         -- Grab All Objects in Zone\r\n        for _, obj in ipairs(getObjectFromGUID(packupZone).getObjects()) do\r\n            local add = true\r\n            for _, list in ipairs(ignoreTAG) do if obj.tag == list then add = false end end\r\n            for _, list in ipairs(ignoreNAME) do if obj.getName() == list then add = false end end\r\n            for _, list in ipairs(ignoreDESC) do if obj.getDescription() == list then add = false end end\r\n            for _, list in ipairs(ignoreGUID) do if obj.getGUID() == list then add = false end end\r\n            if add == true then\r\n                createSaveData(obj)\r\n                self.putObject(obj)\r\n            end\r\n            add = true\r\n        end\r\n    end\r\n\r\n    if additive == false then\r\n        for key, entry in pairs(memoryData) do\r\n            self.putObject(getObjectFromGUID(key))\r\n        end\r\n    end\r\n    SetButtonName()\r\nend\r\n\r\nfunction tableSize(t)\r\n    local count = 0\r\n    for key,value in pairs(t) do count = count + 1 end\r\n    return count\r\nend\r\n\r\nfunction tableCullNumericIndexes(t)\r\n    for i in pairs(t) do\r\n        if type(i) == \"number\" then\r\n            table.remove(t, i)\r\n            return tableCullNumericIndexes(t)\r\n        end\r\n    end\r\n    return t\r\nend\r\n\r\nfunction makeButtons(set)\r\n    local buttons = {}\r\n\r\n -- DEFAULT START BUTTONS\r\n    if set == nil then\r\n        button_Place = {\r\n                click_function = 'placeStuff',\r\n                function_owner = self,\r\n                label = PlaceText,\r\n                position = {0, 0.5, -2},\r\n                rotation = {0, 180, 0},\r\n                width = PlaceWidth,\r\n                height = PlaceHeight,\r\n                scale = Scale,\r\n                font_size = 250,\r\n                color={0,0,0},\r\n                font_color={1,1,1}}\r\n        table.insert(buttons, button_Place)\r\n\r\n        button_PickUp = {\r\n            click_function = 'pickupStuff',\r\n            function_owner = self,\r\n            label = 'Pack Up',\r\n            position = {-2.2, 0.5, 0.5},\r\n            rotation = {0, -90, 0},\r\n            width = 1200,\r\n            height = 500,\r\n            font_size = 250,\r\n            scale = {1.3,1.3,1.3},\r\n            color={0,0,0},\r\n            font_color={1,1,1}}\r\n        table.insert(buttons, button_PickUp) end\r\n -- Create Buttons\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n",
              "LuaScriptState": "",
              "GUID": "ec2006"
            },
            {
              "Name": "Bag",
              "Transform": {
                "posX": 19.85303,
                "posY": 2.302157,
                "posZ": 5.82373762,
                "rotX": 359.975433,
                "rotY": 0.03047481,
                "rotZ": 0.00066617527,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Relativ Memory BAG",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.6863038,
                "b": 0.7019608
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "XmlUI": "",
              "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local selfPos = self.getPosition()\r\n        local objPos = obj.getPosition()\r\n        local deltaPos = {}\r\n        deltaPos.x = (objPos.x-selfPos.x)\r\n        deltaPos.y = (objPos.y-selfPos.y)\r\n        deltaPos.z = (objPos.z-selfPos.z)\r\n        local pos, rot = deltaPos, obj.getRotation()\r\n\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        local selfPos = self.getPosition()\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            local deltaPos = compare_coords(selfPos, entry.pos, false)\r\n            obj.setPositionSmooth(deltaPos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local deltaPos = compare_coords(selfPos, entry.pos, false)\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=deltaPos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n          self.putObject(obj)\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n--Compares points p1 and p2. If substract is true, it returns p1 - p2. Otherwise, p1 + p2.\r\nfunction compare_coords(p1, p2, subtract)\r\n    local deltaPos = {}\r\n    if subtract then\r\n        deltaPos.x = (p1.x-p2.x)\r\n        deltaPos.y = (p1.y-p2.y)\r\n        deltaPos.z = (p1.z-p2.z)\r\n    else\r\n        deltaPos.x = (p1.x+p2.x)\r\n        deltaPos.y = (p1.y+p2.y)\r\n        deltaPos.z = (p1.z+p2.z)\r\n    end\r\n    return deltaPos\r\nend\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"0347c7\":{\"lock\":false,\"pos\":{\"x\":3.5351,\"y\":0.4148,\"z\":13.573},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0}},\"3e31be\":{\"lock\":false,\"pos\":{\"x\":-4.008,\"y\":0.685,\"z\":8.9876},\"rot\":{\"x\":0.0001,\"y\":359.9907,\"z\":-0.0001}},\"8a9692\":{\"lock\":false,\"pos\":{\"x\":8.6938,\"y\":0.685,\"z\":11.9466},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0}},\"c8748f\":{\"lock\":false,\"pos\":{\"x\":5.4528,\"y\":0.685,\"z\":2.8381},\"rot\":{\"x\":0,\"y\":0,\"z\":0}}}}",
              "GUID": "3248da"
            },
            {
              "Name": "Bag",
              "Transform": {
                "posX": 20.896534,
                "posY": 2.30218959,
                "posZ": 5.98861647,
                "rotX": 359.980621,
                "rotY": 0.0237063747,
                "rotZ": 359.9916,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Memory BAG",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.106990166,
                "b": 0.7019608
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "XmlUI": "",
              "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
              "LuaScriptState": "{\"ml\":[]}",
              "GUID": "d14543"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.9207153,
                "posY": 2.455679,
                "posZ": 6.98146248,
                "rotX": 359.972,
                "rotY": 209.999969,
                "rotZ": 359.9851,
                "scaleX": 2.69999886,
                "scaleY": 2.69999886,
                "scaleZ": 2.69999886
              },
              "Nickname": "Backpack",
              "Description": "Gain one ammo token of every type",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/90478669042733094/1E54917550A525BF8ACB505371C02A160CE328D2/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/90478669042733310/39E93E883E2A13AC2ED6CA72CD941743BA4B9748/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "021b24"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.9556942,
                "posY": 3.09584022,
                "posZ": 6.767319,
                "rotX": 0.009192326,
                "rotY": 270.006866,
                "rotZ": 359.993347,
                "scaleX": 0.62499994,
                "scaleY": 0.62499994,
                "scaleZ": 0.62499994
              },
              "Nickname": "Weapons Crate",
              "Description": "\"Alot of stuff has been looted\"\n\n*Roll Yellow Dice if greater then 2 Damage*\n\n*Marine gains a Backpack*",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://pastebin.com/raw.php?i=bCi5rSAn",
                "DiffuseURL": "https://s-media-cache-ak0.pinimg.com/236x/fb/47/70/fb47703e35d2003a681d581b7f3dc3ad.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "a872c4"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.5529156,
                "posY": 3.25197959,
                "posZ": 6.074076,
                "rotX": 0.00368128973,
                "rotY": 180.0148,
                "rotZ": -0.0006490874,
                "scaleX": 0.625000358,
                "scaleY": 0.625000358,
                "scaleZ": 0.625000358
              },
              "Nickname": "New",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.117997371,
                "g": 0.53,
                "b": 1.0
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "http://cloud-3.steamusercontent.com/ugc/852720752183911384/4CA6B3300F98EEA123CC135F8BE72A02F303AED9/",
                "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/852720752183912963/A41B857951944D7613A4D75817523E1FFFB57117/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 2,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "97b74b"
            },
            {
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 19.7322884,
                "posY": 2.59008121,
                "posZ": 6.45478535,
                "rotX": 0.021873109,
                "rotY": 150.017746,
                "rotZ": 0.000147722851,
                "scaleX": 0.75,
                "scaleY": 0.75,
                "scaleZ": 0.75
              },
              "Nickname": "New",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "Number": 0,
              "CustomMesh": {
                "MeshURL": "https://paste.ee/r/fGoRz",
                "DiffuseURL": "http://i.imgur.com/n3mqAtI.png",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CastShadows": true
              },
              "XmlUI": "",
              "LuaScript": "",
              "LuaScriptState": "",
              "GUID": "bc5564"
            }
          ],
          "GUID": "5fe43c"
        }
      ],
      "GUID": "a1026d"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.795723,
        "posY": 4.85888433,
        "posZ": 9.70198,
        "rotX": -8.253268E-05,
        "rotY": 269.996643,
        "rotZ": 5.27186348E-05,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "a13cc7"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.8571129,
        "posY": 4.85888433,
        "posZ": 3.49904466,
        "rotX": -5.71163255E-05,
        "rotY": 269.996674,
        "rotZ": 4.81157949E-05,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "a0b2d4"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.8837738,
        "posY": 4.858849,
        "posZ": -2.76664853,
        "rotX": -0.00212893449,
        "rotY": 269.9968,
        "rotZ": 0.0013835904,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "bf732f"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.4670525,
        "posY": 4.858889,
        "posZ": -9.02737,
        "rotX": -0.000440383359,
        "rotY": 269.9967,
        "rotZ": 0.000262805552,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "2d0bb1"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.61011,
        "posY": 4.858872,
        "posZ": -15.1318083,
        "rotX": -0.000282195135,
        "rotY": 269.9967,
        "rotZ": -4.006213E-05,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "d61e51"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -33.7023354,
        "posY": 4.85888147,
        "posZ": -21.20075,
        "rotX": -0.000181026713,
        "rotY": 269.996674,
        "rotZ": 0.0001491746,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "ee8cd6"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -16.0292416,
        "posY": 3.67151546,
        "posZ": -19.9709778,
        "rotX": 5.56559154E-09,
        "rotY": 179.993256,
        "rotZ": -4.017419E-08,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "19d241"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 5.17611,
        "posY": 3.43647885,
        "posZ": -20.66376,
        "rotX": -1.77516881E-06,
        "rotY": 0.0227560829,
        "rotZ": -3.76229264E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "W Alliance Army ",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.106990032,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 0,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"1234c0\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"170a26\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6859,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0004,\"z\":0}},\"6ba9d8\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"6e720b\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"7e1d51\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.688,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0108,\"z\":0}},\"8134e4\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0009,\"z\":0}},\"86e94d\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6688,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0}},\"9ef696\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6998,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0}},\"9ff8c9\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6998,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0}},\"b03946\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6688,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0}},\"d1f0fd\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0009,\"z\":0}},\"d5b6de\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"d61761\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"eb0a0a\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6726,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.012,\"z\":0}},\"f97572\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6814,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":0.0008,\"z\":0}},\"ffec2c\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6726,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0119,\"z\":0}}}}",
      "GUID": "f4194e"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 1.11866057,
        "posY": 3.43648171,
        "posZ": -20.691309,
        "rotX": -2.00678915E-06,
        "rotY": 0.0261389613,
        "rotZ": 3.30791522E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "W Druid Army ",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.106990032,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"01538b\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"1548f4\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"1904e0\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6926,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9793,\"z\":0}},\"24e7c6\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6866,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":359.967,\"z\":0}},\"26e4c3\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7508,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":359.9703,\"z\":0}},\"2facb2\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"36beda\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"4bc9a5\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"4fffd2\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.762,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":359.966,\"z\":0}},\"62b231\":{\"lock\":false,\"pos\":{\"x\":-2.5507,\"y\":1.7156,\"z\":-5.9494},\"rot\":{\"x\":0,\"y\":0.0205,\"z\":0}},\"69121c\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.704,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0205,\"z\":0}},\"82e4fa\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6779,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":359.967,\"z\":0}},\"90ccfc\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.7404,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0004,\"z\":0}},\"a67266\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7675,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":359.9703,\"z\":0}},\"f4cd02\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}},\"f8d69f\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6833,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9792,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "Name": "rpg_BEAR",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.750754,
            "posZ": -5.95000029,
            "rotX": -3.091348E-06,
            "rotY": 359.9703,
            "rotZ": 1.38212627E-05,
            "scaleX": 0.7250002,
            "scaleY": 0.7250002,
            "scaleZ": 0.7250002
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "a67266"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": -5.95,
            "posY": 1.68334663,
            "posZ": -4.25000048,
            "rotX": -3.63036065E-06,
            "rotY": 359.979248,
            "rotZ": 8.351631E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "1904e0"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": -4.25,
            "posY": 1.68334651,
            "posZ": -4.25,
            "rotX": -2.55102862E-07,
            "rotY": 359.979248,
            "rotZ": 9.364876E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "f4cd02"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": -4.25,
            "posY": 1.67793214,
            "posZ": -5.95,
            "rotX": 3.37257734E-06,
            "rotY": 359.96698,
            "rotZ": 2.90719458E-06,
            "scaleX": 0.250000417,
            "scaleY": 0.250000417,
            "scaleZ": 0.250000417
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "24e7c6"
        },
        {
          "Name": "rpg_BARGHEST",
          "Transform": {
            "posX": -2.55070043,
            "posY": 1.70404518,
            "posZ": -5.9494,
            "rotX": 4.53479743E-06,
            "rotY": 0.02044209,
            "rotZ": 4.91000765E-06,
            "scaleX": 0.5000005,
            "scaleY": 0.5000005,
            "scaleZ": 0.5000005
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "62b231"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.68334675,
            "posZ": -4.25,
            "rotX": 2.46609875E-06,
            "rotY": 359.979156,
            "rotZ": 8.217123E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "f8d69f"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": -0.8500001,
            "posY": 1.68334687,
            "posZ": -4.25000048,
            "rotX": -3.20017421E-06,
            "rotY": 359.9792,
            "rotZ": 8.138111E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "01538b"
        },
        {
          "Name": "rpg_BLACK_DRAGON",
          "Transform": {
            "posX": -0.850000262,
            "posY": 1.72633421,
            "posZ": -5.95000029,
            "rotX": -1.67127769E-08,
            "rotY": 0.00036616213,
            "rotZ": 1.17393865E-05,
            "scaleX": 0.300000429,
            "scaleY": 0.300000429,
            "scaleZ": 0.300000429
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "90ccfc"
        },
        {
          "Name": "rpg_WEREWOLF",
          "Transform": {
            "posX": 0.849999964,
            "posY": 1.74575019,
            "posZ": -5.95000029,
            "rotX": -4.42921964E-06,
            "rotY": 359.966,
            "rotZ": 1.03399789E-05,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "4fffd2"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": 0.849999964,
            "posY": 1.68334663,
            "posZ": -4.25,
            "rotX": 4.78750371E-06,
            "rotY": 359.979218,
            "rotZ": 9.390643E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "4bc9a5"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": 2.55,
            "posY": 1.68334675,
            "posZ": -4.25,
            "rotX": 2.09956829E-06,
            "rotY": 359.979218,
            "rotZ": 1.003146E-05,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "1548f4"
        },
        {
          "Name": "rpg_BARGHEST",
          "Transform": {
            "posX": 2.54999971,
            "posY": 1.704045,
            "posZ": -5.95,
            "rotX": 1.27844487E-06,
            "rotY": 0.0204204377,
            "rotZ": 1.24333064E-05,
            "scaleX": 0.5000005,
            "scaleY": 0.5000005,
            "scaleZ": 0.5000005
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "69121c"
        },
        {
          "Name": "rpg_GRIFFON",
          "Transform": {
            "posX": 4.24999952,
            "posY": 1.67793262,
            "posZ": -5.950001,
            "rotX": -7.1454665E-06,
            "rotY": 359.96698,
            "rotZ": 1.697081E-05,
            "scaleX": 0.250000417,
            "scaleY": 0.250000417,
            "scaleZ": 0.250000417
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "82e4fa"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": 4.25,
            "posY": 1.68334675,
            "posZ": -4.25,
            "rotX": 3.85330168E-06,
            "rotY": 359.979248,
            "rotZ": 7.25637847E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "36beda"
        },
        {
          "Name": "rpg_WOLF",
          "Transform": {
            "posX": 5.95,
            "posY": 1.68334651,
            "posZ": -4.25,
            "rotX": -5.68541168E-07,
            "rotY": 359.979218,
            "rotZ": 9.658417E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "2facb2"
        },
        {
          "Name": "rpg_BEAR",
          "Transform": {
            "posX": 5.95,
            "posY": 1.75075412,
            "posZ": -5.95,
            "rotX": 2.79754E-06,
            "rotY": 359.9703,
            "rotZ": 1.06714451E-05,
            "scaleX": 0.7250002,
            "scaleY": 0.7250002,
            "scaleZ": 0.7250002
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "26e4c3"
        }
      ],
      "GUID": "370a75"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": -3.115305,
        "posY": 3.436478,
        "posZ": -20.54162,
        "rotX": 9.29992439E-08,
        "rotY": 0.0205540676,
        "rotZ": 2.13111571E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "W Suicide Squad SS",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.106990032,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"019c39\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"08f239\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6596,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0083,\"z\":0}},\"143938\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9912,\"z\":0}},\"23ffa3\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6769,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0}},\"41be80\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"50a8ab\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6729,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0004,\"z\":0}},\"566580\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7173,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0109,\"z\":0}},\"5c7aec\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7173,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0109,\"z\":0}},\"75696c\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7307,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9912,\"z\":0}},\"774e20\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"7ccaaa\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"873a6c\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"8f817a\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.7509,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0054,\"z\":0}},\"90c72f\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.7176,\"z\":-4.25},\"rot\":{\"x\":0,\"y\":359.9911,\"z\":0}},\"dbb921\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6692,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0}},\"fe07ad\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6656,\"z\":-5.95},\"rot\":{\"x\":0,\"y\":0.0003,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": 2.55,
            "posY": 1.71762729,
            "posZ": -4.25,
            "rotX": 2.98893542E-06,
            "rotY": 359.991119,
            "rotZ": 9.391278E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "019c39"
        },
        {
          "Name": "rpg_KOBOLD",
          "Transform": {
            "posX": -0.850000262,
            "posY": 1.65361178,
            "posZ": -5.95,
            "rotX": -5.57700844E-07,
            "rotY": 0.008247463,
            "rotZ": 1.03786442E-05,
            "scaleX": 0.925,
            "scaleY": 0.925,
            "scaleZ": 0.925
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "08f239"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.71762753,
            "posZ": -4.25,
            "rotX": 1.00975356E-07,
            "rotY": 359.99115,
            "rotZ": 1.19528222E-05,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "143938"
        },
        {
          "Name": "rpg_GOBLIN",
          "Transform": {
            "posX": -4.25000238,
            "posY": 1.66922486,
            "posZ": -5.94999743,
            "rotX": -9.710806E-06,
            "rotY": -0.000374553172,
            "rotZ": 1.10523988E-05,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "23ffa3"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": 4.25,
            "posY": 1.71762729,
            "posZ": -4.25,
            "rotX": 5.61016E-06,
            "rotY": 359.991058,
            "rotZ": 7.683525E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "41be80"
        },
        {
          "Name": "rpg_GOBLIN",
          "Transform": {
            "posX": -2.55000067,
            "posY": 1.665575,
            "posZ": -5.95000029,
            "rotX": 4.169636E-06,
            "rotY": 0.000125264589,
            "rotZ": 1.28199481E-05,
            "scaleX": 0.4500004,
            "scaleY": 0.4500004,
            "scaleZ": 0.4500004
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "50a8ab"
        },
        {
          "Name": "rpg_TREE_ENT",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.7173171,
            "posZ": -5.95000029,
            "rotX": -3.763494E-06,
            "rotY": 0.01087075,
            "rotZ": 7.59189243E-06,
            "scaleX": 0.350000441,
            "scaleY": 0.350000441,
            "scaleZ": 0.350000441
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "566580"
        },
        {
          "Name": "rpg_TREE_ENT",
          "Transform": {
            "posX": 5.95,
            "posY": 1.717317,
            "posZ": -5.94999933,
            "rotX": -5.23020049E-07,
            "rotY": 0.0108985845,
            "rotZ": 9.208033E-06,
            "scaleX": 0.350000441,
            "scaleY": 0.350000441,
            "scaleZ": 0.350000441
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "5c7aec"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": -5.95,
            "posY": 1.71762753,
            "posZ": -4.25000048,
            "rotX": -5.942551E-06,
            "rotY": 359.991119,
            "rotZ": 6.617206E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "75696c"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": -0.850000262,
            "posY": 1.71762753,
            "posZ": -4.25,
            "rotX": -3.007331E-06,
            "rotY": 359.991028,
            "rotZ": 1.13127353E-05,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "774e20"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": 5.95,
            "posY": 1.71762729,
            "posZ": -4.25,
            "rotX": -1.39446456E-07,
            "rotY": 359.99115,
            "rotZ": 8.110859E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7ccaaa"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": -4.25,
            "posY": 1.71762753,
            "posZ": -4.25,
            "rotX": 3.929359E-06,
            "rotY": 359.991058,
            "rotZ": 8.537429E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "873a6c"
        },
        {
          "Name": "rpg_CRASC",
          "Transform": {
            "posX": 0.8499998,
            "posY": 1.75092113,
            "posZ": -5.95,
            "rotX": -4.53959757E-07,
            "rotY": 0.00533551071,
            "rotZ": 8.430993E-06,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "8f817a"
        },
        {
          "Name": "rpg_RAT",
          "Transform": {
            "posX": 0.849999964,
            "posY": 1.71762717,
            "posZ": -4.25,
            "rotX": -1.5260332E-07,
            "rotY": 359.99115,
            "rotZ": 1.0458738E-05,
            "scaleX": 0.725000262,
            "scaleY": 0.725000262,
            "scaleZ": 0.725000262
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "90c72f"
        },
        {
          "Name": "rpg_GOBLIN",
          "Transform": {
            "posX": 4.25,
            "posY": 1.669225,
            "posZ": -5.95,
            "rotX": 3.57684348E-06,
            "rotY": -8.393661E-05,
            "rotZ": -1.16060107E-06,
            "scaleX": 0.475000471,
            "scaleY": 0.475000471,
            "scaleZ": 0.475000471
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "dbb921"
        },
        {
          "Name": "rpg_GOBLIN",
          "Transform": {
            "posX": 2.54999971,
            "posY": 1.665575,
            "posZ": -5.95000029,
            "rotX": -8.919644E-06,
            "rotY": 0.000352568459,
            "rotZ": 1.44407513E-05,
            "scaleX": 0.4500004,
            "scaleY": 0.4500004,
            "scaleZ": 0.4500004
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "fe07ad"
        }
      ],
      "GUID": "2c6eed"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 9.03467,
        "posY": 3.4365406,
        "posZ": 20.2507038,
        "rotX": 1.28064639E-05,
        "rotY": 179.993484,
        "rotZ": -2.4820074E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "B Horde Army",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.106990032,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"0f13da\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0124,\"z\":0}},\"234d9c\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7183,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9888,\"z\":0}},\"3b9fbf\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0125,\"z\":0}},\"583be5\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0125,\"z\":0}},\"599203\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7183,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9888,\"z\":0}},\"59eeb6\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0123,\"z\":0}},\"735508\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0126,\"z\":0}},\"85beb3\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0123,\"z\":0}},\"89287b\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0124,\"z\":0}},\"93ea67\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6884,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9925,\"z\":0}},\"96b1ee\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.7003,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0109,\"z\":0}},\"a23272\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.7003,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0109,\"z\":0}},\"de6f14\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6464,\"z\":4.25},\"rot\":{\"x\":0,\"y\":210.0126,\"z\":0}},\"e8bb51\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6884,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9925,\"z\":0}},\"ea50cb\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.7301,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0085,\"z\":0}},\"ec1819\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.7317,\"z\":5.95},\"rot\":{\"x\":0,\"y\":149.9877,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "Name": "rpg_TROLL",
          "Transform": {
            "posX": 5.949999,
            "posY": 1.71833825,
            "posZ": 5.94999838,
            "rotX": 3.58360467E-07,
            "rotY": 179.988785,
            "rotZ": 9.95318E-06,
            "scaleX": 0.650000334,
            "scaleY": 0.650000334,
            "scaleZ": 0.650000334
          },
          "Nickname": "Rook",
          "Description": "f",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "599203"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": 5.95,
            "posY": 1.64639306,
            "posZ": 4.24999857,
            "rotX": 7.415325E-07,
            "rotY": 210.012436,
            "rotZ": 1.04233322E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "0f13da"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": 4.249999,
            "posY": 1.64639354,
            "posZ": 4.249999,
            "rotX": 3.427266E-07,
            "rotY": 210.012314,
            "rotZ": 1.08806616E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "59eeb6"
        },
        {
          "Name": "rpg_CENTAUR",
          "Transform": {
            "posX": 4.249999,
            "posY": 1.68841982,
            "posZ": 5.94999933,
            "rotX": 6.092013E-10,
            "rotY": 179.992462,
            "rotZ": 9.258106E-06,
            "scaleX": 0.4250004,
            "scaleY": 0.4250004,
            "scaleZ": 0.4250004
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "93ea67"
        },
        {
          "Name": "rpg_LIZARD_WARRIOR",
          "Transform": {
            "posX": 2.54999924,
            "posY": 1.700319,
            "posZ": 5.95000124,
            "rotX": -9.264099E-10,
            "rotY": 180.010941,
            "rotZ": 9.711675E-06,
            "scaleX": 0.6500003,
            "scaleY": 0.6500003,
            "scaleZ": 0.6500003
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "a23272"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": 2.54999924,
            "posY": 1.64639342,
            "posZ": 4.249999,
            "rotX": 6.7974247E-07,
            "rotY": 210.0126,
            "rotZ": 1.0190085E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "735508"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": 0.849998951,
            "posY": 1.64639354,
            "posZ": 4.249999,
            "rotX": 1.20690333E-06,
            "rotY": 210.012329,
            "rotZ": 1.0129942E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "85beb3"
        },
        {
          "Name": "rpg_DARKNESS_WARLORD",
          "Transform": {
            "posX": 0.8499994,
            "posY": 1.73008728,
            "posZ": 5.94999933,
            "rotX": 7.4632203E-07,
            "rotY": 180.008469,
            "rotZ": 9.885152E-06,
            "scaleX": 0.625000358,
            "scaleY": 0.625000358,
            "scaleZ": 0.625000358
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "ea50cb"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": -0.8500004,
            "posY": 1.64639306,
            "posZ": 4.249999,
            "rotX": -6.162883E-07,
            "rotY": 210.012543,
            "rotZ": 9.718117E-06,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "3b9fbf"
        },
        {
          "Name": "rpg_DRAGONIDE",
          "Transform": {
            "posX": -0.850000441,
            "posY": 1.73173726,
            "posZ": 5.949999,
            "rotX": -8.480122E-10,
            "rotY": 149.987671,
            "rotZ": 9.889048E-06,
            "scaleX": 0.7000002,
            "scaleY": 0.7000002,
            "scaleZ": 0.7000002
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "ec1819"
        },
        {
          "Name": "rpg_LIZARD_WARRIOR",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.70031881,
            "posZ": 5.949999,
            "rotX": 8.5278873E-07,
            "rotY": 180.010941,
            "rotZ": 1.03254069E-05,
            "scaleX": 0.6500003,
            "scaleY": 0.6500003,
            "scaleZ": 0.6500003
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "96b1ee"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.64639354,
            "posZ": 4.249999,
            "rotX": -3.448108E-08,
            "rotY": 210.012466,
            "rotZ": 1.02268841E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "583be5"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": -4.25,
            "posY": 1.6463933,
            "posZ": 4.249999,
            "rotX": -1.07715255E-06,
            "rotY": 210.0124,
            "rotZ": 1.035543E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "89287b"
        },
        {
          "Name": "rpg_CENTAUR",
          "Transform": {
            "posX": -4.25,
            "posY": 1.68841982,
            "posZ": 5.949999,
            "rotX": 4.27560281E-07,
            "rotY": 179.992462,
            "rotZ": 1.02452559E-05,
            "scaleX": 0.4250004,
            "scaleY": 0.4250004,
            "scaleZ": 0.4250004
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "e8bb51"
        },
        {
          "Name": "rpg_TROLL",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.71833849,
            "posZ": 5.949999,
            "rotX": -1.11237291E-07,
            "rotY": 179.988785,
            "rotZ": 9.960727E-06,
            "scaleX": 0.650000334,
            "scaleY": 0.650000334,
            "scaleZ": 0.650000334
          },
          "Nickname": "Rook",
          "Description": "f",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "234d9c"
        },
        {
          "Name": "rpg_ORC",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.64639306,
            "posZ": 4.249999,
            "rotX": -2.901761E-07,
            "rotY": 210.012589,
            "rotZ": 1.07169944E-05,
            "scaleX": 0.525000453,
            "scaleY": 0.525000453,
            "scaleZ": 0.525000453
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "de6f14"
        }
      ],
      "GUID": "147975"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 16.0949955,
        "posY": 4.84499741,
        "posZ": 23.539856,
        "rotX": 1.00486453E-07,
        "rotY": 359.9932,
        "rotZ": -1.32402477E-07,
        "scaleX": 1.40899587,
        "scaleY": 1.0,
        "scaleZ": 1.17233849
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "file:///D:/Tools.mod/TTS/Texturs/in_out_perh.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "-- * Global Var\r\n-- counters\r\ncounter = 0 \r\ndebugCount = 0\r\n--Local positions for each pile of object\r\npos_Center_In = {1.3, 0.1, -0.8}\r\npos_Center_Out = {1.3, 0.05, 0.8}\r\n--How large that Zone is\r\nradiusInZone = 0.7\r\nradiusOutZone = 0.7\r\n-- index values\r\ninputIndex = {}\r\nlabelName = \"Name\"\r\nlabelDis = \"Dis\"\r\n--This is which way is face down for a card or deck relative to the tool\r\nrot_offset = {x=0, y=0, z=180}\r\n-- last Ids\r\nlastInGUID = nil\r\nlastOutGUID = nil\r\n\r\n\r\n\r\n-- * onLoad : \r\n-- Creates invisible button onload, hidden under the \"REFILL\" on the deck pad\r\nfunction onLoad()\r\n-- ** createButton : \r\n-- *** comment\r\n    -- self.createButton({\r\n    --     click_function=\"click_refillDeck\", function_owner=self,\r\n    --     position={0,0.1,-1.12}, height=200, width=620, color={1,1,1,0}\r\n    -- })\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0, 1, 0.0632, 1}, font_color = {0.7573, 0.7573, 0.7573, 1}}\r\n\t-- local data = {click_function = \"INSERT_FUNCTION\", function_owner = self, label = \"In\", position = {0.3, 0.05, -1.3}, scale = {0.5, 0.5, 0.5}, width = 700, height = 700, font_size = 300, color = {0.8484, 0.6339, 0, 0.4}, font_color = {0, 0, 0, 10}}\r\n-- *** createButton In : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\tlabel = \"In\",\r\n\t\t\t\t\tposition = {0.3, 0.05, -1.3},\r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700, height = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- *** createButton Out : \r\n\tlocal data = {  click_function = \"printFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = \"Out\", \r\n\t\t\t\t\tposition = {0.3, 0.05, 1.3}, \r\n\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\twidth = 700,\r\n\t\t\t\t\theight = 700,\r\n\t\t\t\t\tcolor={1,1,1,0},\r\n\t\t\t\t\tfont_size = 300\r\n\t\t\t\t\t}\r\n    self.createButton(data)\r\n-- ** createInput Name : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, -1.5}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, height = 500, \r\n\t\t\t\t\tfont_size = 400, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\ttooltip = \"Name\", \r\n\t\t\t\t\tvalue = \"Name\"\r\n\t\t\t\t\t}\r\n  nameFilde = self.createInput(data)\r\n\tsetInputIndex(labelName)\r\n-- ** createInput Dis : \r\n  local data = {\r\n\t\t\t\t\tinput_function = \"nilFunction\", \r\n\t\t\t\t\tfunction_owner = self, \r\n\t\t\t\t\tlabel = label, \r\n\t\t\t\t\tposition = {-1, 0.05, 0.1}, \r\n\t\t\t\t\tscale = {0.2, 0.2, 0.2}, \r\n\t\t\t\t\twidth = 5000, \r\n\t\t\t\t\theight = 7000, \r\n\t\t\t\t\tfont_size = 200, \r\n\t\t\t\t\tcolor={0.8, 0.6, 0, 0.4},\r\n\t\t\t\t\tfont_color = {0, 0, 0, 10},\r\n\t\t\t\t\tvalue = \"Discription go Here\"\r\n\t\t\t\t\t}\t\t\t\t\t\r\n    discField = self.createInput(data)\r\n\t\tsetInputIndex(labelDis)\r\n    --This is how I found the positions to check for cards\r\n    --That GUID was a card I put on it\r\n    --local pos = self.positionToLocal(getObjectFromGUID(\"a6b1bd\").getPosition())\r\n    --print(pos.x)\r\n    --print(pos.y)\r\n    --print(pos.z)\r\n\r\n-- ** end : \r\nend\r\n\r\n\r\n-- * nilFunction : \r\nfunction nilFunction() return end\r\n-- * printFunction : \r\nfunction printFunction(text)\r\n\tprint(\"hi! - \", text )\r\n\tend\r\n-- * onCollisionEnter : \r\nfunction onCollisionEnter(collision_info)\r\n-- ** comment\r\n  -- collision_info table:\r\n  --   collision_object    Object\r\n  --   contact_points      Table     {Vector, ...}\r\n  --   relative_velocity   Vector\r\n-- ** if nil : \r\n  if collision_info.collision_object == nil\r\n  or collision_info.collision_object == self\r\n  or collision_info.collision_object.getGUID() == nil\r\n  or collision_info.collision_object.tag == \"Surface\"\r\n  or objectLoaded\r\n  then\r\n    return\r\n\t\tend\r\n-- ** debugPrint : \r\n\t -- debugPrint()\r\n\t-- visulZonsDebug(collision_info)\r\n-- ** isInZone : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tif isInZone(contactLocalPos) then\r\n\t\tlocal update = {value = collision_info.collision_object.getName()}\r\n\t\tupdateInput(\"Name\", update)\r\n\t\tlocal update = {value = collision_info.collision_object.getDescription()}\r\n\t\tupdateInput(\"Dis\", update)\r\n\t\tlastInGUID = collision_info.collision_object.getGUID()\r\n\t\t-- print (\"In Zone!!!\")\r\n\t\treturn\r\n-- ** isOutZone : \r\n\telseif isOutZone(contactLocalPos)  then\r\n\t\t-- print (\"OUT!!!\")\r\n\t\tcollision_info.collision_object.setName(self.getInputs()[inputIndex[labelName]+1].value)\r\n\t\tcollision_info.collision_object.setDescription(self.getInputs()[inputIndex[labelDis]+1].value)\r\n\t\tlastOutGUID = collision_info.collision_object.getGUID()\r\n\t\treturn\r\n\t\tend\r\n-- ** function \tend : \r\n\tend\r\n\r\n-- * Zone Functions : \r\n-- ** isInZone : \r\nfunction isInZone(point)\r\n\t if getDistant(point, pos_Center_In) < radiusInZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** isOutZone : \r\nfunction isOutZone(point)\r\n\t if getDistant(point, pos_Center_Out) < radiusOutZone then\r\n\t\t return true\t\r\n\t end\r\n\t return false\r\nend\r\n\r\n-- ** getDistant : \r\nfunction getDistant(point1, point2)\r\n\t-- print(\"Distance in\")\r\n\tlocal xDistance = math.abs(point1[1] - point2[1])\r\n\tlocal zDistance = math.abs(point1[3] - point2[3])\r\n\tlocal distance = xDistance^2 + zDistance^2\r\n\t-- print(\"Distance out\")\r\n\treturn math.sqrt(distance)\r\nend\r\n\r\n-- ** toLocalInvertXAverPoint : \r\nfunction toLocalInvertXAverPoint(contactRec)\r\n\tlocal point = contactRec[1]\r\n  for i=1 , 3 do\r\n\t\tlocal sum = 0\r\n\t\tfor y = 1 ,#contactRec do\r\n\t\t\t sum = sum + contactRec[y][i]\r\n\t\t\t\tend\r\n\t\tpoint[i] = sum / 4 \r\n\t\tend\r\n\tpoint = self.positionToLocal(point)\r\n\tpoint[1] = point[1] * (-1)\r\n\treturn point\r\nend\r\n\r\n-- * Debug Functions : \r\n-- ** debugPrint : \r\nfunction debugPrint()\r\n\tprint(\"function #\", debugCount)\r\n\tdebugCount = debugCount + 1\r\n\t-- print( debug.traceback(\"Stack trace\"))\r\n\tend\r\n\r\n-- ** spawnButton : \r\nfunction spawnButton(pos)\r\n\tcounter = counter + 1\r\n\tlocal data = {    click_function = \"+\", \r\n\t\t\t\t\t\t\t\t\t\tfunction_owner = self,\r\n\t\t\t\t\t\t\t\t\t\tlabel = counter,\r\n\t\t\t\t\t\t\t\t\t\tposition = pos,\r\n\t\t\t\t\t\t\t\t\t\tscale = {0.5, 0.5, 0.5},\r\n\t\t\t\t\t\t\t\t\t\twidth = 100, height = 100,\r\n\t\t\t\t\t\t\t\t\t\t-- color={1,1,1,0},\r\n\t\t\t\t\t\t\t\t\t\tfont_size = 300,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n  self.createButton(data)\r\n\tend\r\n\r\n-- ** spawnTest : \r\nfunction spawnTest(pos)\r\n\tlocal params = {} \r\n\tparams.type = '3DText' \r\n\t-- params.type = 'go_game_piece_black' \r\n\tparams.position = pos \r\n\tparams.rotation = {0, 0, 0} \r\n\tparams.scale = {0, 0, 0} \r\n\t-- params.callback = 'myCallbackFunction' \r\n\tparams.callback_owner = Global\r\n\tparams.snap_to_grid = false\r\n  params.params = {  \r\n\t\t\t\t\t\t\t-- sPlayer = sPlayer,\r\n\t\t\t\t\t\t\t-- iFontSize = 110,\r\n\t\t\t\t\t\t\t-- vRotation = vRot\r\n\t\t\t\t\t\t\t\tsText = 'HI!'\r\n\t    \t}\r\n\t-- params.params = {'myCallbackParams1', 'myCallbackParams2'}\r\n\tspawnObject(params)\r\n\tend\r\n\r\n-- ** visulZonsDebug : \r\nfunction visulZonsDebug(collision_info)\r\n-- *** objGuid : \r\n  local objGuid = collision_info.collision_object.getGUID()\r\n\tprint(objGuid)\r\n-- *** del\r\n\t-- print(\"colisen len =\", #collision_info.contact_points) \r\n\t-- print(\"zone IN coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_inZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_inZone)\r\n\t-- print(\"zone IN = \", counter)\r\n-- *** spawnButton : \r\n\tspawnButton(pos_Center_In)\r\n\tprint(\"zone pos_Center_In = \", counter)\r\n\tspawnButton(pos_Center_Out)\r\n\tprint(\"zone pos_Center_Out = \", counter)\r\n-- ***  del : \r\n\t-- findObjectsAtPosition(pos_inZone, zoneSize)\r\n\t-- print(\"zone OUT coordinat\")\r\n\t-- for k,v in pairs(self.positionToWorld(pos_outZone)) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(pos_outZone)\r\n\t-- print(\"zone pos_outZone = \", counter)\r\n\t-- print('Collision point:') \r\n\t-- for k,v in pairs(collision_info.contact_points[1]) do\r\n\t-- \tprint(k .. '=' .. v) \r\n\t-- \tend\r\n\t-- spawnButton(self.positionToLocal(collision_info.contact_points[1]))\r\n\t-- local posL = {}\r\n  -- for i=1,#collision_info.contact_points do\r\n\t-- \tposL = self.positionToLocal(collision_info.contact_points[i])\r\n\t\t-- print('Collision point G:', i, \" = \", counter) \r\n\t\t-- for k,v in pairs(collision_info.contact_points[i]) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- for k,v in pairs(self.positionToLocal(collision_info.contact_points[i])) do\r\n\t\t-- \t\tprint(k .. '=' .. v) \r\n\t\t-- \t\tend\r\n\t\t-- posL.x = posL.x * (-1)\r\n\t\t-- posL.y = posL.y * (-1)\r\n\t\t-- posL.z = posL.z * (-1)\r\n\t\t-- spawnButton(posL)\r\n\t\t-- print('Collision point L:', i, \" = \", counter) \r\n\t\t-- end\r\n-- *** toLocalInvertXAverPoint : \r\n\tlocal contactLocalPos = toLocalInvertXAverPoint(collision_info.contact_points)\r\n\tspawnButton(contactLocalPos)\r\n\tprint('Collision point = ', counter) \r\n\tprint('Distant to In zone ', getDistant(contactLocalPos, pos_Center_In)) \r\n\tprint('Distant to Out zone ', getDistant(contactLocalPos, pos_Center_Out)) \r\nend\r\n\r\n-- * Input fild Functions : \r\n-- ** updateInput : \r\nfunction updateInput(index,update)\r\n  if not inputIndex[index] then\r\n    print(\"[ff0000]<Error>[ffffff] Can't toggle input [\" .. index .. \"] = \", inputIndex[index],\".\" )\r\n\t\treturn\r\n\t\tend\r\n  update.index = inputIndex[index]\r\n  self.editInput(update)\r\n  -- self.editInput({index = inputIndex[index], scale = {show and 0.5 or 0,show and 0.5 or 0,show and 0.5 or 0}})\r\n\tend\r\n\r\n-- ** setInputIndex : \r\nfunction setInputIndex (index)\r\n\tif not inputIndex[index] then\r\n\t\t-- self.createInput(input_parameters)\r\n\t\tinputIndex[index] = #self.getInputs() - 1\r\n\telse\r\n\t\treturn inputIndex[index]\r\n\t\tend\r\n\tend\r\n",
      "LuaScriptState": "",
      "GUID": "6b2bbf"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 3.71313167,
        "posY": 3.43652129,
        "posZ": 20.3166237,
        "rotX": -8.537972E-07,
        "rotY": 179.99324,
        "rotZ": -3.96821E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "B Undead Army",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.10699,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"09e40f\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6448,\"z\":5.95},\"rot\":{\"x\":0,\"y\":149.9965,\"z\":0}},\"194afa\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.7039,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0013,\"z\":0}},\"23a34f\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"346db6\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"40eef0\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7141,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9985,\"z\":0}},\"64b468\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7141,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9985,\"z\":0}},\"64da0a\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"677e0b\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"6f2e28\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6883,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9888,\"z\":0}},\"7202c0\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"81f62d\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6265,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"8a8b04\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6981,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9888,\"z\":0}},\"96e4b4\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6918,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0114,\"z\":0}},\"b9eebd\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}},\"c853ed\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.7021,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0114,\"z\":0}},\"f054af\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.6239,\"z\":4.25},\"rot\":{\"x\":0,\"y\":179.9951,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "Name": "rpg_GOLEM",
          "Transform": {
            "posX": 5.94999838,
            "posY": 1.714086,
            "posZ": 5.949999,
            "rotX": 1.30266423E-10,
            "rotY": 179.9985,
            "rotZ": 9.931789E-06,
            "scaleX": 0.400000453,
            "scaleY": 0.400000453,
            "scaleZ": 0.400000453
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "64b468"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 5.949999,
            "posY": 1.62653947,
            "posZ": 4.249999,
            "rotX": 2.77521E-06,
            "rotY": 179.995117,
            "rotZ": 1.04474575E-05,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "81f62d"
        },
        {
          "Name": "rpg_VAMPIRE",
          "Transform": {
            "posX": 4.24999952,
            "posY": 1.69814909,
            "posZ": 5.95,
            "rotX": 9.817297E-10,
            "rotY": 179.988785,
            "rotZ": 1.00318393E-05,
            "scaleX": 0.425000459,
            "scaleY": 0.425000459,
            "scaleZ": 0.425000459
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "8a8b04"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 4.249999,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": -7.46597E-07,
            "rotY": 179.995117,
            "rotZ": 1.06745993E-05,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "677e0b"
        },
        {
          "Name": "rpg_GHOUL",
          "Transform": {
            "posX": 2.54999971,
            "posY": 1.70206177,
            "posZ": 5.949998,
            "rotX": 4.25908667E-07,
            "rotY": 180.011353,
            "rotZ": 9.8718E-06,
            "scaleX": 0.750000238,
            "scaleY": 0.750000238,
            "scaleZ": 0.750000238
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "c853ed"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 2.54999924,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": 5.34005267E-07,
            "rotY": 179.995117,
            "rotZ": 9.309779E-06,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "346db6"
        },
        {
          "Name": "rpg_MUMMY",
          "Transform": {
            "posX": 0.8499994,
            "posY": 1.7038641,
            "posZ": 5.949999,
            "rotX": 4.26767741E-07,
            "rotY": 180.0013,
            "rotZ": 1.04587307E-05,
            "scaleX": 0.67500025,
            "scaleY": 0.67500025,
            "scaleZ": 0.67500025
          },
          "Nickname": "Queen",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "194afa"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": 0.8499994,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": -1.173509E-06,
            "rotY": 179.995117,
            "rotZ": 1.00845737E-05,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "f054af"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": -0.8500004,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": 9.60904E-07,
            "rotY": 179.995117,
            "rotZ": 9.57521E-06,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "23a34f"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": -0.8500004,
            "posY": 1.64478326,
            "posZ": 5.949999,
            "rotX": 1.208436E-06,
            "rotY": 149.996475,
            "rotZ": 8.632326E-06,
            "scaleX": 0.800000131,
            "scaleY": 0.800000131,
            "scaleZ": 0.800000131
          },
          "Nickname": "King",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "09e40f"
        },
        {
          "Name": "rpg_GHOUL",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.69184279,
            "posZ": 5.949999,
            "rotX": 4.25917818E-07,
            "rotY": 180.011368,
            "rotZ": 9.765077E-06,
            "scaleX": 0.750000238,
            "scaleY": 0.750000238,
            "scaleZ": 0.750000238
          },
          "Nickname": "Bishop",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": true,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "96e4b4"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": -2.55000019,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": 7.47489764E-07,
            "rotY": 179.995117,
            "rotZ": 1.02721933E-05,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7202c0"
        },
        {
          "Name": "rpg_VAMPIRE",
          "Transform": {
            "posX": -4.25,
            "posY": 1.688322,
            "posZ": 5.949999,
            "rotX": -8.528023E-07,
            "rotY": 179.988785,
            "rotZ": 9.925203E-06,
            "scaleX": 0.425000459,
            "scaleY": 0.425000459,
            "scaleZ": 0.425000459
          },
          "Nickname": "Knight",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "6f2e28"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": -4.25,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": 3.2055695E-07,
            "rotY": 179.995117,
            "rotZ": 9.194311E-06,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "64da0a"
        },
        {
          "Name": "rpg_SKELETON_KNIGHT",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.62387311,
            "posZ": 4.249999,
            "rotX": -7.46597E-07,
            "rotY": 179.995117,
            "rotZ": 1.06745474E-05,
            "scaleX": 0.475000441,
            "scaleY": 0.475000441,
            "scaleZ": 0.475000441
          },
          "Nickname": "Pawn",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "b9eebd"
        },
        {
          "Name": "rpg_GOLEM",
          "Transform": {
            "posX": -5.95000029,
            "posY": 1.71408629,
            "posZ": 5.94999838,
            "rotX": -9.603655E-07,
            "rotY": 179.9985,
            "rotZ": 9.915125E-06,
            "scaleX": 0.400000453,
            "scaleY": 0.400000453,
            "scaleZ": 0.400000453
          },
          "Nickname": "Rook",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.2941176,
            "g": 0.2941176,
            "b": 0.2941176
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "RPGmode": false,
          "RPGdead": false,
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "40eef0"
        }
      ],
      "GUID": "05f35d"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": -0.7064772,
        "posY": 3.436481,
        "posZ": 20.2490921,
        "rotX": -1.70750627E-06,
        "rotY": 179.992966,
        "rotZ": 6.68782945E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "B Demon Army",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.10699,
        "b": 0.7019608
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 0,
      "XmlUI": "",
      "LuaScript": "function updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects()\r\n    createSetupActionButtons()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects()\r\n    local howManyButtons = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj) end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color={0.75,0.25,0.25,0.6},\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons()\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj)\r\n    local color = {0,1,0,0.6}\r\n    if memoryList[obj.getGUID()] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        memoryList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        self.editButton({index=index, color=color})\r\n        memoryList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    if next(memoryList) == nil then\r\n        broadcastToAll(\"You cannot submit without any selections.\", {0.75, 0.25, 0.25})\r\n    else\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot,\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local deltaPos = {}\r\n    local bounds = obj.getBounds()\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + (bounds.size.y - bounds.offset.y)\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"0934e1\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0112,\"z\":0}},\"0aae1e\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0112,\"z\":0}},\"2af062\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6745,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9886,\"z\":0}},\"47956e\":{\"lock\":false,\"pos\":{\"x\":2.55,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0112,\"z\":0}},\"62b351\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.7407,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0046,\"z\":0}},\"68909f\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0112,\"z\":0}},\"a3f85f\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0113,\"z\":0}},\"a85a0c\":{\"lock\":false,\"pos\":{\"x\":-4.25,\"y\":1.7065,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9999,\"z\":0}},\"ae7026\":{\"lock\":false,\"pos\":{\"x\":5.95,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0113,\"z\":0}},\"c1297c\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6778,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0113,\"z\":0}},\"cfc327\":{\"lock\":false,\"pos\":{\"x\":4.25,\"y\":1.6958,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9999,\"z\":0}},\"ddf341\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.6864,\"z\":4.25},\"rot\":{\"x\":0,\"y\":180.0113,\"z\":0}},\"e035fe\":{\"lock\":false,\"pos\":{\"x\":-2.55,\"y\":1.6828,\"z\":5.95},\"rot\":{\"x\":0,\"y\":179.9886,\"z\":0}},\"ed09fb\":{\"lock\":false,\"pos\":{\"x\":-0.85,\"y\":1.7601,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0113,\"z\":0}},\"f5e442\":{\"lock\":false,\"pos\":{\"x\":0.85,\"y\":1.756,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0007,\"z\":0}},\"f7a802\":{\"lock\":false,\"pos\":{\"x\":-5.95,\"y\":1.7563,\"z\":5.95},\"rot\":{\"x\":0,\"y\":180.0046,\"z\":0}}}}",
      "GUID": "2cf8bf"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": 0.8499991,
        "posY": 1.68140018,
        "posZ": -0.850002468,
        "rotX": 1.50069991E-06,
        "rotY": 0.0008180419,
        "rotZ": 1.0378697E-05,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1234c0"
    },
    {
      "Name": "rpg_KNIGHT",
      "Transform": {
        "posX": -0.850000441,
        "posY": 1.68592548,
        "posZ": -5.95000124,
        "rotX": 1.93764276E-06,
        "rotY": 0.000390085363,
        "rotZ": 6.803515E-06,
        "scaleX": 0.525000453,
        "scaleY": 0.525000453,
        "scaleZ": 0.525000453
      },
      "Nickname": "King",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "170a26"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": 5.949987,
        "posY": 1.68139982,
        "posZ": -4.25,
        "rotX": 8.937283E-07,
        "rotY": 0.0008317355,
        "rotZ": 9.071351E-06,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6ba9d8"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": 2.47240281,
        "posY": 1.6814003,
        "posZ": -0.890087962,
        "rotX": 8.57281634E-07,
        "rotY": 350.8511,
        "rotZ": 1.21365611E-05,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6e720b"
    },
    {
      "Name": "rpg_MAGE",
      "Transform": {
        "posX": 0.8500014,
        "posY": 1.68795359,
        "posZ": -5.94999933,
        "rotX": -7.14676048E-07,
        "rotY": 0.0106785139,
        "rotZ": 1.04586607E-05,
        "scaleX": 0.575000346,
        "scaleY": 0.575000346,
        "scaleZ": 0.575000346
      },
      "Nickname": "Queen",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7e1d51"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": -5.95000029,
        "posY": 1.68140006,
        "posZ": -4.25,
        "rotX": 3.86790362E-07,
        "rotY": 0.000845377566,
        "rotZ": 1.02719659E-05,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "8134e4"
    },
    {
      "Name": "rpg_THIEF",
      "Transform": {
        "posX": -2.55,
        "posY": 1.6687963,
        "posZ": -5.95,
        "rotX": 3.70185433E-07,
        "rotY": 6.128578E-05,
        "rotZ": 1.02853046E-05,
        "scaleX": 0.475000471,
        "scaleY": 0.475000471,
        "scaleZ": 0.475000471
      },
      "Nickname": "Bishop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "86e94d"
    },
    {
      "Name": "rpg_CYCLOP",
      "Transform": {
        "posX": 5.95000744,
        "posY": 1.6998359,
        "posZ": -5.95000029,
        "rotX": 3.71572241E-06,
        "rotY": 0.000220183225,
        "rotZ": 1.197772E-05,
        "scaleX": 0.475000441,
        "scaleY": 0.475000441,
        "scaleZ": 0.475000441
      },
      "Nickname": "Rook",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9ef696"
    },
    {
      "Name": "rpg_CYCLOP",
      "Transform": {
        "posX": -5.95,
        "posY": 1.6998359,
        "posZ": -5.95,
        "rotX": 3.60501076E-06,
        "rotY": 0.000223732568,
        "rotZ": 1.10090432E-05,
        "scaleX": 0.475000441,
        "scaleY": 0.475000441,
        "scaleZ": 0.475000441
      },
      "Nickname": "Rook",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9ff8c9"
    },
    {
      "Name": "rpg_THIEF",
      "Transform": {
        "posX": 2.54999971,
        "posY": 1.66879654,
        "posZ": -5.95,
        "rotX": -9.605011E-07,
        "rotY": 5.184173E-05,
        "rotZ": 1.27799221E-05,
        "scaleX": 0.475000471,
        "scaleY": 0.475000471,
        "scaleZ": 0.475000471
      },
      "Nickname": "Bishop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b03946"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": 4.249999,
        "posY": 1.68140054,
        "posZ": -2.550004,
        "rotX": 4.962522E-06,
        "rotY": 0.000811304955,
        "rotZ": 5.22939763E-06,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d1f0fd"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": -0.849998653,
        "posY": 1.6814003,
        "posZ": -2.55001783,
        "rotX": -2.31451349E-06,
        "rotY": -0.000140294011,
        "rotZ": 1.09122957E-05,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d5b6de"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": -4.25,
        "posY": 1.68140042,
        "posZ": -4.25,
        "rotX": 2.96814437E-06,
        "rotY": 0.000840311637,
        "rotZ": 7.177056E-06,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d61761"
    },
    {
      "Name": "rpg_RANGER",
      "Transform": {
        "posX": 4.249996,
        "posY": 1.672558,
        "posZ": -5.95000029,
        "rotX": 1.75007153E-06,
        "rotY": 0.0115727689,
        "rotZ": 8.231087E-06,
        "scaleX": 0.525000453,
        "scaleY": 0.525000453,
        "scaleZ": 0.525000453
      },
      "Nickname": "Knight",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "eb0a0a"
    },
    {
      "Name": "rpg_WARRIOR",
      "Transform": {
        "posX": -2.55000973,
        "posY": 1.68140018,
        "posZ": -0.8500144,
        "rotX": 1.98760745E-06,
        "rotY": 0.0009871707,
        "rotZ": 9.791734E-06,
        "scaleX": 0.6000003,
        "scaleY": 0.6000003,
        "scaleZ": 0.6000003
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f97572"
    },
    {
      "Name": "rpg_RANGER",
      "Transform": {
        "posX": -4.25000048,
        "posY": 1.67255783,
        "posZ": -5.95000267,
        "rotX": 1.89011018E-06,
        "rotY": 0.0118119288,
        "rotZ": 8.391188E-06,
        "scaleX": 0.525000453,
        "scaleY": 0.525000453,
        "scaleZ": 0.525000453
      },
      "Nickname": "Knight",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ffec2c"
    },
    {
      "Name": "Chess_Pawn",
      "Transform": {
        "posX": -32.82291,
        "posY": 6.07969427,
        "posZ": 7.748446,
        "rotX": 8.219562E-05,
        "rotY": 89.99988,
        "rotZ": -5.43578171E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "557d01"
    },
    {
      "Name": "Chess_Rook",
      "Transform": {
        "posX": -32.8034477,
        "posY": 6.185594,
        "posZ": 1.66485929,
        "rotX": -4.996716E-05,
        "rotY": 1.56246188E-05,
        "rotZ": -5.90599848E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Rook",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "324c99"
    },
    {
      "Name": "Chess_Knight",
      "Transform": {
        "posX": -32.92613,
        "posY": 6.50818729,
        "posZ": -4.72764158,
        "rotX": -0.00138686365,
        "rotY": 3.03923516E-05,
        "rotZ": -0.00213211472,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Knight",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "2a48da"
    },
    {
      "Name": "Chess_Bishop",
      "Transform": {
        "posX": -32.5086975,
        "posY": 6.366542,
        "posZ": -10.8459988,
        "rotX": -0.000264768023,
        "rotY": 0.00017099503,
        "rotZ": -0.00044264656,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Bishop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "bfce5f"
    },
    {
      "Name": "Chess_King",
      "Transform": {
        "posX": -32.64924,
        "posY": 6.81664944,
        "posZ": -16.9481544,
        "rotX": 3.893117E-05,
        "rotY": 2.15247728E-05,
        "rotZ": -0.0002815861,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "King",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ec24b3"
    },
    {
      "Name": "Chess_Queen",
      "Transform": {
        "posX": -32.5899658,
        "posY": 6.711589,
        "posZ": -23.179985,
        "rotX": -0.000146903883,
        "rotY": -0.000168044877,
        "rotZ": -0.000185294266,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Queen",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9558824,
        "g": 0.9558824,
        "b": 0.9558824
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ea6dfa"
    },
    {
      "Name": "rpg_OGRE",
      "Transform": {
        "posX": 5.94999027,
        "posY": 1.74067926,
        "posZ": 5.949994,
        "rotX": -1.2810525E-06,
        "rotY": 180.004379,
        "rotZ": 1.024857E-05,
        "scaleX": 0.4500004,
        "scaleY": 0.4500004,
        "scaleZ": 0.4500004
      },
      "Nickname": "Rook",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "62b351"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": 5.95,
        "posY": 1.67777991,
        "posZ": 4.24999857,
        "rotX": -9.795447E-10,
        "rotY": 180.011185,
        "rotZ": 1.00318393E-05,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ae7026"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": 4.250002,
        "posY": 1.67777944,
        "posZ": 4.2500186,
        "rotX": -1.7084252E-06,
        "rotY": 180.010712,
        "rotZ": 9.39135E-06,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "68909f"
    },
    {
      "Name": "rpg_MANTICORA",
      "Transform": {
        "posX": 4.25,
        "posY": 1.6958251,
        "posZ": 5.94999933,
        "rotX": -8.53764561E-07,
        "rotY": 179.9999,
        "rotZ": 1.00699863E-05,
        "scaleX": 0.375000447,
        "scaleY": 0.375000447,
        "scaleZ": 0.375000447
      },
      "Nickname": "Knight",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cfc327"
    },
    {
      "Name": "rpg_BASILISK",
      "Transform": {
        "posX": 2.550007,
        "posY": 1.67452657,
        "posZ": 5.950001,
        "rotX": 4.279793E-07,
        "rotY": 179.988647,
        "rotZ": 1.10223073E-05,
        "scaleX": 0.375000447,
        "scaleY": 0.375000447,
        "scaleZ": 0.375000447
      },
      "Nickname": "Bishop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "2af062"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": 2.549999,
        "posY": 1.67777967,
        "posZ": 0.849999368,
        "rotX": -1.06580988E-09,
        "rotY": 180.011215,
        "rotZ": 1.08856138E-05,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "47956e"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": 0.8500008,
        "posY": 1.67777967,
        "posZ": 0.849999547,
        "rotX": -8.552953E-10,
        "rotY": 180.0112,
        "rotZ": 8.75118E-06,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0934e1"
    },
    {
      "Name": "rpg_EVIL_WATCHER",
      "Transform": {
        "posX": 0.8500017,
        "posY": 1.72994339,
        "posZ": 5.950015,
        "rotX": -8.531729E-07,
        "rotY": 179.993317,
        "rotZ": 1.02986924E-05,
        "scaleX": 0.6250003,
        "scaleY": 0.6250003,
        "scaleZ": 0.6250003
      },
      "Nickname": "Queen",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f5e442"
    },
    {
      "Name": "rpg_CHIMERA",
      "Transform": {
        "posX": -0.849998236,
        "posY": 1.72606361,
        "posZ": 5.94999647,
        "rotX": -8.929603E-10,
        "rotY": 180.011414,
        "rotZ": 8.964623E-06,
        "scaleX": 0.350000441,
        "scaleY": 0.350000441,
        "scaleZ": 0.350000441
      },
      "Nickname": "King",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ed09fb"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": -0.8500004,
        "posY": 1.67777979,
        "posZ": 2.54999876,
        "rotX": 5.12192855E-06,
        "rotY": 180.011261,
        "rotZ": 7.25757945E-06,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a3f85f"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": -2.55,
        "posY": 1.67777967,
        "posZ": 0.850000262,
        "rotX": -3.416101E-06,
        "rotY": 180.011261,
        "rotZ": 1.02449476E-05,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c1297c"
    },
    {
      "Name": "rpg_BASILISK",
      "Transform": {
        "posX": -2.54999542,
        "posY": 1.67452621,
        "posZ": 5.95,
        "rotX": 4.27876529E-07,
        "rotY": 179.988647,
        "rotZ": 9.985107E-06,
        "scaleX": 0.375000447,
        "scaleY": 0.375000447,
        "scaleZ": 0.375000447
      },
      "Nickname": "Bishop",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "e035fe"
    },
    {
      "Name": "rpg_MANTICORA",
      "Transform": {
        "posX": -0.8507652,
        "posY": 1.69582558,
        "posZ": 4.24991465,
        "rotX": 3.7352558E-07,
        "rotY": 180.0,
        "rotZ": 9.100735E-06,
        "scaleX": 0.375000447,
        "scaleY": 0.375000447,
        "scaleZ": 0.375000447
      },
      "Nickname": "Knight",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a85a0c"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": -4.25,
        "posY": 1.67777991,
        "posZ": 4.25,
        "rotX": -9.637691E-10,
        "rotY": 180.011246,
        "rotZ": 9.818396E-06,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0aae1e"
    },
    {
      "Name": "rpg_CERBERUS",
      "Transform": {
        "posX": -5.95,
        "posY": 1.67777956,
        "posZ": 4.25,
        "rotX": -1.70838393E-06,
        "rotY": 180.01123,
        "rotZ": 8.537568E-06,
        "scaleX": 0.175000012,
        "scaleY": 0.175000012,
        "scaleZ": 0.175000012
      },
      "Nickname": "Pawn",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": false,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ddf341"
    },
    {
      "Name": "rpg_OGRE",
      "Transform": {
        "posX": -5.95,
        "posY": 1.7406795,
        "posZ": 5.95,
        "rotX": -4.07020029E-10,
        "rotY": 180.004639,
        "rotZ": 1.00518509E-05,
        "scaleX": 0.4500004,
        "scaleY": 0.4500004,
        "scaleZ": 0.4500004
      },
      "Nickname": "Rook",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.2941176,
        "g": 0.2941176,
        "b": 0.2941176
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "RPGmode": true,
      "RPGdead": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f7a802"
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 21.7485352,
        "posY": 1.29019988,
        "posZ": 6.65515,
        "rotX": 270.0,
        "rotY": 6.34230673E-06,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "13bf87",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 22.827322,
        "posY": 1.30999982,
        "posZ": 8.262441,
        "rotX": -1.91707613E-06,
        "rotY": 1.67346727E-07,
        "rotZ": 1.44972978E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0588639081,
        "g": 0.0541051775,
        "b": 0.0541051775
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1f8da1",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 21.6033916,
        "posY": 1.29019988,
        "posZ": 4.906851,
        "rotX": 270.0,
        "rotY": -1.35707023E-05,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7467c7",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 22.7592678,
        "posY": 1.30999982,
        "posZ": 6.90664673,
        "rotX": -1.55097268E-06,
        "rotY": 5.71797955E-06,
        "rotZ": 1.417844E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0552372038,
        "g": 0.7794118,
        "b": 0.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 2,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "70a8bb",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        }
      ]
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 23.0937672,
        "posY": 1.31,
        "posZ": 5.18578339,
        "rotX": -1.10727308E-06,
        "rotY": -9.777931E-06,
        "rotZ": 1.14692307E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.4235294,
        "b": 0.996078432
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 3,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0856b2",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        }
      ]
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 22.97111,
        "posY": 1.30999982,
        "posZ": 3.80672383,
        "rotX": -1.45718809E-06,
        "rotY": -5.709465E-07,
        "rotZ": 1.44896114E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.996078432,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c5c57d",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 16.16603,
        "posY": 1.10848117,
        "posZ": 8.65601,
        "rotX": 270.678955,
        "rotY": 197.484024,
        "rotZ": 254.587372,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5db6d9",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 15.8539171,
        "posY": 1.10856533,
        "posZ": 8.688679,
        "rotX": 0.230428889,
        "rotY": 179.923065,
        "rotZ": 89.96491,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "66587c",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 16.25747,
        "posY": 1.11550367,
        "posZ": 8.950807,
        "rotX": 358.3163,
        "rotY": 272.377319,
        "rotZ": 268.443237,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "90c39c",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 15.9289808,
        "posY": 1.10857308,
        "posZ": 8.986969,
        "rotX": 0.231931672,
        "rotY": 1.81261611,
        "rotZ": 89.96899,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "81576a",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 18.9867268,
        "posY": 1.09208024,
        "posZ": 1.27657759,
        "rotX": 1.52612074E-06,
        "rotY": 245.20108,
        "rotZ": 3.40372685E-06,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3ee1b5",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 0.09430203,
        "posY": 1.29207993,
        "posZ": -13.4957342,
        "rotX": 3.24434E-05,
        "rotY": 298.14856,
        "rotZ": 270.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dc0818",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 19.063097,
        "posY": 1.09208,
        "posZ": 0.9847401,
        "rotX": 1.70754731E-06,
        "rotY": 244.213608,
        "rotZ": 270.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "508d3e",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 18.74557,
        "posY": 1.09207988,
        "posZ": 0.548823953,
        "rotX": 270.0,
        "rotY": 93.4195251,
        "rotZ": 0.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "02f290",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 18.7367172,
        "posY": 1.09208,
        "posZ": 0.835785,
        "rotX": -1.17828233E-06,
        "rotY": 180.914871,
        "rotZ": 180.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dff70c",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 0.783635855,
        "posY": 1.06,
        "posZ": 13.87822,
        "rotX": 1.90722608E-06,
        "rotY": -1.29588966E-06,
        "rotZ": -2.83700228E-06,
        "scaleX": 1.14696169,
        "scaleY": 1.0,
        "scaleZ": 1.14696169
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/0Wu3Hhf.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "--This is the basic distance from the tool a die is spawned\r\n--This number scales with the scale of the tool\r\ndistanceFromTool = 3\r\n\r\n--This is the option to collect the dice into ascending order\r\norganizeDice = true\r\n\r\n--Enables or disables auto-cleanup\r\n-- -1 is off, 0 is no delay, and 1+ is a delay of that many seconds\r\nautoCleanDelay = -1\r\n\r\n\r\n--End of variables to edit unless you know how to script\r\n\r\nfunction onSave()\r\n    local data_to_save = {['hmd']=howManyDice, ['pr']=printResults}\r\n    saved_data = JSON.encode(data_to_save)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        howManyDice = loaded_data.hmd\r\n        printResults = loaded_data.pr\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        howManyDice = 1\r\n        printResults = false\r\n    end\r\n\r\n    math.randomseed(os.time())\r\n    diceBeingRolled = {}\r\n    clearLock = false\r\n    rollLock = false\r\n\r\n    createDisplayAndFunctionButtons()\r\nend\r\n\r\n\r\n--Rolling\r\n\r\n\r\n--Activates rolling process\r\nfunction buttonClick_roll(_, rollerColor)\r\n    local dieOnPad = findDieOnPad()\r\n    if dieOnPad ~= nil then\r\n        if rollLock == false then\r\n            --Destroys old dice\r\n            buttonClick_clear(_, rollerColor)\r\n            --Spawns and rolls new nice\r\n            rollThisDieType(dieOnPad, rollerColor)\r\n        else\r\n            broadcastToColor(\"Please wait until the dice come to a complete stop before rolling again.\", rollerColor, {1,1,1})\r\n        end\r\n    else\r\n        broadcastToColor(\"Place the die type you want to roll onto the pad and try again.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\nfunction rollThisDieType(dieOnPad, rollerColor)\r\n    function coroutine_rolling()\r\n        diceBeingRolled = {}\r\n        clearLock = true\r\n        rollLock = true\r\n        local angle = 360/howManyDice\r\n        for i=1, howManyDice do\r\n            local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n            --Makes a duplicate of the die on the pad\r\n            local die = dieOnPad.clone({position=pos})\r\n            table.insert(diceBeingRolled, die)\r\n            --Gives it a random rotation and waits 1 frame for it to happen\r\n            die.setRotation(randomRotation())\r\n            coroutine.yield(0) coroutine.yield(0) coroutine.yield(0)\r\n\r\n            --Apply some rotational force in a random direction\r\n            --die.addTorque(randomRotation())\r\n            die.roll()\r\n\r\n            wait(0.05)\r\n        end\r\n        watchForDiceToStop(rollerColor)\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rolling\")\r\nend\r\n\r\nfunction watchForDiceToStop(rollerColor)\r\n    function coroutine_placing()\r\n        dieValueTable, rollString, totalRollValue = {}, \"\", 0\r\n        local angle = 360/howManyDice\r\n        --Wait for dice to stop moving after their roll\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            while die.resting == false do\r\n                coroutine.yield(0)\r\n            end\r\n            local rollValue = die.getValue()\r\n            totalRollValue = totalRollValue + rollValue\r\n            table.insert(dieValueTable, {die=die, val=rollValue})\r\n        end\r\n        --Sort the dice by their .getValue() in ascending order\r\n        local sort_func = function(a,b) return a.val < b.val end\r\n        table.sort(dieValueTable, sort_func)\r\n        --Move the dice into order and/or prints\r\n        for i, entry in ipairs(dieValueTable) do\r\n            --Organizes dice\r\n            if organizeDice == true then\r\n                local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n                pos.y = pos.y + 0.5\r\n                entry.die.setPositionSmooth(pos)\r\n            end\r\n            --Assembles print values\r\n            if i ~= 1 then rollString = rollString .. \", \" end\r\n            rollString = rollString .. entry.val\r\n        end\r\n\r\n        rollString = rollString .. \"   TOTAL: \" .. totalRollValue\r\n\r\n        if printResults == true then\r\n            broadcastToAll(Player[rollerColor].steam_name .. \" rolled: \" .. rollString, stringColorToRGB(rollerColor))\r\n        end\r\n\r\n        clearLock = false\r\n        rollLock = false\r\n\r\n        if autoCleanDelay ~= -1 then\r\n            Timer.create({\r\n                identifier=\"uniqueDelayName\"..self.getGUID(),\r\n                delay=autoCleanDelay, function_owner=self, function_name=\"autoClearTimerFunction\"\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_placing\")\r\nend\r\n\r\n\r\n--Printing\r\n\r\n\r\n--Enables/disables printing of results\r\nfunction buttonClick_print()\r\n    if printResults == false then printResults = true\r\n    else printResults = false\r\n    end\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    self.editButton({index=2, label=printStatus})\r\nend\r\n\r\n\r\n--Clearing\r\n\r\n\r\n--Clears rolled dice when called\r\nfunction buttonClick_clear(_, rollerColor)\r\n    --This line kills and delayed auto-cleanup that might be pending\r\n    Timer.destroy(\"uniqueDelayName\"..self.getGUID())\r\n\r\n    if clearLock == false then\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            if die ~= nil then\r\n                destroyObject(die)\r\n            end\r\n        end\r\n    else\r\n        broadcastToColor(\"Please do not hit clear until dice come to a complete stop.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\n--Timer function which triggers clear when acitvated\r\nfunction autoClearTimerFunction()\r\n    buttonClick_clear()\r\nend\r\n\r\n\r\n--Plus and Minus buttons\r\n\r\n\r\n--Adds to counter (how many to roll)\r\nfunction buttonClick_plus()\r\n    howManyDice = howManyDice + 1\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n--Subtracts from counter (how many to roll)\r\nfunction buttonClick_minus()\r\n    if howManyDice > 1 then howManyDice = howManyDice - 1 end\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n\r\n--Info finding utility\r\n\r\n\r\n--Cast to check for object on pad.\r\nfunction findDieOnPad()\r\n    local pos = self.getPosition()\r\n    local objectsInArea = Physics.cast({\r\n        origin=pos, type=2, size={0.2,0.1,0.2},\r\n        direction={0,1,0}, max_distance=3\r\n    })\r\n    for _, entry in ipairs(objectsInArea) do\r\n        if entry.hit_object.tag == \"Dice\" then\r\n            return entry.hit_object\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(object, distance, angle)\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n\tlocal posX = oPos.x + math.sin( math.rad(angle+oRot.y) ) * distance\r\n\tlocal posY = oPos.y\r\n\tlocal posZ = oPos.z + math.cos( math.rad(angle+oRot.y) ) * distance\r\n\treturn {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Wait, used with corotuine\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n--For print/roll, used 2 buttons, 1 display and 1 hidden for functionality\r\n--\r\nfunction createDisplayAndFunctionButtons()\r\n    --Number display\r\n    local params = {\r\n        label=howManyDice, click_function=\"buttonClick_roll\",\r\n        function_owner=self, position={0,0.1,1.45}, height=0, width=0,\r\n        font_size=320, font_color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {0,0,0,0}\r\n    self.createButton(params)--function\r\n\r\n    --Print ON/OFF\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    params = {\r\n        label=printStatus, click_function=\"buttonClick_print\",\r\n        function_owner=self, position={0.7,0.1,-1.1}, height=0, width=0,\r\n        font_size=118, font_color={1,1,1}, color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {1,1,1,0}\r\n    params.position={0.7,0.1,-1.22}\r\n    self.createButton(params)--function\r\n\r\n    --Clear\r\n    params = {\r\n        click_function=\"buttonClick_clear\", function_owner=self,\r\n        position={-0.7,0.1,-1.22}, height=350, width=350, color={1,1,1,0}\r\n    }\r\n    self.createButton(params)\r\n\r\n    --Plus and Minus buttons\r\n    params={function_owner=self, height=350, width=350, color={0,0,0,0}}\r\n    params.click_function, params.position = \"buttonClick_minus\", {-1.42,0.1,0}\r\n    self.createButton(params)--function\r\n    params.click_function, params.position = \"buttonClick_plus\", {1.42,0.1,0}\r\n    self.createButton(params)--function\r\nend\r\n",
      "LuaScriptState": "{\"hmd\":5,\"pr\":false}",
      "GUID": "e1b67b",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -8.384346E-07,
            "y": 0.100000024,
            "z": 0.000162183074
          }
        }
      ]
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -0.0507687666,
        "posY": 1.06,
        "posZ": -13.4093523,
        "rotX": 7.11721668E-07,
        "rotY": 179.974365,
        "rotZ": -2.391594E-06,
        "scaleX": 1.14696169,
        "scaleY": 1.0,
        "scaleZ": 1.14696169
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/0Wu3Hhf.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "--This is the basic distance from the tool a die is spawned\r\n--This number scales with the scale of the tool\r\ndistanceFromTool = 3\r\n\r\n--This is the option to collect the dice into ascending order\r\norganizeDice = true\r\n\r\n--Enables or disables auto-cleanup\r\n-- -1 is off, 0 is no delay, and 1+ is a delay of that many seconds\r\nautoCleanDelay = -1\r\n\r\n\r\n--End of variables to edit unless you know how to script\r\n\r\nfunction onSave()\r\n    local data_to_save = {['hmd']=howManyDice, ['pr']=printResults}\r\n    saved_data = JSON.encode(data_to_save)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        howManyDice = loaded_data.hmd\r\n        printResults = loaded_data.pr\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        howManyDice = 1\r\n        printResults = false\r\n    end\r\n\r\n    math.randomseed(os.time())\r\n    diceBeingRolled = {}\r\n    clearLock = false\r\n    rollLock = false\r\n\r\n    createDisplayAndFunctionButtons()\r\nend\r\n\r\n\r\n--Rolling\r\n\r\n\r\n--Activates rolling process\r\nfunction buttonClick_roll(_, rollerColor)\r\n    local dieOnPad = findDieOnPad()\r\n    if dieOnPad ~= nil then\r\n        if rollLock == false then\r\n            --Destroys old dice\r\n            buttonClick_clear(_, rollerColor)\r\n            --Spawns and rolls new nice\r\n            rollThisDieType(dieOnPad, rollerColor)\r\n        else\r\n            broadcastToColor(\"Please wait until the dice come to a complete stop before rolling again.\", rollerColor, {1,1,1})\r\n        end\r\n    else\r\n        broadcastToColor(\"Place the die type you want to roll onto the pad and try again.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\nfunction rollThisDieType(dieOnPad, rollerColor)\r\n    function coroutine_rolling()\r\n        diceBeingRolled = {}\r\n        clearLock = true\r\n        rollLock = true\r\n        local angle = 360/howManyDice\r\n        for i=1, howManyDice do\r\n            local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n            --Makes a duplicate of the die on the pad\r\n            local die = dieOnPad.clone({position=pos})\r\n            table.insert(diceBeingRolled, die)\r\n            --Gives it a random rotation and waits 1 frame for it to happen\r\n            die.setRotation(randomRotation())\r\n            coroutine.yield(0) coroutine.yield(0) coroutine.yield(0)\r\n\r\n            --Apply some rotational force in a random direction\r\n            --die.addTorque(randomRotation())\r\n            die.roll()\r\n\r\n            wait(0.05)\r\n        end\r\n        watchForDiceToStop(rollerColor)\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rolling\")\r\nend\r\n\r\nfunction watchForDiceToStop(rollerColor)\r\n    function coroutine_placing()\r\n        dieValueTable, rollString, totalRollValue = {}, \"\", 0\r\n        local angle = 360/howManyDice\r\n        --Wait for dice to stop moving after their roll\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            while die.resting == false do\r\n                coroutine.yield(0)\r\n            end\r\n            local rollValue = die.getValue()\r\n            totalRollValue = totalRollValue + rollValue\r\n            table.insert(dieValueTable, {die=die, val=rollValue})\r\n        end\r\n        --Sort the dice by their .getValue() in ascending order\r\n        local sort_func = function(a,b) return a.val < b.val end\r\n        table.sort(dieValueTable, sort_func)\r\n        --Move the dice into order and/or prints\r\n        for i, entry in ipairs(dieValueTable) do\r\n            --Organizes dice\r\n            if organizeDice == true then\r\n                local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n                pos.y = pos.y + 0.5\r\n                entry.die.setPositionSmooth(pos)\r\n            end\r\n            --Assembles print values\r\n            if i ~= 1 then rollString = rollString .. \", \" end\r\n            rollString = rollString .. entry.val\r\n        end\r\n\r\n        rollString = rollString .. \"   TOTAL: \" .. totalRollValue\r\n\r\n        if printResults == true then\r\n            broadcastToAll(Player[rollerColor].steam_name .. \" rolled: \" .. rollString, stringColorToRGB(rollerColor))\r\n        end\r\n\r\n        clearLock = false\r\n        rollLock = false\r\n\r\n        if autoCleanDelay ~= -1 then\r\n            Timer.create({\r\n                identifier=\"uniqueDelayName\"..self.getGUID(),\r\n                delay=autoCleanDelay, function_owner=self, function_name=\"autoClearTimerFunction\"\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_placing\")\r\nend\r\n\r\n\r\n--Printing\r\n\r\n\r\n--Enables/disables printing of results\r\nfunction buttonClick_print()\r\n    if printResults == false then printResults = true\r\n    else printResults = false\r\n    end\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    self.editButton({index=2, label=printStatus})\r\nend\r\n\r\n\r\n--Clearing\r\n\r\n\r\n--Clears rolled dice when called\r\nfunction buttonClick_clear(_, rollerColor)\r\n    --This line kills and delayed auto-cleanup that might be pending\r\n    Timer.destroy(\"uniqueDelayName\"..self.getGUID())\r\n\r\n    if clearLock == false then\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            if die ~= nil then\r\n                destroyObject(die)\r\n            end\r\n        end\r\n    else\r\n        broadcastToColor(\"Please do not hit clear until dice come to a complete stop.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\n--Timer function which triggers clear when acitvated\r\nfunction autoClearTimerFunction()\r\n    buttonClick_clear()\r\nend\r\n\r\n\r\n--Plus and Minus buttons\r\n\r\n\r\n--Adds to counter (how many to roll)\r\nfunction buttonClick_plus()\r\n    howManyDice = howManyDice + 1\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n--Subtracts from counter (how many to roll)\r\nfunction buttonClick_minus()\r\n    if howManyDice > 1 then howManyDice = howManyDice - 1 end\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n\r\n--Info finding utility\r\n\r\n\r\n--Cast to check for object on pad.\r\nfunction findDieOnPad()\r\n    local pos = self.getPosition()\r\n    local objectsInArea = Physics.cast({\r\n        origin=pos, type=2, size={0.2,0.1,0.2},\r\n        direction={0,1,0}, max_distance=3\r\n    })\r\n    for _, entry in ipairs(objectsInArea) do\r\n        if entry.hit_object.tag == \"Dice\" then\r\n            return entry.hit_object\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(object, distance, angle)\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n\tlocal posX = oPos.x + math.sin( math.rad(angle+oRot.y) ) * distance\r\n\tlocal posY = oPos.y\r\n\tlocal posZ = oPos.z + math.cos( math.rad(angle+oRot.y) ) * distance\r\n\treturn {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Wait, used with corotuine\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n--For print/roll, used 2 buttons, 1 display and 1 hidden for functionality\r\n--\r\nfunction createDisplayAndFunctionButtons()\r\n    --Number display\r\n    local params = {\r\n        label=howManyDice, click_function=\"buttonClick_roll\",\r\n        function_owner=self, position={0,0.1,1.45}, height=0, width=0,\r\n        font_size=320, font_color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {0,0,0,0}\r\n    self.createButton(params)--function\r\n\r\n    --Print ON/OFF\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    params = {\r\n        label=printStatus, click_function=\"buttonClick_print\",\r\n        function_owner=self, position={0.7,0.1,-1.1}, height=0, width=0,\r\n        font_size=118, font_color={1,1,1}, color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {1,1,1,0}\r\n    params.position={0.7,0.1,-1.22}\r\n    self.createButton(params)--function\r\n\r\n    --Clear\r\n    params = {\r\n        click_function=\"buttonClick_clear\", function_owner=self,\r\n        position={-0.7,0.1,-1.22}, height=350, width=350, color={1,1,1,0}\r\n    }\r\n    self.createButton(params)\r\n\r\n    --Plus and Minus buttons\r\n    params={function_owner=self, height=350, width=350, color={0,0,0,0}}\r\n    params.click_function, params.position = \"buttonClick_minus\", {-1.42,0.1,0}\r\n    self.createButton(params)--function\r\n    params.click_function, params.position = \"buttonClick_plus\", {1.42,0.1,0}\r\n    self.createButton(params)--function\r\nend\r\n",
      "LuaScriptState": "{\"hmd\":5,\"pr\":false}",
      "GUID": "4692f7",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -8.384346E-07,
            "y": 0.100000024,
            "z": 0.000162183074
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 0.7483697,
        "posY": 1.30859,
        "posZ": 13.9558649,
        "rotX": 4.05141373E-06,
        "rotY": 83.74298,
        "rotZ": 180.0,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b2540a",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 30.6161575,
        "posY": 3.6215167,
        "posZ": 5.56570864,
        "rotX": -1.24857646E-09,
        "rotY": 180.045212,
        "rotZ": -1.76510451E-08,
        "scaleX": 4.0,
        "scaleY": 1.0,
        "scaleZ": 4.0
      },
      "Nickname": "NotePadd",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/ho6MW1W.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "XmlUI": "",
      "LuaScript": "name = 'Character'\r\nsubtitle = 'Titles'\r\nnotes = 'Notes'\r\n\r\nfunction onload(saved_data)\r\n    name = 'Character'\r\n    subtitle = 'Titles'\r\n    notes = 'Notes'\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        name = loaded_data[1]\r\n        subtitle = loaded_data[2]\r\n        notes = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction Save()\r\n    local data_to_save = {name, subtitle, notes}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction reload()\r\n  name = 'Character'\r\n  subtitle = 'Titles'\r\n  notes = 'Notes'\r\n\r\n  if saved_data ~= \"\" then\r\n      local loaded_data = JSON.decode(saved_data)\r\n      name = loaded_data[1]\r\n      subtitle = loaded_data[2]\r\n      notes = loaded_data[3]\r\n  end\r\n  self.editInput({index = 0, value = name, label = name})\r\n  self.editInput({index = 1, value = subtitle, label = subtitle})\r\n  self.editInput({index = 2, value = notes, label = notes})\r\nend\r\n\r\nfunction createAll()\r\n  local data = {input_function = \"editName\", index = 0, function_owner = self, value= name, label = name, position = {-0.1, 0.2, -0.9}, scale = {0.5, 0.5, 0.5}, width = 950, height = 140, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Character\", alignment = 2}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editSubtitle\", index = 1, function_owner = self, value = subtitle, label = subtitle, position = {0, 0.2, -0.77}, scale = {0.5, 0.5, 0.5}, width = 1100, height = 110, font_size = 80, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Character\", alignment = 3}\r\n  self.createInput(data)\r\n  local data = {input_function = \"editNotes\", index = 2, function_owner = self, value = notes,  label = notes, position = {0, 0.2, 0.1}, scale = {0.5, 0.5, 0.5}, width = 1100, height = 1500, font_size = 60, color = {0.2, 0.2, 0.2, 1}, font_color = {1, 1, 1, 1}, tooltip = \"Notes\"}\r\n  self.createInput(data)\r\n  self.createButton({click_function = 'Save',    function_owner = self,    label = 'Save',   scale = {0.5, 0.5, 0.5}, position = {0.39,0.2,0.89},    rotation = {0,0,0},    width = 450,    height = 150, color = {0.2, 0.2, 0.2, 0}, font_color = {1, 1, 1, 100},    font_size = 80})\r\n  self.createButton({click_function = 'reload',    function_owner = self,    label = 'Reload',   scale = {0.5, 0.5, 0.5}, position = {-0.39,0.2,0.89},    rotation = {0,0,0},    width = 450,    height = 150, color = {0.2, 0.2, 0.2, 0}, font_color = {1, 1, 1, 100},    font_size = 80})\r\nend\r\n\r\nfunction editName(_obj, _string, value)\r\n    name = value\r\nend\r\n\r\nfunction editSubtitle(_obj, _string, value)\r\n    subtitle = value\r\nend\r\n\r\nfunction editNotes(_obj, _string, value)\r\n    notes = value\r\nend",
      "LuaScriptState": "[\"sdf sdf\",\"Subtitle\",\"  dfsfdsf \"]",
      "GUID": "f2b477"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 8.072348,
        "posY": 1.00999987,
        "posZ": -11.5090208,
        "rotX": -1.704449E-06,
        "rotY": 179.999619,
        "rotZ": 9.702624E-07,
        "scaleX": 1.25705588,
        "scaleY": 1.0,
        "scaleZ": 1.25705588
      },
      "Nickname": "Open dice",
      "Description": "  ",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.5127759,
        "g": 0.5127759,
        "b": 0.5127759
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,false,false]",
      "GUID": "3ce16c"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": 8.077831,
        "posY": 1.01,
        "posZ": -15.4167776,
        "rotX": 1.723135E-06,
        "rotY": 179.999619,
        "rotZ": -8.924445E-07,
        "scaleX": 1.25705588,
        "scaleY": 1.0,
        "scaleZ": 1.25705588
      },
      "Nickname": "Hiden dice",
      "Description": "  ",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.245644569,
        "g": 0.245644569,
        "b": 0.245644569
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,false,false]",
      "GUID": "506498"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -6.806837,
        "posY": 1.01,
        "posZ": 11.3880777,
        "rotX": -6.31282E-07,
        "rotY": 359.988647,
        "rotZ": 1.42959948E-06,
        "scaleX": 1.25705588,
        "scaleY": 1.0,
        "scaleZ": 1.25705588
      },
      "Nickname": "eOpen dice",
      "Description": "  ",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.5127759,
        "g": 0.5127759,
        "b": 0.5127759
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,false,false]",
      "GUID": "ecc8b0"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -6.811475,
        "posY": 1.01000345,
        "posZ": 15.3977709,
        "rotX": -0.0002480132,
        "rotY": 0.004511933,
        "rotZ": -0.000104216058,
        "scaleX": 1.25705588,
        "scaleY": 1.0,
        "scaleZ": 1.25705588
      },
      "Nickname": "Hiden dice",
      "Description": "  ",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.245644569,
        "g": 0.245644569,
        "b": 0.245644569
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/958597478463166917/CB8B55C270BA45C4EABB6041B00C3AC196946342/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 5.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "function onload(saved_data)\r\n    f_size = 260\r\n    light_mode = false\r\n    center_mode = false\r\n    tooltip_show = true\r\n\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        light_mode = loaded_data[1]\r\n        center_mode = loaded_data[2]\r\n        tooltip_show = loaded_data[3]\r\n    end\r\n\r\n    createAll()\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = {light_mode, center_mode, tooltip_show}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction createAll()\r\n    s_color = {0.5, 0.5, 0.5, 95}\r\n\r\n    if light_mode then\r\n        f_color = {1,1,1,95}\r\n    else\r\n        f_color = {0,0,0,95}\r\n    end\r\n\r\n    if center_mode then\r\n        f_align = 3\r\n    else\r\n        f_align = 1\r\n    end\r\n\r\n    if tooltip_show then\r\n        ttText = self.getName() .. \"\\n----------\\n\" .. self.getDescription()\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.createInput({\r\n        value = self.getName(), \r\n        input_function = \"editName\", \r\n        label = \"Notecard\",\r\n        function_owner = self, \r\n        alignment = 3,\r\n        position = {0,0.05,-1}, \r\n        width = 1800, \r\n        height = 300, \r\n        font_size = 160, \r\n        scale={x=1, y=1, z=1},\r\n        font_color= f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createInput({\r\n        value = self.getDescription(), \r\n        label = \"\\nClick and type here\\n\\nFlip for settings\",\r\n        input_function = \"editDesc\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position = {0,0.05,0.28}, \r\n        width = 1800, \r\n        height = 1000, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0},\r\n        tooltip = ttText\r\n        })\r\n\r\n    self.createButton({\r\n        label=\"- Notecard Settings -\",\r\n        tooltip=\"- Notecard Settings -\",\r\n        click_function=\"null\",\r\n        function_owner=self,\r\n        position={0,-0.05,-1.1},\r\n        rotation={180,180,0},\r\n        height=300,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=140,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if light_mode then\r\n        lightButtonText = \"[ Set dark text ]\"\r\n    else\r\n        lightButtonText = \"[ Set light text ]\"\r\n    end\r\n    self.createButton({\r\n        label=lightButtonText,\r\n        tooltip=lightButtonText,\r\n        click_function=\"swap_fcolor\",\r\n        function_owner=self,\r\n        position={0,-0.05,-0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if center_mode then\r\n        centerButtonText = \"[ Set left align ]\"\r\n    else\r\n        centerButtonText = \"[ Set center align ]\"\r\n    end\r\n    self.createButton({\r\n        label=centerButtonText,\r\n        tooltip=centerButtonText,\r\n        click_function=\"swap_align\",\r\n        function_owner=self,\r\n        position={0,-0.05,0},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    if tooltip_show then\r\n        tooltipShowText = \"[ Hide description in tooltip ]\"\r\n    else\r\n        tooltipShowText = \"[ Show description in tooltip ]\"\r\n    end\r\n    self.createButton({\r\n        label=tooltipShowText,\r\n        tooltip=tooltipShowText,\r\n        click_function=\"swap_tooltip\",\r\n        function_owner=self,\r\n        position={0,-0.05,0.5},\r\n        rotation={180,180,0},\r\n        height=250,\r\n        width=800,\r\n        scale={x=1, y=1, z=1},\r\n        font_size=100,\r\n        font_color=s_color,\r\n        color={0,0,0,0}\r\n        })\r\n\r\n    self.createInput({\r\n        value = \"Sample Text\",\r\n        label = \"...\",\r\n        input_function = \"keepSample\", \r\n        function_owner = self, \r\n        alignment = f_align,\r\n        position={0,-0.05,1.1},\r\n        rotation={180,180,0},\r\n        width = 1800, \r\n        height = 250, \r\n        font_size = 120, \r\n        scale={x=1, y=1, z=1},\r\n        font_color=f_color,\r\n        color = {0,0,0,0}\r\n        })\r\n\r\n    setTooltips()\r\nend\r\n\r\nfunction removeAll()\r\n    self.removeInput(0)\r\n    self.removeInput(1)\r\n    self.removeInput(2)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n    self.removeButton(3)\r\nend\r\n\r\nfunction reloadAll()\r\n    removeAll()\r\n    createAll()\r\n    setTooltips()\r\n    updateSave()\r\nend\r\n\r\nfunction update_fcolor()\r\nend\r\n\r\nfunction swap_fcolor(_obj, _color, alt_click)\r\n    light_mode = not light_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_align(_obj, _color, alt_click)\r\n    center_mode = not center_mode\r\n    reloadAll()\r\nend\r\n\r\nfunction swap_tooltip(_obj, _color, alt_click)\r\n    tooltip_show = not tooltip_show\r\n    reloadAll()\r\n    setTooltips()\r\nend\r\n\r\nfunction editName(_obj, _string, value) \r\n    self.setName(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction editDesc(_obj, _string, value) \r\n    self.setDescription(value)\r\n    setTooltips()\r\nend\r\n\r\nfunction setTooltips()\r\n    title = self.getName()\r\n    if title == \"\" then\r\n        title = \"Notecard\"\r\n    end\r\n    desc = self.getDescription()\r\n\r\n    if tooltip_show then\r\n        ttText = title .. \"\\n----------\\n\" .. desc\r\n    else\r\n        ttText = \"\"\r\n    end\r\n\r\n    self.editInput({\r\n        index = 0,\r\n        value = self.getName(),\r\n        tooltip = ttText\r\n        })\r\n    self.editInput({\r\n        index = 1,\r\n        value = self.getDescription(),\r\n        tooltip = ttText\r\n        })\r\nend\r\n\r\nfunction null()\r\nend\r\n\r\nfunction keepSample(_obj, _string, value) \r\n    reloadAll()\r\nend",
      "LuaScriptState": "[true,false,false]",
      "GUID": "f22a55"
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -15.0533381,
        "posY": 1.06000006,
        "posZ": -5.258922,
        "rotX": -5.78903041E-07,
        "rotY": 179.974365,
        "rotZ": 2.51723577E-06,
        "scaleX": 1.14696169,
        "scaleY": 1.0,
        "scaleZ": 1.14696169
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/0Wu3Hhf.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "--This is the basic distance from the tool a die is spawned\r\n--This number scales with the scale of the tool\r\ndistanceFromTool = 3\r\n\r\n--This is the option to collect the dice into ascending order\r\norganizeDice = true\r\n\r\n--Enables or disables auto-cleanup\r\n-- -1 is off, 0 is no delay, and 1+ is a delay of that many seconds\r\nautoCleanDelay = -1\r\n\r\n\r\n--End of variables to edit unless you know how to script\r\n\r\nfunction onSave()\r\n    local data_to_save = {['hmd']=howManyDice, ['pr']=printResults}\r\n    saved_data = JSON.encode(data_to_save)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        howManyDice = loaded_data.hmd\r\n        printResults = loaded_data.pr\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        howManyDice = 1\r\n        printResults = false\r\n    end\r\n\r\n    math.randomseed(os.time())\r\n    diceBeingRolled = {}\r\n    clearLock = false\r\n    rollLock = false\r\n\r\n    createDisplayAndFunctionButtons()\r\nend\r\n\r\n\r\n--Rolling\r\n\r\n\r\n--Activates rolling process\r\nfunction buttonClick_roll(_, rollerColor)\r\n    local dieOnPad = findDieOnPad()\r\n    if dieOnPad ~= nil then\r\n        if rollLock == false then\r\n            --Destroys old dice\r\n            buttonClick_clear(_, rollerColor)\r\n            --Spawns and rolls new nice\r\n            rollThisDieType(dieOnPad, rollerColor)\r\n        else\r\n            broadcastToColor(\"Please wait until the dice come to a complete stop before rolling again.\", rollerColor, {1,1,1})\r\n        end\r\n    else\r\n        broadcastToColor(\"Place the die type you want to roll onto the pad and try again.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\nfunction rollThisDieType(dieOnPad, rollerColor)\r\n    function coroutine_rolling()\r\n        diceBeingRolled = {}\r\n        clearLock = true\r\n        rollLock = true\r\n        local angle = 360/howManyDice\r\n        for i=1, howManyDice do\r\n            local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n            --Makes a duplicate of the die on the pad\r\n            local die = dieOnPad.clone({position=pos})\r\n            table.insert(diceBeingRolled, die)\r\n            --Gives it a random rotation and waits 1 frame for it to happen\r\n            die.setRotation(randomRotation())\r\n            coroutine.yield(0) coroutine.yield(0) coroutine.yield(0)\r\n\r\n            --Apply some rotational force in a random direction\r\n            --die.addTorque(randomRotation())\r\n            die.roll()\r\n\r\n            wait(0.05)\r\n        end\r\n        watchForDiceToStop(rollerColor)\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rolling\")\r\nend\r\n\r\nfunction watchForDiceToStop(rollerColor)\r\n    function coroutine_placing()\r\n        dieValueTable, rollString, totalRollValue = {}, \"\", 0\r\n        local angle = 360/howManyDice\r\n        --Wait for dice to stop moving after their roll\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            while die.resting == false do\r\n                coroutine.yield(0)\r\n            end\r\n            local rollValue = die.getValue()\r\n            totalRollValue = totalRollValue + rollValue\r\n            table.insert(dieValueTable, {die=die, val=rollValue})\r\n        end\r\n        --Sort the dice by their .getValue() in ascending order\r\n        local sort_func = function(a,b) return a.val < b.val end\r\n        table.sort(dieValueTable, sort_func)\r\n        --Move the dice into order and/or prints\r\n        for i, entry in ipairs(dieValueTable) do\r\n            --Organizes dice\r\n            if organizeDice == true then\r\n                local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n                pos.y = pos.y + 0.5\r\n                entry.die.setPositionSmooth(pos)\r\n            end\r\n            --Assembles print values\r\n            if i ~= 1 then rollString = rollString .. \", \" end\r\n            rollString = rollString .. entry.val\r\n        end\r\n\r\n        rollString = rollString .. \"   TOTAL: \" .. totalRollValue\r\n\r\n        if printResults == true then\r\n            broadcastToAll(Player[rollerColor].steam_name .. \" rolled: \" .. rollString, stringColorToRGB(rollerColor))\r\n        end\r\n\r\n        clearLock = false\r\n        rollLock = false\r\n\r\n        if autoCleanDelay ~= -1 then\r\n            Timer.create({\r\n                identifier=\"uniqueDelayName\"..self.getGUID(),\r\n                delay=autoCleanDelay, function_owner=self, function_name=\"autoClearTimerFunction\"\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_placing\")\r\nend\r\n\r\n\r\n--Printing\r\n\r\n\r\n--Enables/disables printing of results\r\nfunction buttonClick_print()\r\n    if printResults == false then printResults = true\r\n    else printResults = false\r\n    end\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    self.editButton({index=2, label=printStatus})\r\nend\r\n\r\n\r\n--Clearing\r\n\r\n\r\n--Clears rolled dice when called\r\nfunction buttonClick_clear(_, rollerColor)\r\n    --This line kills and delayed auto-cleanup that might be pending\r\n    Timer.destroy(\"uniqueDelayName\"..self.getGUID())\r\n\r\n    if clearLock == false then\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            if die ~= nil then\r\n                destroyObject(die)\r\n            end\r\n        end\r\n    else\r\n        broadcastToColor(\"Please do not hit clear until dice come to a complete stop.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\n--Timer function which triggers clear when acitvated\r\nfunction autoClearTimerFunction()\r\n    buttonClick_clear()\r\nend\r\n\r\n\r\n--Plus and Minus buttons\r\n\r\n\r\n--Adds to counter (how many to roll)\r\nfunction buttonClick_plus()\r\n    howManyDice = howManyDice + 1\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n--Subtracts from counter (how many to roll)\r\nfunction buttonClick_minus()\r\n    if howManyDice > 1 then howManyDice = howManyDice - 1 end\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n\r\n--Info finding utility\r\n\r\n\r\n--Cast to check for object on pad.\r\nfunction findDieOnPad()\r\n    local pos = self.getPosition()\r\n    local objectsInArea = Physics.cast({\r\n        origin=pos, type=2, size={0.2,0.1,0.2},\r\n        direction={0,1,0}, max_distance=3\r\n    })\r\n    for _, entry in ipairs(objectsInArea) do\r\n        if entry.hit_object.tag == \"Dice\" then\r\n            return entry.hit_object\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(object, distance, angle)\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n\tlocal posX = oPos.x + math.sin( math.rad(angle+oRot.y) ) * distance\r\n\tlocal posY = oPos.y\r\n\tlocal posZ = oPos.z + math.cos( math.rad(angle+oRot.y) ) * distance\r\n\treturn {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Wait, used with corotuine\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n--For print/roll, used 2 buttons, 1 display and 1 hidden for functionality\r\n--\r\nfunction createDisplayAndFunctionButtons()\r\n    --Number display\r\n    local params = {\r\n        label=howManyDice, click_function=\"buttonClick_roll\",\r\n        function_owner=self, position={0,0.1,1.45}, height=0, width=0,\r\n        font_size=320, font_color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {0,0,0,0}\r\n    self.createButton(params)--function\r\n\r\n    --Print ON/OFF\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    params = {\r\n        label=printStatus, click_function=\"buttonClick_print\",\r\n        function_owner=self, position={0.7,0.1,-1.1}, height=0, width=0,\r\n        font_size=118, font_color={1,1,1}, color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {1,1,1,0}\r\n    params.position={0.7,0.1,-1.22}\r\n    self.createButton(params)--function\r\n\r\n    --Clear\r\n    params = {\r\n        click_function=\"buttonClick_clear\", function_owner=self,\r\n        position={-0.7,0.1,-1.22}, height=350, width=350, color={1,1,1,0}\r\n    }\r\n    self.createButton(params)\r\n\r\n    --Plus and Minus buttons\r\n    params={function_owner=self, height=350, width=350, color={0,0,0,0}}\r\n    params.click_function, params.position = \"buttonClick_minus\", {-1.42,0.1,0}\r\n    self.createButton(params)--function\r\n    params.click_function, params.position = \"buttonClick_plus\", {1.42,0.1,0}\r\n    self.createButton(params)--function\r\nend\r\n",
      "LuaScriptState": "{\"hmd\":5,\"pr\":true}",
      "GUID": "15ee4c",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -8.384346E-07,
            "y": 0.100000024,
            "z": 0.000162183074
          }
        }
      ]
    },
    {
      "Name": "Custom_Token",
      "Transform": {
        "posX": -14.5052652,
        "posY": 1.06,
        "posZ": 5.15028429,
        "rotX": -2.80617655E-06,
        "rotY": 4.85510827E-06,
        "rotZ": 3.872753E-07,
        "scaleX": 1.14696169,
        "scaleY": 1.0,
        "scaleZ": 1.14696169
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/0Wu3Hhf.png",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "Stackable": false
        }
      },
      "XmlUI": "",
      "LuaScript": "--This is the basic distance from the tool a die is spawned\r\n--This number scales with the scale of the tool\r\ndistanceFromTool = 3\r\n\r\n--This is the option to collect the dice into ascending order\r\norganizeDice = true\r\n\r\n--Enables or disables auto-cleanup\r\n-- -1 is off, 0 is no delay, and 1+ is a delay of that many seconds\r\nautoCleanDelay = -1\r\n\r\n\r\n--End of variables to edit unless you know how to script\r\n\r\nfunction onSave()\r\n    local data_to_save = {['hmd']=howManyDice, ['pr']=printResults}\r\n    saved_data = JSON.encode(data_to_save)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        howManyDice = loaded_data.hmd\r\n        printResults = loaded_data.pr\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        howManyDice = 1\r\n        printResults = false\r\n    end\r\n\r\n    math.randomseed(os.time())\r\n    diceBeingRolled = {}\r\n    clearLock = false\r\n    rollLock = false\r\n\r\n    createDisplayAndFunctionButtons()\r\nend\r\n\r\n\r\n--Rolling\r\n\r\n\r\n--Activates rolling process\r\nfunction buttonClick_roll(_, rollerColor)\r\n    local dieOnPad = findDieOnPad()\r\n    if dieOnPad ~= nil then\r\n        if rollLock == false then\r\n            --Destroys old dice\r\n            buttonClick_clear(_, rollerColor)\r\n            --Spawns and rolls new nice\r\n            rollThisDieType(dieOnPad, rollerColor)\r\n        else\r\n            broadcastToColor(\"Please wait until the dice come to a complete stop before rolling again.\", rollerColor, {1,1,1})\r\n        end\r\n    else\r\n        broadcastToColor(\"Place the die type you want to roll onto the pad and try again.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\nfunction rollThisDieType(dieOnPad, rollerColor)\r\n    function coroutine_rolling()\r\n        diceBeingRolled = {}\r\n        clearLock = true\r\n        rollLock = true\r\n        local angle = 360/howManyDice\r\n        for i=1, howManyDice do\r\n            local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n            --Makes a duplicate of the die on the pad\r\n            local die = dieOnPad.clone({position=pos})\r\n            table.insert(diceBeingRolled, die)\r\n            --Gives it a random rotation and waits 1 frame for it to happen\r\n            die.setRotation(randomRotation())\r\n            coroutine.yield(0) coroutine.yield(0) coroutine.yield(0)\r\n\r\n            --Apply some rotational force in a random direction\r\n            --die.addTorque(randomRotation())\r\n            die.roll()\r\n\r\n            wait(0.05)\r\n        end\r\n        watchForDiceToStop(rollerColor)\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_rolling\")\r\nend\r\n\r\nfunction watchForDiceToStop(rollerColor)\r\n    function coroutine_placing()\r\n        dieValueTable, rollString, totalRollValue = {}, \"\", 0\r\n        local angle = 360/howManyDice\r\n        --Wait for dice to stop moving after their roll\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            while die.resting == false do\r\n                coroutine.yield(0)\r\n            end\r\n            local rollValue = die.getValue()\r\n            totalRollValue = totalRollValue + rollValue\r\n            table.insert(dieValueTable, {die=die, val=rollValue})\r\n        end\r\n        --Sort the dice by their .getValue() in ascending order\r\n        local sort_func = function(a,b) return a.val < b.val end\r\n        table.sort(dieValueTable, sort_func)\r\n        --Move the dice into order and/or prints\r\n        for i, entry in ipairs(dieValueTable) do\r\n            --Organizes dice\r\n            if organizeDice == true then\r\n                local pos = findGlobalPosWithLocalDirection(self, distanceFromTool*self.getScale().x, angle*(i-1))\r\n                pos.y = pos.y + 0.5\r\n                entry.die.setPositionSmooth(pos)\r\n            end\r\n            --Assembles print values\r\n            if i ~= 1 then rollString = rollString .. \", \" end\r\n            rollString = rollString .. entry.val\r\n        end\r\n\r\n        rollString = rollString .. \"   TOTAL: \" .. totalRollValue\r\n\r\n        if printResults == true then\r\n            broadcastToAll(Player[rollerColor].steam_name .. \" rolled: \" .. rollString, stringColorToRGB(rollerColor))\r\n        end\r\n\r\n        clearLock = false\r\n        rollLock = false\r\n\r\n        if autoCleanDelay ~= -1 then\r\n            Timer.create({\r\n                identifier=\"uniqueDelayName\"..self.getGUID(),\r\n                delay=autoCleanDelay, function_owner=self, function_name=\"autoClearTimerFunction\"\r\n            })\r\n        end\r\n\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, \"coroutine_placing\")\r\nend\r\n\r\n\r\n--Printing\r\n\r\n\r\n--Enables/disables printing of results\r\nfunction buttonClick_print()\r\n    if printResults == false then printResults = true\r\n    else printResults = false\r\n    end\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    self.editButton({index=2, label=printStatus})\r\nend\r\n\r\n\r\n--Clearing\r\n\r\n\r\n--Clears rolled dice when called\r\nfunction buttonClick_clear(_, rollerColor)\r\n    --This line kills and delayed auto-cleanup that might be pending\r\n    Timer.destroy(\"uniqueDelayName\"..self.getGUID())\r\n\r\n    if clearLock == false then\r\n        for _, die in ipairs(diceBeingRolled) do\r\n            if die ~= nil then\r\n                destroyObject(die)\r\n            end\r\n        end\r\n    else\r\n        broadcastToColor(\"Please do not hit clear until dice come to a complete stop.\", rollerColor, {1,1,1})\r\n    end\r\nend\r\n\r\n--Timer function which triggers clear when acitvated\r\nfunction autoClearTimerFunction()\r\n    buttonClick_clear()\r\nend\r\n\r\n\r\n--Plus and Minus buttons\r\n\r\n\r\n--Adds to counter (how many to roll)\r\nfunction buttonClick_plus()\r\n    howManyDice = howManyDice + 1\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n--Subtracts from counter (how many to roll)\r\nfunction buttonClick_minus()\r\n    if howManyDice > 1 then howManyDice = howManyDice - 1 end\r\n    self.editButton({index=0, label=howManyDice})\r\nend\r\n\r\n\r\n--Info finding utility\r\n\r\n\r\n--Cast to check for object on pad.\r\nfunction findDieOnPad()\r\n    local pos = self.getPosition()\r\n    local objectsInArea = Physics.cast({\r\n        origin=pos, type=2, size={0.2,0.1,0.2},\r\n        direction={0,1,0}, max_distance=3\r\n    })\r\n    for _, entry in ipairs(objectsInArea) do\r\n        if entry.hit_object.tag == \"Dice\" then\r\n            return entry.hit_object\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--Finds linear distance on the x/z axis between object and position\r\nfunction findProximity(targetPos, object)\r\n    local objectPos = object.getPosition()\r\n    local xDistance = math.abs(targetPos.x - objectPos.x)\r\n    local zDistance = math.abs(targetPos.z - objectPos.z)\r\n    local distance = xDistance^2 + zDistance^2\r\n    return math.sqrt(distance)\r\nend\r\n\r\n--Finds a position, rotated around the Y axis, using distance you want + angle\r\n--oPos is object pos, oRot=object rotation, distance = how far, angle = angle in degrees\r\nfunction findGlobalPosWithLocalDirection(object, distance, angle)\r\n    local oPos, oRot = object.getPosition(), object.getRotation()\r\n\tlocal posX = oPos.x + math.sin( math.rad(angle+oRot.y) ) * distance\r\n\tlocal posY = oPos.y\r\n\tlocal posZ = oPos.z + math.cos( math.rad(angle+oRot.y) ) * distance\r\n\treturn {x=posX, y=posY, z=posZ}\r\nend\r\n\r\n--Gets a random rotation vector\r\nfunction randomRotation()\r\n    --Credit for this function goes to Revinor (forums)\r\n    --Get 3 random numbers\r\n    local u1 = math.random();\r\n    local u2 = math.random();\r\n    local u3 = math.random();\r\n    --Convert them into quats to avoid gimbal lock\r\n    local u1sqrt = math.sqrt(u1);\r\n    local u1m1sqrt = math.sqrt(1-u1);\r\n    local qx = u1m1sqrt *math.sin(2*math.pi*u2);\r\n    local qy = u1m1sqrt *math.cos(2*math.pi*u2);\r\n    local qz = u1sqrt *math.sin(2*math.pi*u3);\r\n    local qw = u1sqrt *math.cos(2*math.pi*u3);\r\n    --Apply rotation\r\n    local ysqr = qy * qy;\r\n    local t0 = -2.0 * (ysqr + qz * qz) + 1.0;\r\n    local t1 = 2.0 * (qx * qy - qw * qz);\r\n    local t2 = -2.0 * (qx * qz + qw * qy);\r\n    local t3 = 2.0 * (qy * qz - qw * qx);\r\n    local t4 = -2.0 * (qx * qx + ysqr) + 1.0;\r\n    --Correct\r\n    if t2 > 1.0 then t2 = 1.0 end\r\n    if t2 < -1.0 then ts = -1.0 end\r\n    --Convert back to X/Y/Z\r\n    local xr = math.asin(t2);\r\n    local yr = math.atan2(t3, t4);\r\n    local zr = math.atan2(t1, t0);\r\n    --Return result\r\n    return {math.deg(xr),math.deg(yr),math.deg(zr)}\r\nend\r\n\r\n--Wait, used with corotuine\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n--For print/roll, used 2 buttons, 1 display and 1 hidden for functionality\r\n--\r\nfunction createDisplayAndFunctionButtons()\r\n    --Number display\r\n    local params = {\r\n        label=howManyDice, click_function=\"buttonClick_roll\",\r\n        function_owner=self, position={0,0.1,1.45}, height=0, width=0,\r\n        font_size=320, font_color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {0,0,0,0}\r\n    self.createButton(params)--function\r\n\r\n    --Print ON/OFF\r\n    local printStatus = \"ON\"\r\n    if printResults == false then printStatus = \"OFF\" end\r\n    params = {\r\n        label=printStatus, click_function=\"buttonClick_print\",\r\n        function_owner=self, position={0.7,0.1,-1.1}, height=0, width=0,\r\n        font_size=118, font_color={1,1,1}, color={1,1,1}\r\n    }\r\n    self.createButton(params)--display\r\n    params.label, params.height, params.width, params.color = \"\", 350, 350, {1,1,1,0}\r\n    params.position={0.7,0.1,-1.22}\r\n    self.createButton(params)--function\r\n\r\n    --Clear\r\n    params = {\r\n        click_function=\"buttonClick_clear\", function_owner=self,\r\n        position={-0.7,0.1,-1.22}, height=350, width=350, color={1,1,1,0}\r\n    }\r\n    self.createButton(params)\r\n\r\n    --Plus and Minus buttons\r\n    params={function_owner=self, height=350, width=350, color={0,0,0,0}}\r\n    params.click_function, params.position = \"buttonClick_minus\", {-1.42,0.1,0}\r\n    self.createButton(params)--function\r\n    params.click_function, params.position = \"buttonClick_plus\", {1.42,0.1,0}\r\n    self.createButton(params)--function\r\nend\r\n",
      "LuaScriptState": "{\"hmd\":5,\"pr\":true}",
      "GUID": "d85255",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -8.384346E-07,
            "y": 0.100000024,
            "z": 0.000162183074
          }
        }
      ]
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": -14.5052662,
        "posY": 1.50999987,
        "posZ": 5.15047026,
        "rotX": -3.86502961E-06,
        "rotY": -8.217376E-06,
        "rotZ": 1.93535948E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0588639081,
        "g": 0.0541051775,
        "b": 0.0541051775
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "515875",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -15.0533371,
        "posY": 1.49019992,
        "posZ": -5.259108,
        "rotX": 270.0,
        "rotY": -1.965099E-05,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c9ff6c",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -8.175846,
        "posY": 1.20859027,
        "posZ": 11.7767544,
        "rotX": 1.0120413E-07,
        "rotY": 168.189819,
        "rotZ": -2.44632088E-06,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "39386a",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -6.671639,
        "posY": 1.20858991,
        "posZ": 11.3959913,
        "rotX": 270.0,
        "rotY": 69.6296158,
        "rotZ": 0.0,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a8b86c",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -5.54361248,
        "posY": 1.20859,
        "posZ": 11.6658449,
        "rotX": 270.0,
        "rotY": 18.7879467,
        "rotZ": 0.0,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "37ca6b",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -6.69966173,
        "posY": 1.20859015,
        "posZ": 12.8299818,
        "rotX": 0.0,
        "rotY": 266.8416,
        "rotZ": 90.0,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9ee4db",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": -5.36325359,
        "posY": 1.20859027,
        "posZ": 12.9092693,
        "rotX": -3.41509462E-06,
        "rotY": 131.086823,
        "rotZ": 89.99999,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.149030268,
        "g": 0.301973075,
        "b": 0.4431491
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "AltSound": true,
      "MaterialIndex": 1,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "44bb2f",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 6.588991,
        "posY": 1.19208,
        "posZ": -14.2823019,
        "rotX": 1.481374E-06,
        "rotY": 251.435516,
        "rotZ": 180.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "778489",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 6.493054,
        "posY": 1.1920799,
        "posZ": -12.7799625,
        "rotX": 5.122642E-06,
        "rotY": 265.530273,
        "rotZ": 270.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9215d2",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 8.214159,
        "posY": 1.19208014,
        "posZ": -11.5350418,
        "rotX": -2.59035846E-06,
        "rotY": 177.495667,
        "rotZ": 1.88913373E-06,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "43c6aa",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 6.98121452,
        "posY": 1.1920799,
        "posZ": -11.9169521,
        "rotX": 270.0,
        "rotY": 325.981628,
        "rotZ": 0.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c54dc5",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Die_6",
      "Transform": {
        "posX": 8.47457,
        "posY": 1.1920799,
        "posZ": -12.3583479,
        "rotX": -1.70754731E-06,
        "rotY": 189.255188,
        "rotZ": 270.0,
        "scaleX": 0.400000453,
        "scaleY": 0.400000453,
        "scaleZ": 0.400000453
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 0,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4c29bc",
      "RotationValues": [
        {
          "Value": 1,
          "Rotation": {
            "x": -90.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 2,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Value": 3,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -90.0
          }
        },
        {
          "Value": 4,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 90.0
          }
        },
        {
          "Value": 5,
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": -180.0
          }
        },
        {
          "Value": 6,
          "Rotation": {
            "x": 90.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "[u][b]CHESS:[/b][/u]\n\n[b]GAME OBJECTIVE:[/b]\nChess is a game played between two opponents on opposite sides of a board containing 64 squares of alternating colors. Each player has 16 pieces: 1 king, 1 queen, 2 rooks, 2 bishops, 2 knights, and 8 pawns. The goal of the game is to checkmate the other king. Checkmate happens when the king is in a position to be captured (in check) and cannot escape from capture.\n\n[b]STARTUP:[/b]\nThe player with the white pieces always moves first. White then makes a move, followed by black, then white again, then black and so on until the end of the game.\n\n[b]BASIC MOVES:[/b]\nEach type of chess piece has its own method of movement. A piece moves to a vacant square except when capturing an opponent's piece.\nExcept for any move of the knight and castling, pieces cannot jump over other pieces. A piece is captured (or taken) when an attacking enemy piece replaces it on its square. The captured piece is thereby permanently removed from the game. The king can be put in check but cannot be captured .\n\nThe king moves exactly one square horizontally, vertically, or diagonally. A special move with the king known as castling is allowed only once per player, per game (see below).\nA rook moves any number of vacant squares in a horizontal or vertical direction. It also is moved when castling.\nA bishop moves any number of vacant squares in any diagonal direction.\nThe queen moves any number of vacant squares in a horizontal, vertical, or diagonal direction.\nA knight moves to the nearest square not on the same rank, file, or diagonal. (This can be thought of as moving two squares horizontally then one square vertically, or moving one square horizontally then two squares vertically—i.e. in an “L” pattern.) The knight is not blocked by other pieces: it jumps to the new location.\n\n[b]PAWNS:[/b]\nA pawn moves straight forward one square, if that square is vacant. If it has not yet moved, a pawn also has the option of moving two squares straight forward, provided both squares are vacant. Pawns cannot move backwards.\nPawns are the only pieces that capture differently from how they move. A pawn can capture an enemy piece on either of the two squares diagonally in front of the pawn (but cannot move to those squares if they are vacant).\n\n[b]CASTLING:[/b]\nCastling consists of moving the king two squares towards a rook, then placing the rook on the other side of the king, adjacent to it.[2] Castling is only permissible if all of the following conditions hold:\nThe king and rook involved in castling must not have previously moved;\nThere must be no pieces between the king and the rook;\nThe king may not currently be in check, nor may the king pass through or end up in a square that is under attack by an enemy piece (though the rook is permitted to be under attack and to pass over an attacked square);\nThe king and the rook must be on the same rank \n\n[b]PROMOTION:[/b]\nPawns have another special ability and that is that if a pawn reaches the other side of the board it can become any other chess piece (called promotion). A pawn may be promoted to any piece. A pawn is usually promoted to a queen. Only pawns may be promoted. \n\n[b]EN PASSANT:[/b]\nThe last rule about pawns is called “en passant,” which is French for “in passing”. If a pawn moves out two squares on its first move, and by doing so lands to the side of an opponent’s pawn (effectively jumping past the other pawn’s ability to capture it), that other pawn has the option of capturing the first pawn as it passes by. This special move must be done immediately after the first pawn has moved past, otherwise the option to capture it is no longer available. \n\n[b]CHECK & CHECK MATE:[/b]\nA king is in check when it is under attack by at least one enemy piece. A piece unable to move because it would place its own king in check (it is pinned against its own king) may still deliver check to the opposing player.\nA player may not make any move which places or leaves his king in check. The possible ways to get out of check are:\nMove the king to a square where it is not threatened.\nCapture the threatening piece (possibly with the king).\nBlock the check by placing a piece between the king and the opponent's threatening piece \nIf it is not possible to get out of check, the king is checkmated and the game is over (see the next section).\nIn informal games, it is customary to announce check when making a move that puts the opponent's king in check. However, in formal competitions check is rarely announced. \n\n[b]DRAWS:[/b]\nOccasionally chess games do not end with a winner, but with a draw. There are various reasons why a chess game may end in a draw:\nThe position reaches a stalemate where it is one player’s turn to move, but his king is NOT in check and yet he does not have another legal move\nThe players may simply agree to a draw and stop playing\nThere are not enough pieces on the board to force a checkmate (example: a king and a bishop vs.a king)\nA player declares a draw if the same exact position is repeated three times (though not necessarily three times in a row)\nFifty consecutive moves have been played where neither player has moved a pawn or captured a piece.\n\nPlease note that these Notepad are one in many out there, but this is a good starting point for one way to play the game. If you’d like to find other ways to play, you can search online. \n[b]Have fun![/b]\n",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "VersionNumber": "v12.2"
}